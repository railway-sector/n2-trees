{"version":3,"file":"static/js/3273.a5e4168b.chunk.js","mappings":"gNAI4T,SAASA,EAAEC,GAAG,MAAMC,GAAEC,EAAAA,EAAAA,GAAEF,GAAGG,EAAEF,EAAEG,UAAU,GAAGD,GAAGE,OAAO,CAAC,IAAI,MAAML,KAAKG,EAAE,UAAUH,EAAEM,WAAWN,EAAEO,gBAAgBC,aAAaR,EAAEO,gBAAgBC,aAAaC,KAAKC,UAAUV,EAAEO,gBAAgBC,cAAc,YAAYR,EAAEM,YAAYN,EAAEW,kBAAkBC,aAAaZ,EAAEW,kBAAkBC,aAAaC,KAAK,MAAMZ,EAAEG,UAAUK,KAAKC,UAAUP,EAAE,CAAC,OAAOF,CAAC,CAACa,eAAeC,EAAEf,EAAEC,EAAEE,GAAG,aAAsBW,eAAiBZ,EAAEa,GAAO,IAALC,EAACC,UAAAZ,OAAA,QAAAa,IAAAD,UAAA,GAAAA,UAAA,GAAC,CAAC,EAAG,MAAME,EAAE,iBAAiBjB,GAAED,EAAAA,EAAAA,IAAEC,GAAGA,EAAEkB,EAAEL,EAAEM,SAAS,CAACN,EAAEM,UAAU,GAAGC,QAAQC,EAAAA,EAAAA,IAAEH,EAAE,KAAK,CAACI,OAAOR,EAAEQ,SAASC,EAAEH,IAAI,GAAG,MAAMG,KAAKV,EAAEA,EAAEW,SAASL,SAASI,GAAG,MAAME,GAAEC,EAAAA,EAAAA,GAAE,IAAIT,EAAEU,MAAMC,EAAE,UAAU/B,EAAEgB,KAAK,OAAOf,EAAAA,EAAAA,IAAEG,EAAAA,EAAAA,IAAEgB,EAAEY,KAAK,cAAc,IAAIf,EAAEa,MAAM,IAAIF,KAAKX,EAAEa,QAAQ,CAA5Rb,CAAEhB,EAAEC,EAAEE,EAAE,C,0BCA7gBW,eAAeS,EAAEA,EAAErB,EAAEiB,GAAG,MAAMC,GAAEnB,EAAAA,EAAAA,IAAEsB,GAAGR,EAAE,IAAII,IAAIa,KAAKhB,SAASb,EAAEiB,EAAEQ,EAAAA,QAAEK,KAAK/B,GAAGa,GAAG,OAAOf,EAAAA,EAAEkC,SAASlB,EAAE,C","sources":["../node_modules/@arcgis/core/rest/query/operations/queryPivot.js","../node_modules/@arcgis/core/rest/query/executePivotQuery.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport t from\"../../../request.js\";import{urlToObject as o,join as r}from\"../../../core/urlUtils.js\";import{normalizeCentralMeridian as i}from\"../../../geometry/support/normalizeUtils.js\";import{mapParameters as e}from\"../../operations/urlUtils.js\";import{queryLikeToQueryStringParameters as s}from\"./queryUtils.js\";function n(t){const o=s(t),r=o.outPivots;if(r?.length){for(const t of r)\"Pivot\"===t.pivotType&&t.pivotParameters.outStatistic?t.pivotParameters.outStatistic=JSON.stringify(t.pivotParameters.outStatistic):\"Unpivot\"===t.pivotType&&(t.unPivotParameters.sourceFields=t.unPivotParameters.sourceFields.join(\",\"));o.outPivots=JSON.stringify(r)}return o}async function u(t,o,r){return await a(t,o,r)}async function a(s,u,a={}){const m=\"string\"==typeof s?o(s):s,p=u.geometry?[u.geometry]:[],l=await i(p,null,{signal:a.signal}),c=l?.[0];null!=c&&((u=u.clone()).geometry=c);const y=e({...m.query,f:\"json\",...n(u)});return t(r(m.path,\"queryPivot\"),{...a,query:{...y,...a.query}})}export{u as executePivotQuery,n as queryToQueryStringParameters};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.34/esri/copyright.txt for details.\n*/\nimport{parseUrl as o}from\"../utils.js\";import{executePivotQuery as r}from\"./operations/queryPivot.js\";import t from\"../support/FeatureSet.js\";import e from\"../support/PivotQuery.js\";async function i(i,s,m){const p=o(i),u={...m},{data:a}=await r(p,e.from(s),u);return t.fromJSON(a)}export{i as executePivotQuery};\n"],"names":["n","t","o","s","r","outPivots","length","pivotType","pivotParameters","outStatistic","JSON","stringify","unPivotParameters","sourceFields","join","async","u","a","arguments","undefined","m","p","geometry","l","i","signal","c","clone","y","e","query","f","path","data","from","fromJSON"],"sourceRoot":""}