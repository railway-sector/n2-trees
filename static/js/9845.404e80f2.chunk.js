"use strict";(self.webpackChunkn2_trees=self.webpackChunkn2_trees||[]).push([[9845],{45652:(e,s,t)=>{t.d(s,{$1:()=>c,H2:()=>f,MT:()=>m,VP:()=>g,WF:()=>u,Wt:()=>a,XQ:()=>h,hK:()=>d,nS:()=>p,uh:()=>i,xY:()=>l});var o=t(50076);const r="upload-assets",n=()=>new Error;class a extends o.A{constructor(){super(`${r}:unsupported`,"Layer does not support asset uploads.",n())}}class i extends o.A{constructor(){super(`${r}:no-glb-support`,"Layer does not support glb.",n())}}class l extends o.A{constructor(){super(`${r}:no-supported-source`,"No supported external source found",n())}}class c extends o.A{constructor(){super(`${r}:not-base-64`,"Expected gltf data in base64 format after conversion.",n())}}class u extends o.A{constructor(){super(`${r}:unable-to-prepare-options`,"Unable to prepare uploadAsset request options.",n())}}class p extends o.A{constructor(e,s){super(`${r}:bad-response`,`Bad response. Uploaded ${e} items and received ${s} results.`,n())}}class d extends o.A{constructor(e,s){super(`${r}-layer:upload-failed`,`Failed to upload mesh file ${e}. Error code: ${s?.code??"-1"}. Error message: ${s?.messages??"unknown"}`,n())}}class f extends o.A{constructor(e){super(`${r}-layer:unsupported-format`,`The service allowed us to upload an asset of FormatID ${e}, but it does not list it in its supported formats.`,n())}}class m extends o.A{constructor(){super(`${r}:convert3D-failed`,"convert3D failed.")}}class g extends o.A{constructor(){super("invalid-input:no-model","No supported model found")}}class h extends o.A{constructor(){super("invalid-input:multiple-models","Multiple supported models found")}}},66776:(e,s,t)=>{t.d(s,{Z:()=>n});var o=t(31633),r=t(32186);function n(e){const s=1/(0,o.GA)(e,1);return 1!==s?new r.A({scale:[s,s,s]}):void 0}},74159:(e,s,t)=>{t.d(s,{V:()=>n,f:()=>a});var o=t(19247),r=t(32186);function n(e,s){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:i;return new o.A({x:e[t.originX],y:e[t.originY],z:e[t.originZ],spatialReference:s})}function a(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i;return new r.A({translation:[e[s.translationX],-e[s.translationZ],e[s.translationY]],rotationAxis:[e[s.rotationX],-e[s.rotationZ],e[s.rotationY]],rotationAngle:e[s.rotationDeg],scale:[e[s.scaleX],e[s.scaleZ],e[s.scaleY]]})}const i={originX:"originX",originY:"originY",originZ:"originZ",translationX:"translationX",translationY:"translationY",translationZ:"translationZ",scaleX:"scaleX",scaleY:"scaleY",scaleZ:"scaleZ",rotationX:"rotationX",rotationY:"rotationY",rotationZ:"rotationZ",rotationDeg:"rotationDeg"}},99845:(e,s,t)=>{t.d(s,{uploadAssets:()=>_});var o=t(3825),r=t(81806),n=t(76460),a=t(50346),i=t(91417),l=t(90534),c=t(49723),u=t(13312),p=t(57045),d=t(45652);const f={upload:{createFromFiles:.8,loadMesh:.2},uploadAssetBlobs:{prepareAssetItems:.9,uploadAssetItems:.1},uploadConvertibleSource:{uploadEditSource:.5,serviceAssetsToGlb:.5},uploadLocalMesh:{meshToAssetBlob:.5,uploadAssetBlobs:.5}};var m=t(13096),g=t(54901),h=t(87663);function w(e){return new y(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>{},arguments.length>2?arguments[2]:void 0)}class y{constructor(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>{},t=arguments.length>2?arguments[2]:void 0;if(this.onProgress=s,this.taskName=t,this._progressMap=new Map,this._startTime=void 0,this._timingsMap=new Map,"number"==typeof e){this._weights={};for(let s=0;s<e;s++){const t=s,o=1/e;this._weights[t]=o,this._progressMap.set(t,0)}}else this._weights=e;this.emitProgress()}emitProgress(){let e=0;for(const[s,t]of this._progressMap.entries())e+=t*this._weights[s];if(1===e&&(0,r.A)("enable-feature:esri-3dofl-upload-timings")){const e=Math.round(performance.now()-(this._startTime??0))/1e3;console.log(`${this.taskName} done in ${e} sec`);for(const[s,t]of this._timingsMap){const o=Math.round(t.end-t.start)/1e3,r=Math.round(o/e*100);console.log(this.taskName??"Task",{stepKey:s,stepTime:o,relativeTime:r})}}this.onProgress(e)}setProgress(e,s){if(this._progressMap.set(e,s),(0,r.A)("enable-feature:esri-3dofl-upload-timings")){const t=performance.now();this._startTime??=t;const o=(0,h.tE)(this._timingsMap,e,()=>({start:t,end:0}));1===s&&(o.end=t)}this.emitProgress()}simulate(e,s){return A(s=>this.setProgress(e,s),s)}makeOnProgress(e){return s=>this.setProgress(e,s)}}function A(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e=>{},s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:j;const t=performance.now();e(0);const o=setInterval(()=>{const o=performance.now()-t,r=1-Math.exp(-o/s);e(r)},x);return(0,g.hA)(()=>{clearInterval(o),e(1)})}function v(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:T;return(0,i.gr)((0,i.Kp)(e*P/s))}const T=10,b=10,P=8e-6,x=(0,i.l5)(50),j=(0,i.l5)(1e3),F=1e6,$=20*F,D=2e9,M=3;async function N(e,s,t){let{data:r,name:n,description:i}=e,c=null;try{const e=(0,l.fj)(s,"uploads"),p=(0,l.fj)(e,"info"),{data:d}=await(0,o.A)(p,{query:{f:"json"},responseType:"json"});(0,a.Te)(t);const f=(0,m.Wo)(s),g=d.maxUploadFileSize*F,h=f?D:g,y=f?Math.min($,g):$;if(r.size>h)throw new Error("Data too large");const A=(0,l.fj)(e,"register"),{data:T}=await(0,o.A)(A,{query:{f:"json",itemName:(u=n,u.replaceAll("/","_").replaceAll("\\","_")),description:i},responseType:"json",method:"post"});if((0,a.Te)(t),!T.success)throw new Error("Registration failed");const{itemID:b}=T.item;c=(0,l.fj)(e,b);const P=(0,l.fj)(c,"uploadPart"),x=Math.ceil(r.size/y),j=new Array;for(let s=0;s<x;++s)j.push(r.slice(s*y,Math.min((s+1)*y,r.size)));const N=j.slice().reverse(),S=new Array,E=w(x,t?.onProgress,"uploadItem"),k=async()=>{for(;0!==N.length;){const e=j.length-N.length,s=N.pop(),r=new FormData,n=E.simulate(e,v(s.size));try{r.append("f","json"),r.append("file",s),r.append("partId",`${e}`);const{data:n}=await(0,o.A)(P,{timeout:0,body:r,responseType:"json",method:"post"});if((0,a.Te)(t),!n.success)throw new Error("Part upload failed")}finally{n.remove()}}};for(let s=0;s<M&&0!==N.length;++s)S.push(k());await Promise.all(S);const _=(0,l.fj)(c,"commit"),{data:R}=await(0,o.A)(_,{query:{f:"json",parts:j.map((e,s)=>s).join(",")},responseType:"json",method:"post"});if((0,a.Te)(t),!R.success)throw new Error("Commit failed");return R.item}catch(p){if(null!=c){const e=(0,l.fj)(c,"delete");await(0,o.A)(e,{query:{f:"json"},responseType:"json",method:"post"})}throw p}var u}var S=t(19463),E=t(66776),k=t(74159);async function _(e,s,t){const o=e.length;if(!o)return t?.onProgress?.(1),[];const n=w(o,t?.onProgress,"uploadAssets");return Promise.all(e.map((e,o)=>async function(e,s,t){let{layer:o,ongoingUploads:n}=s;const m=n.get(e);if(m)return m;if(!function(e){return!!e.infoFor3D&&!!e.url}(o))throw new d.Wt;if(function(e,s){const{parsedUrl:t}=s;return null!=t&&e.metadata.externalSources.some(e=>(0,p.eN)(e,t))}(e,o))return t?.onProgress?.(1),e;const g=async function(e,s,t){const{metadata:o}=e,{displaySource:n}=o,m=R(n?.source,s,{checkForConversionRequired:!(0,r.A)("disable-feature:georeferenced-uploads")}),g=null!=m?async function(e,s,t){return{source:{type:"service",assets:await C(e,s,t)},original:!0,unitConversionDisabled:!0}}(m,s,t):o.externalSources.length>0?async function(e,s,t){const o=q(s),{externalSources:n}=e.metadata,a=function(e,s){for(const t of e){const e=R(t.source,s);if(e)return e}return null}(n,s);if(!a)throw new d.xY;const c=w(f.uploadConvertibleSource,t?.onProgress,"uploadConvertibleSource"),m={type:"service",assets:await C(a,s,{onProgress:c.makeOnProgress("uploadEditSource")})};e.addExternalSources([{source:m,original:!0}]);const g=a.reduce((e,s)=>{let{asset:t}=s;return t instanceof File?e+t.size:e},0),h=c.simulate("serviceAssetsToGlb",function(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:b;return(0,i.gr)((0,i.Kp)(e*P/s))}(g));try{const{source:n,transform:a,origin:i}=await async function(e,s,t){let{assets:o}=e;const n=o.map(e=>{let{assetName:s,parts:t}=e;return{assetName:s,assetHash:t[0].partHash}});let i;try{const e=(0,l.fj)(s.parsedUrl.path,"convert3D"),o=s.capabilities?.operations.supportsAsyncConvert3D;i=(await(o?Z:Y)(e,{query:{f:"json",assets:JSON.stringify(n),transportType:"esriTransportTypeUrl",targetFormat:t,async:o},responseType:"json",timeout:0})).data}catch(a){throw new d.MT}return function(e,s){const t={source:{type:"service",assets:s.assets.map(s=>{const t=(0,S.R_)(s.contentType,e.infoFor3D.supportedFormats);if(!t)throw new d.H2(t);return new p.Qp(s.assetName,s.contentType,[new p.Bq(s.assetURL,s.assetHash)])})},origin:void 0,transform:void 0};if(!(0,r.A)("disable-feature:georeferenced-uploads")&&s.transform){if(t.transform=(0,k.f)(s.transform),s.spatialReference){const e=u.A.fromJSON(s.spatialReference);t.origin=(0,k.V)(s.transform,e)}}else t.transform=(0,E.Z)(e.spatialReference);return t}(s,i)}(m,s,o);return e.transform=a,i&&(e.metadata.georeferenced=!0,t?.useAssetOrigin&&(e.vertexSpace.origin=[i.x,i.y,i.z??0],e.spatialReference=i.spatialReference)),{source:n,unitConversionDisabled:!0}}finally{h.remove()}}(e,s,t):async function(e,s,t){const o=w(f.uploadLocalMesh,t?.onProgress,"uploadLocalMesh"),r=async function(e,s,t){const o=q(s),r=await e.load(t),n=await r.toBinaryGLTF({origin:r.origin,signal:t?.signal,ignoreLocalTransform:!0,unitConversionDisabled:!0});return(0,a.Te)(t),{blob:new Blob([n],{type:"model/gltf-binary"}),assetName:`${(0,c.yS)()}.glb`,assetType:o}}(e,s,{...t,onProgress:o.makeOnProgress("meshToAssetBlob")});return{source:{type:"service",assets:await U([r],s,{...t,onProgress:o.makeOnProgress("uploadAssetBlobs")})},extent:e.extent.clone(),original:!0}}(e,s,t),h=await g;return(0,a.Te)(t),e.addExternalSources([h]),e}(e,o,t);n.set(e,g);try{await g}finally{n.delete(e)}return e}(e,s,{...t,onProgress:n.makeOnProgress(o)})))}function R(e,s){let{infoFor3D:t}=s,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!e)return null;const r=(0,p.WN)(e);if(!r)return null;const{supportedFormats:n,editFormats:a}=t,i=new Array,l=(0,S.ND)(t),c=(0,S.nr)(t);let u=!1;for(const p of r){const e=I(p,n);if(!e)return null;const{assetType:s}=e;if(o.checkForConversionRequired&&(s===l||s===c))return null;a.includes(s)&&(u=!0),i.push(e)}return u?i:null}function I(e,s){const t=(0,p.fH)(e,s);return t?{asset:e,assetType:t}:null}async function C(e,s,t){return U(e.map(e=>async function(e,s){const{asset:t,assetType:o}=e;if(t instanceof File)return{blob:t,assetName:t.name,assetType:o};const r=await t.toBlob(s);return(0,a.Te)(s),{blob:r,assetName:t.assetName,assetType:o}}(e,t)),s,t)}async function U(e,s,t){const o=w(f.uploadAssetBlobs,t?.onProgress,"uploadAssetBlobs"),r=await function(e,s,t){const o=w(e.length,t?.onProgress,"prepareAssetItems");return Promise.all(e.map(async(e,r)=>{const i=async function(e,s,t){const{blob:o,assetType:r,assetName:i}=e;let c=null;try{const e=await N({data:o,name:i},s.url,t);(0,a.Te)(t),c={assetType:r,assetUploadId:e.itemID}}catch(j){(0,a.QP)(j),n.A.getLogger("esri.layers.graphics.sources.support.uploadAssets").warnOnce(`Service ${s.url} does not support the REST Uploads API.`)}if(!c){const e=await(0,l._0)(o);if((0,a.Te)(t),!e.isBase64)throw new d.$1;c={assetType:r,assetData:e.data}}if(!c)throw new d.WF;return{item:c,assetName:i}}(await e,s,{...t,onProgress:o.makeOnProgress(r)});return(0,a.Te)(t),i}))}(e,s,{...t,onProgress:o.makeOnProgress("prepareAssetItems")});(0,a.Te)(t);const i=r.map(e=>{let{item:s}=e;return s}),{uploadResults:c}=await B(i,s,{...t,onProgress:o.makeOnProgress("uploadAssetItems")});return(0,a.Te)(t),e.map((e,t)=>function(e,s,t){const{success:o}=s;if(!o){const{error:t}=s;throw new d.hK(e.assetName,t)}const{assetHash:r}=s,{assetName:n,item:{assetType:a}}=e,{infoFor3D:{supportedFormats:i}}=t,l=(0,S.Fm)(a,i);if(!l)throw new d.H2(a);return new p.Qp(n,l,[new p.Bq(`${t.parsedUrl.path}/assets/${r}`,r)])}(r[t],c[t],s))}async function B(e,s,t){const r=A(t?.onProgress);try{const r=await(0,o.A)((0,l.fj)(s.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(e)},method:"post",responseType:"json"});if((0,a.Te)(t),r.data.uploadResults.length!==e.length)throw new d.nS(e.length,r.data.uploadResults.length);return r.data}finally{r.remove()}}function Y(e,s){return(0,o.A)(e,s)}async function Z(e,s){const t=(await(0,o.A)(e,s)).data.statusUrl;for(;;){const e=(await(0,o.A)(t,{query:{f:"json"},responseType:"json"})).data;switch(e.status){case"Completed":return(0,o.A)(e.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new Error(e.status);case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new Error}await(0,a.Pl)(O)}}function q(e){let{infoFor3D:s}=e;const t=(0,S.U9)(s);if(!t)throw new d.uh;return t}const O=(0,i.l5)(1e3)}}]);
//# sourceMappingURL=9845.404e80f2.chunk.js.map