"use strict";(self.webpackChunkn2_trees=self.webpackChunkn2_trees||[]).push([[4794],{33376:(e,t,s)=>{s.d(t,{T:()=>i});var r=s(20176);const i={getObjectId:e=>e.objectId,getAttributes:e=>e.attributes,getAttribute:(e,t)=>e.attributes[t],cloneWithGeometry:(e,t)=>new r.Om(t,e.attributes,null,e.objectId),getGeometry:e=>e.geometry,getCentroid:(e,t)=>e.ensureCentroid(t)}},55013:(e,t,s)=>{s.d(t,{k:()=>u});var r=s(81806),i=s(34154),a=s(13312),n=s(64810),o=s(97015),c=s(59187);class u{static create(e,t,s){const r=t.queryScaleRanges,i=t.displayFilterInfo;return new u(function(e,t,s){const r=function(e){switch(e.type){case"object-id":case"unique-id-simple":return`${e.fieldName} ASC`;case"unique-id-composite":return`${e.fieldNames.join(",")} ASC`}}(s.featureIdInfo);return{returnCentroid:"esriGeometryPolygon"===s.serviceGeometryType&&!e.queryMetadata.supportsCentroidOnDegeneratedQuantizedGeometry&&!e.queryMetadata.supportsDegeneratedQuantizedGeometry,returnGeometry:!0,timeReferenceUnknownClient:s.timeReferenceUnknownClient??void 0,outSpatialReference:a.A.fromJSON(e.outSpatialReference),orderByFields:"memory"===e.type?[]:[r],where:t.definitionExpression??"1=1",outFields:t.availableFields,multipatchOption:"esriGeometryMultiPatch"===s.serviceGeometryType?"xyFootprint":null,gdbVersion:t.gdbVersion,historicMoment:t.historicMoment?new Date(t.historicMoment):null,timeExtent:t.timeExtent?c.A.fromJSON(t.timeExtent):null}}(e,t,s),i,r,s.subtypeField,t.customParameters,s.geometryType,e.queryMetadata)}constructor(e,t,s,r,i,a,n){this._queryParams=e,this._displayFilter=t,this._queryScaleRanges=s,this._subtypeField=r,this._customParameters=i,this._geometryType=a,this._queryMetadata=n}get pageSize(){if(null==this._queryMetadata)throw new Error("InternalError: Service does not support paged queries");const e=this._queryMetadata.supportsMaxRecordCountFactor?4:null,t=(this._queryMetadata.maxRecordCount??8e3)*(e??1);return Math.min(8e3,t)}get objectIdsQueryPageSize(){return this._queryMetadata?.maxRecordCount??2e3}updateHistoricMoment(e){this._queryParams.historicMoment=e}updateFields(e){this._queryParams.outFields=e}createPatchFieldsQuery(e,t,s){if(!t.getSize())return null;const i=e.clone();if("*"===this._queryParams.outFields[0]){if("*"===(i.outFields??[])[0])return null;i.outFields=this._queryParams.outFields}else{const e=new Set(this._queryParams.outFields),s=[];for(const r of e)t.hasField(r)||s.push(r);if(0===s.length)return null;i.outFields=s}i.returnGeometry=!1,i.returnCentroid=!1,i.quantizationParameters=null,i.cacheHint=!0;const a={inner:i,customParameters:this._customParameters};if((0,r.A)("esri-tiles-debug")&&null!=s){const e=s.chunkId.toString().replaceAll("/",".");a.customParameters=a.customParameters?{...a.customParameters,chunkId:e}:{chunkId:e}}return a}createQuery(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!this._queryParams)throw new Error("InternalError: queryInfo should be defined");return{inner:new o.A({...this._queryParams,...e}),customParameters:this._customParameters}}createTileQuery(e,t){if(null==this._queryMetadata)throw new Error("InternalError: Service does not support tile queries");const s=this.createQuery(t),a=s.inner;if(this._queryScaleRanges?.length){const t=this._queryScaleRanges.filter(t=>(!t.minScale||t.minScale>=e.maxScale)&&(!t.maxScale||t.maxScale<=e.minScale)).map(e=>e.subtypeCode);if(t.length){const e=`${this._subtypeField} IN (${t})`;a.where=(0,i.mA)(a.where,e)}}if(this._displayFilter&&(a.where=(0,i.mA)(a.where,(0,n.Ch)(this._displayFilter,e.minScale,e.maxScale))),a.quantizationParameters=t.quantizationParameters??e.getQuantizationParameters(),a.resultType="tile",a.geometry=e.extent,this._queryMetadata.supportsQuantization?"esriGeometryPolyline"===this._geometryType&&(a.maxAllowableOffset=e.resolution*(0,r.A)("feature-polyline-generalization-factor")):"esriGeometryPolyline"!==this._geometryType&&"esriGeometryPolygon"!==this._geometryType||(a.maxAllowableOffset=e.resolution,"esriGeometryPolyline"===this._geometryType&&(a.maxAllowableOffset*=(0,r.A)("feature-polyline-generalization-factor"))),a.defaultSpatialReferenceEnabled=this._queryMetadata.supportsDefaultSpatialReference,a.compactGeometryEnabled=this._queryMetadata.supportsCompactGeometry,this._queryMetadata.supportsMaxRecordCountFactor&&(a.maxRecordCountFactor=4),(0,r.A)("esri-tiles-debug")){const t=e.id.replaceAll("/",".");s.customParameters=s.customParameters?{...s.customParameters,tileId:t}:{tileId:t}}return s}createPagedTileQuery(e,t){const s=this.pageSize;return this.createTileQuery(e,{start:s*t,num:s,returnExceededLimitFeatures:!0})}createPagedQuery(e,t){const s=this.pageSize;return this.createQuery({start:s*e,num:s,returnExceededLimitFeatures:!0,maxRecordCountFactor:4,quantizationParameters:t,cacheHint:!0})}createObjectIdsQuery(e){return this.createQuery({objectIds:e,outFields:["*"]})}}},64794:(e,t,s)=>{s.r(t),s.d(t,{default:()=>cs});var r=s(50076),i=s(54901),a=s(81806),n=s(77944),o=s(50346),c=s(47249),u=s(68134),l=s(76931),d=s(88943),h=s(88235),p=s(5095);class _{constructor(e){this._client=e,this.layerView=this._client.createInvokeProxy(""),this.container=this._client.createInvokeProxy("container"),this._eventLog=this._client.createInvokeProxy("eventLog")}onEvent(e){(0,d.oV)(this._eventLog.onEvent(e))}}var f=s(30726),g=s(48611),y=s(15011),m=s(40181),b=s(93453),I=(s(15389),s(96345),s(31612));const v=128;function w(e){switch(e){case 1:case 8:case 32:return-1;case 2:case 64:return 0;case 4:case 16:case v:return 1}}function S(e){switch(e){case 1:case 2:case 4:return-1;case 8:case 16:return 0;case 32:case 64:case v:return 1}}class k{constructor(e,t,s,r){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;this.tileKey=e,this._bufferingEnabled=t,this._sizeHint=i,this._meshes={self:new I.U(this.id,this._sizeHint),neighbors:new Array},this._currentRecordOverlaps=0,this._currentEntityOverlaps=0;const a=r?1:0;this._copyBufferedDataIntoSelf=s&&this._bufferingEnabled&&e.level===a}get id(){return this.tileKey.id}vertexStart(){return this._meshes.self.vertexStart()??0}vertexCount(){return this._meshes.self.vertexCount()}indexCount(){return this._meshes.self.indexCount()}indexEnsureSize(e){this._meshes.self.indexEnsureSize(e)}entityStart(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e;this._currentEntityOverlaps=0,this._meshes.self.entityStart(e,t)}entityRecordCount(){return this._meshes.self.entityRecordCount()}entityEnd(){if(this._meshes.self.entityEnd(),this._bufferingEnabled){if(this._copyBufferedDataIntoSelf)return;for(let e=0;e<8;e++){const t=1<<e;this._currentEntityOverlaps&t&&this._meshes.neighbors[e].entityEnd()}}}recordStart(e,t,s){this._currentRecordOverlaps=0,this._meshes.self.recordStart(e,t,s)}recordEnd(){const e=this._meshes.self.recordEnd(this._currentRecordOverlaps);return e&&0!==this._currentRecordOverlaps?(this._copyIntoNeighbors(),this._currentEntityOverlaps|=this._currentRecordOverlaps,!0):e}recordBounds(e,t,s,r){this._bufferingEnabled&&this._addOverlap(e,t,s,r)}recordCount(){return this._meshes.self.recordCount()}metricStart(e){this._meshes.self.metricStart(e)}metricBoxWrite(e){this._meshes.self.metricBoxWrite(e)}metricEnd(){this._meshes.self.metricEnd()}vertexWrite(e){this._meshes.self.vertexWrite(e)}vertexWriteF32(e){this._meshes.self.vertexWriteF32(e)}vertexWriteRegion(e){this._meshes.self.vertexWriteRegion(e)}indexWrite(e){this._meshes.self.indexWrite(e)}serialize(e){const t={message:[],transferList:[]},s=this._meshes.self.serialize();return t.message.push({tileId:this.tileKey.id,...s.message}),t.transferList.push(...s.transferList),this._meshes.neighbors.forEach((s,r)=>{const i=s.serialize(),a=1<<r,n=w(a),o=S(a),c=new b.A(this.tileKey).getNormalizedNeighbor(n,o,e);t.message.push({tileId:c.id,...i.message}),t.transferList.push(...i.transferList)}),t}_addOverlap(e,t,s,r){const i=Math.min(p.CQ/2,s),a=Math.min(p.CQ/2,r),n=255^((e<0+i?148:e>=p.CQ-i?41:189)|(t<0+a?224:t>=p.CQ-a?7:231));this._currentRecordOverlaps|=n}_copyIntoNeighbors(){for(let e=0;e<8;e++){const t=1<<e;if(this._currentRecordOverlaps&t){if(this._copyBufferedDataIntoSelf){const e=-w(t)*p.CQ,s=-S(t)*p.CQ;if(0!==s)continue;this._meshes.self.copyLast(e,s);continue}if(!this._meshes.neighbors[e]){const s=Math.floor(this._sizeHint/16);this._meshes.neighbors[e]=new I.U(t,s)}const s=this._meshes.neighbors[e],r=-w(t)*p.CQ,i=-S(t)*p.CQ;s.copyLastFrom(this._meshes.self,r,i)}}}}class x{}var F=s(92045),A=s(23479);class C{constructor(){this._defaultResult=null,this._backgroundFillResult=null}static async from(e,t){const s=new C;return s.setDefault(await e.createMeshWriters(t.meshes)),s}size(){return 1}getDefault(){return this._defaultResult}setDefault(e){this._defaultResult=e}getBackgroundFill(){return this._backgroundFillResult}setBackgroundFill(e){this._backgroundFillResult=e}hasArcadeDependency(e){return this._defaultResult?.some(t=>t.hasArcadeDependency(e))??!1}match(e,t,s){const r=this.doMatch(e,t)||this.getDefault();if(r&&r.length>0){const e=this.getBackgroundFill();if(e)return[...e,...r]}return r}getSortKey(e,t){return 0}doMatch(e,t){return null}async fetchResources(e,t){}}class O extends C{static async fromDictionaryRenderer(e,t){const s=await A.n.from(t.dictionaryInfo,t.userConfig,t.fieldMap);return new O(e,s)}constructor(e,t){super(),this._context=e,this._evaluator=t,this._controlStringToPromise=new Map,this._controlStringToGroup=new Map}async fetchResources(e,t){const s=t.getCursor(),r=new Set;for(;s.next();){const e=this._evaluateControlString(s);e&&r.add(e)}const i=Array.from(r.values()).map(t=>this._ensureGroup(e,t));await Promise.all(i)}match(e,t){const s=this._evaluateControlString(e);return s?this._controlStringToGroup.get(s):null}_evaluateControlString(e){const t=e.readLegacyFeatureWorldSpace();return this._evaluator.evaluate(t,0,e.fields,null)}_ensureGroup(e,t){let s=this._controlStringToPromise.get(t);return null==s&&(s=this._fetchGroup(e,t),this._controlStringToPromise.set(t,s)),s}async _fetchGroup(e,t){const s=await e.fetchDictionaryResourceImmediate({type:"dictionary-request",controlString:t});if(!s)return;const r=await this._context.createMeshWriters(s.meshes);this._controlStringToGroup.set(t,r)}}class q extends C{constructor(e,t){super(),this._intervals=[],this._isMaxInclusive=t,this._field=e}static async fromIntervalSchema(e,t){const s=await e.storage.createComputedField(t),r=new q(s,t.isMaxInclusive);await Promise.all(t.intervals.map(async t=>{const s=await e.createMeshWriters(t.meshes);r.add(t,s)}));const i=await e.createMeshWriters(t.defaultSymbol);r.setDefault(i);const a=await e.createMeshWriters(t.backgroundFill);return r.setBackgroundFill(a),r}add(e,t){this._intervals.push({interval:e,result:t}),this._intervals.sort((e,t)=>e.interval.min-t.interval.min)}size(){return super.size()+this._intervals.length}hasArcadeDependency(e){return this._field?.hasArcadeDependency(e)||this._intervals.some(t=>t.result.some(t=>t.hasArcadeDependency(e)))}doMatch(e,t){const s=this._field?.read(e,t);if(null==s||isNaN(s)||s===1/0||s===-1/0)return null;for(let r=0;r<this._intervals.length;r++){const{interval:e,result:t}=this._intervals[r],i=s>=e.min,a=this._isMaxInclusive?s<=e.max:s<e.max;if(i&&a)return t}return null}}class M extends C{static async fromLabelSchema(e,t){const s=t.classes.map(async t=>{const s=await e.createMeshWriters(t.meshes);return{minScale:t.minScale,maxScale:t.maxScale,meshes:s,expression:null,where:await e.storage.createWhereClause(t.where)}}),r=await Promise.all(s);return new M(r)}constructor(e){super(),this._labels=e}match(e,t,s){if(!this._labels.length)return null;const r=this._getLabels(t.$view.scale),i=[];for(const a of r)a.where&&!a.where(e,s)||i.push(...a.meshes);return i}hasArcadeDependency(e){return this._labels.some(t=>t.meshes.some(t=>t.hasArcadeDependency(e)))}_getLabels(e){return this._labels.filter(t=>this._validForTileScale(t,e))}_validForTileScale(e,t){const s=t-t/4,r=t+t/2;return(!e.minScale||e.minScale>=s)&&(!e.maxScale||e.maxScale<=r)}}class T extends C{constructor(e,t){super(),this._defaultSymbolSortKey=0,this._nullResult=null,this._resultsMap=new Map,this._fields=[],this._fields=e,this._separator=t||""}static async fromMatcherSchema(e,t){const s=t.expression?[e.storage.createComputedField({expression:t.expression})]:[t.field?e.storage.createComputedField({field:t.field}):null,t.field2?e.storage.createComputedField({field:t.field2}):null,t.field3?e.storage.createComputedField({field:t.field3}):null],r=(await Promise.all(s)).filter(e=>!!e),i=new T(r,t.fieldDelimiter),a=await e.createMeshWriters(t.defaultSymbol);i.setDefault(a);const n=await e.createMeshWriters(t.backgroundFill);return i.setBackgroundFill(n),await Promise.all(t.map.map(async(t,s)=>{const r=await e.createMeshWriters(t.symbol);"<Null>"===t.value?i.setNullResult(r):i.add(t.value,r,s+1)})),i}setNullResult(e){this._nullResult=e}getSortKey(e,t){const s=this._getValueFromFields(e,t);if(null==s||""===s||"<Null>"===s)return 0;const r=this._resultsMap.get(s.toString());return r?r.sortKey:this._defaultSymbolSortKey}add(e,t,s){this._resultsMap.set(e.toString(),{meshWriters:t,sortKey:s}),this._defaultSymbolSortKey=Math.max(this._defaultSymbolSortKey,s+1)}size(){return super.size()+this._resultsMap.size}hasArcadeDependency(e){return this._fields.some(t=>t.hasArcadeDependency(e))||[...this._resultsMap.values()].some(t=>t.meshWriters.some(t=>t.hasArcadeDependency(e)))||this._nullResult?.some(t=>t.hasArcadeDependency(e))||!1}doMatch(e,t){const s=this._getValueFromFields(e,t);if(null!==this._nullResult&&(null==s||""===s||"<Null>"===s))return this._nullResult;if(null==s)return null;const r=s.toString();return this._resultsMap.get(r)?.meshWriters}_getValueFromFields(e,t){const s=[];for(const r of this._fields){const i=r.read(e,t);null==i||""===i?s.push("<Null>"):s.push(i)}return s.join(this._separator)}}async function R(e,t){switch(t.type){case"simple":case"heatmap":case"dot-density":case"pie-chart":return C.from(e,t);case"interval":return q.fromIntervalSchema(e,t);case"dictionary":return O.fromDictionaryRenderer(e,t);case"label":return M.fromLabelSchema(e,t);case"map":return T.fromMatcherSchema(e,t);case"subtype":return P.fromSubtypes(e,t);case"cluster":return E.fromClusterSchema(e,t);case"track":return D.fromTrackSchema(e,t);default:throw new Error("Impl")}}class P extends C{constructor(e,t){super(),this._subMatchers=e,this._subtypeField=t}static async fromSubtypes(e,t){const s=new Map,r=[];for(const i in t.renderers){const a=parseInt(i,10),n=R(e,t.renderers[i]).then(e=>s.set(a,e));r.push(n)}return await Promise.all(r),new P(s,t.subtypeField)}match(e,t,s){const r=e.readAttribute(this._subtypeField),i=this._subMatchers.get(r);return i?i.match(e,t,s):null}hasArcadeDependency(e){for(const t of this._subMatchers.values())if(t.hasArcadeDependency(e))return!0;return!1}}class E extends C{static async fromClusterSchema(e,t){const[s,r]=await Promise.all([R(e,t.feature),R(e,t.cluster)]);return new E(s,r)}constructor(e,t){super(),this._featureMatcher=e,this._clusterMatcher=t}match(e,t,s){return 1===e.readAttribute("cluster_count")?this._featureMatcher.match(e,t,s):this._clusterMatcher.match(e,t,s)}hasArcadeDependency(e){return this._featureMatcher.hasArcadeDependency(e)||this._clusterMatcher.hasArcadeDependency(e)}}class D extends C{static async fromTrackSchema(e,t){const[s,r,i]=await Promise.all([R(e,t.previousObservation),R(e,t.latestObservation),R(e,t.trackLine)]);return new D(s,r,i)}constructor(e,t,s){super(),this._previousObservationMatcher=e,this._latestObservationMatcher=t,this._trackLineMatcher=s}match(e,t,s){switch(e.readAttribute(F.EA)){case 0:return this._trackLineMatcher.match(e,t,s);case 1:return this._latestObservationMatcher.match(e,t,s);case 2:return this._previousObservationMatcher.match(e,t,s)}return null}hasArcadeDependency(e){return this._trackLineMatcher.hasArcadeDependency(e)||this._latestObservationMatcher.hasArcadeDependency(e)||this._previousObservationMatcher.hasArcadeDependency(e)}}class j extends x{static async create(e,t){const s=await R(e,t.symbology),r=t.labels?await R(e,t.labels):null;return new j(s,r)}constructor(e,t){super(),this._symbology=e,this._labels=t}destroy(){}async enqueueMatcherRequests(e,t){await Promise.all([this._symbology.fetchResources(e,t),this._labels?.fetchResources(e,t)])}enqueueWriterRequests(e,t,s,r){const i=this._symbology.match(t,s,r);if(i){for(const r of i)r.enqueueRequest(e,t,s);if(this._labels){const i=this._labels.match(t,s,r);if(!i)return;for(const r of i)r.enqueueRequest(e,t,s)}}}write(e,t,s,r,i,a){const n=this._symbology.match(s,r,i);if(n){for(const i of n)i.write(e,t,s,r,a);if(e.entityRecordCount()>=1&&this._labels){const o=this._labels.match(s,r,i);if(!o)return;for(const i of o)i.setReferences(n),i.write(e,t,s,r,a)}}}getSortKey(e,t){return this._symbology.getSortKey(e,t)}hasArcadeDependency(e){return!(!this._symbology.hasArcadeDependency(e)&&!this._labels?.hasArcadeDependency(e))}}var z=s(62924),U=s(62131);class L{constructor(e,t,s,r,i){this.storage=e,this.proxy=t,this.viewParams=s,this.registry=r,this.fieldsMap=i}async createMeshWriters(e){const t=e.map(e=>this.registry.createMeshWriter(this.storage,this.proxy,this.viewParams,e,this.fieldsMap));return Promise.all(t)}}var G=s(34429);class N{constructor(e){this._outstandingMessages=[],this._queue=new G.QueueProcessor({concurrency:e.concurrency,process:t=>e.process(t)})}async push(e){if(e.end)return await Promise.all(this._outstandingMessages),await this._queue.push(e),void(this._outstandingMessages=[]);const t=this._queue.push(e);return this._outstandingMessages.push(t),t}}var Q=s(13312),B=s(98618),W=s(20176),V=s(24586),$=s(1900),K=s(74014);class H{static async create(e,t){if("count"===t.statisticType){const e=new K.G(1);return new H(t.name,t.alias,t.type,t.statisticType,e)}const s=await e.createComputedField({expression:t.onStatisticExpression?.expression,field:t.onStatisticField});return new H(t.name,t.alias,t.type,t.statisticType,s)}constructor(e,t,s,r,i){this.name=e,this.alias=t,this.type=s,this.statisticType=r,this.computed=i}}var J=s(54099),Z=s(42294),Y=s(33376),X=s(12034),ee=s(81456);class te{constructor(e){this.subscription=e,this.handledChunks=new Set}destroy(){}}class se{constructor(e,t,s){this._source=e,this._attributeStore=t,this._sqlOptions=s,this._sendStates=new Map}destroy(){}get enablePixelBuffering(){return!0}get isAggregate(){return!1}get usedMemory(){return 0}onSubscribe(e){const t=this.createState(e);this._sendStates.set(e.key.id,t),this.updateChunks()}onUnsubscribe(e){this._sendStates.get(e.key.id)?.destroy(),this._sendStates.delete(e.key.id)}get hasSubscribers(){return this._sendStates.size>0}requiresInvalidation(){return!1}invalidate(){const e=Array.from(this._sendStates.values());this._sendStates.clear();for(const t of e)t.destroy(),this.onSubscribe(t.subscription)}invalidateAttributeData(e){}hasArcadeDependency(e){return!1}getFeatureObjectIdsForAggregate(e){throw new Error("InternalError: AggregateId lookup not supported")}getDisplayIds(e){return this.displayMap(e,e=>e,e=>e)}getDisplayAndObjectIds(e){return this.displayMap(e,e=>e,(e,t,s)=>[e,s])}afterUpdateChunks(){}}class re extends se{constructor(e,t,s,r,i){super(e,t,i),this.spatialReference=s,this.aggregateFields=r,this._arcadeDependencies=new Set,this.events=new J.bk,this.featureAdapter=Y.T;for(const a of r)(0,ee.QY)(this._arcadeDependencies,a.computed)}get aggregateQueryEngine(){return this._aggregateQueryEngine||(this._aggregateQueryEngine=new X.do({featureStore:this,fieldsIndex:this._metadata.fieldsIndex,geometryType:this._metadata.geometryType,featureIdInfo:this._metadata.featureIdInfo,spatialReference:this.spatialReference})),this._aggregateQueryEngine}get isAggregate(){return!0}removeChunks(e){}hasArcadeDependency(e){return this._arcadeDependencies.has(e)}forEach(e){return this.forEachAggregateWorldSpace(e)}forEachInBounds(e,t){}forEachBounds(e,t){const s=(0,Z.vt)();for(const r of e){const e=(0,B.jQ)(s,r.geometry,!1,!1);e&&t(e)}}}class ie{constructor(e,t,s,r,i){this.subscription=e,this.reader=t,this.clear=s,this.end=r,this.debugInfo=i,this.type="append"}get id(){return this.subscription.tile.id}createMessage(e,t,s){return{type:"append",clear:this.clear,id:this.id,append:e,end:this.end,debugInfo:this.debugInfo,subscriptionVesrion:this.subscription.version,version:t,attributeEpoch:s}}}class ae{constructor(e,t,s,r,i){this.subscription=e,this.reader=t,this.remove=s,this.end=r,this.debugInfo=i,this.type="update"}get id(){return this.subscription.tile.id}createMessage(e,t,s){return{type:"update",id:this.id,modify:e,debugInfo:this.debugInfo,remove:this.remove,version:t,subscriptionVesrion:this.subscription.version,end:this.end,attributeEpoch:s}}}var ne=s(37150),oe=s(62010),ce=s(77408),ue=s(88284);class le extends te{constructor(e,t){super(e),this.bins=new Map,this.featureCache=new Map,this.done=!1,this._store=t}reset(){this.destroy(),this.done=!1}destroy(){const e=this.subscription.tile.key.level;for(const t of this.featureCache.keys())this._store.releaseDisplayIdForObjectId(`${t}.${e}`);this.bins.clear(),this.featureCache.clear(),this.handledChunks.clear()}get tile(){return this.subscription.tile}*featuresWorldSpace(){for(const e of this.featureCache.values()){const t=e.clone();t.geometry&&(0,B.Ch)(t.geometry,t.geometry,!1,!1,this.subscription.tile.transform),yield t}}}class de extends re{static async create(e,t,s,r,i){const a=t.metadata.outSpatialReference,n=new ne.l({spatialReference:a}),o=await Promise.all(e.fields.map(async e=>H.create(n,e))),c=e.featureFilter?await oe.A.create({geometryType:t.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:t.metadata.timeInfo,fieldsIndex:t.metadata.fieldsIndex,spatialReference:a,filterJSON:e.featureFilter}):null;return"geohash"===e.index.type&&await(0,V.Nk)(a,Q.A.WGS84),new de(e,c,r,o,a,t,s,i)}constructor(e,t,s,r,i,a,n,o){super(a,n,i,r,o),this._schema=e,this._featureFilter=t,this._arcadeContextInfo=s,this._metadata=ce.i.createFeature({geometryType:"esriGeometryPolygon",featureIdInfo:{type:"object-id",fieldName:"aggregateId"},fieldsIndex:new $.A(e.fields).toJSON(),globalIdField:null,spatialReference:a.metadata.spatialReference,outSpatialReference:a.metadata.outSpatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,dateFieldsTimeZone:null,typeIdField:null,types:null})}createState(e){return new le(e,this._attributeStore)}async*applyOverrideUpdate(e){for(const t of this._sendStates.values()){t.reset();const e=new ie(t.subscription,ue.K.empty(this._source.metadata),!0,!1,{});yield e}}displayMap(e,t,s){const r=new Map(e.map(e=>[t(e),e])),i=[];for(const a of this._sendStates.values())for(const e of a.featuresWorldSpace()){const{objectId:t,displayId:a}=e,n=r.get(t);if(null!=n){const e=s(a,n,t);i.push(e),r.delete(t)}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[];for(const i of this._sendStates.values())for(const e of i.featuresWorldSpace())t.has(e.displayId)&&!s.has(e.objectId)&&(e.geometry&&r.push({...(0,B.oN)(e,this._metadata.geometryType,!1,!1),displayId:e.displayId}),s.add(e.objectId));return{features:[],aggregates:r,tracks:[]}}getFeatureObjectIdsForAggregate(e){for(const t of this._sendStates.values())for(const s of t.bins.values())if(s.id===e)return Array.from(s.containedObjectIds);return[]}async*updateChunks(){for(const e of this._sendStates.values())yield*this._update(e,this._source)}forEachAggregateWorldSpace(e){const t=new Set;for(const s of this._sendStates.values())for(const r of s.featuresWorldSpace())t.has(r.objectId)||(e(r),t.add(r.objectId))}_createIndexOptions(e){switch(this._schema.index.type){case"geohash":return{type:"geohash",fields:this.aggregateFields,featureFilter:this._featureFilter,geohashLevel:this._schema.index.fixBinLevel,spatialReference:this.spatialReference,arcadeContextInfo:this._arcadeContextInfo,scale:e.scale,sqlOptions:this._sqlOptions};case"grid":{const t=this._schema.index.fixedBinLevel,s=null!=t?e.tileInfoView.getLODInfoAt(t).scale:e.scale;return{type:"grid",fields:this.aggregateFields,cellSize:this._schema.index.size,featureFilter:this._featureFilter,spatialReference:this.spatialReference,arcadeContextInfo:this._arcadeContextInfo,scale:s,sqlOptions:this._sqlOptions}}}}async*_update(e,t){const{handledChunks:s,subscription:r,bins:i,featureCache:a}=e,n=r.tile;if(e.done)return;for(const _ of t.chunks()){if(s.has(_.chunkId))continue;s.add(_.chunkId);const t=_.queryInfo;if("tileId"in t){const e=new b.A(t.tileId);if(e.level!==n.level||e.world!==n.key.world)continue}_.getAggregateIndex(this._createIndexOptions(e.tile)).putBounded(i,e.tile.extent,e.tile.resolution)}const o=[],c=r.tile.transform,u=r.tile.key.level;for(const _ of i.values()){let e=a.get(_.id);if(e)e.attributes=_.getAttributes();else{const t=_.getGeometry(this.spatialReference,c);e=new W.Om(t,_.getAttributes(),null,_.id),t||(e.centroid=_.getGeometricCentroid(this.spatialReference,c)),e.displayId=this._attributeStore.createDisplayIdForObjectId(`${e.objectId}.${u}`),a.set(_.id,e)}o.push(e)}this.events.emit("changed"),e.done=!t.updateTracking.updating;const l=ue.K.fromOptimizedFeatures(o,this._metadata,c),d=l.getCursor(),h=e.subscription.tile.createArcadeEvaluationOptions(this._arcadeContextInfo);for(;d.next();)this._attributeStore.setAttributeData(d.getDisplayId(),d,h,this._sqlOptions);const p=new ae(e.subscription,l,[],e.done,{});yield p}}var he=s(1484),pe=s(62812),_e=s(91996);class fe{constructor(e,t){this.inner=e,this.displayId=t}}const ge=128;class ye extends te{constructor(e){super(e),this.didSend=!1,this.done=!1}}class me{constructor(e,t,s,r,i){this._level=e,this._scale=t,this._indexOptions=s,this._clusterRadius=r,this._store=i,this._cells=new Map,this._handledChunks=new Set,this._statistics=new Map,this._clusters=new Map}destroy(){this._clearClusters()}_clearClusters(){for(const e of this._clusters.values())this._store.releaseDisplayIdForObjectId(e.inner.id);this._clusters.clear()}*aggregatesWorldSpace(){for(const e of this._clusters.values()){const t=e.inner.getCentroid(null),s=new W.Om(t,e.inner.getAttributes(),null,e.inner.id,e.displayId);yield s}}clusters(){return this._clusters.values()}updateChunks(e,t){let s=!1;for(const n of e){const e=n.queryInfo;"tileId"in e&&new b.A(e.tileId).level!==this._level||(this._handledChunks.has(n.normalizedChunkId)||(this._handledChunks.add(n.normalizedChunkId),s=!0,n.getAggregateIndex({...this._indexOptions,scale:this._scale}).put(this._cells)))}const r={xMin:1/0,yMin:1/0,xMax:-1/0,yMax:-1/0},i=(0,_e.p)(this._indexOptions.spatialReference,this._scale),a=this._indexOptions.cellSize;for(const{subscription:n}of t){const e=n.tile.bounds,t=Math.floor(e[0]*i/a),s=Math.floor(e[1]*i/a),o=Math.ceil(e[2]*i/a),c=Math.ceil(e[3]*i/a);r.xMin=Math.min(r.xMin,t),r.yMin=Math.min(r.yMin,s),r.xMax=Math.max(r.xMax,o),r.yMax=Math.max(r.yMax,c)}return null!=this._lastCellBounds&&r.xMin===this._lastCellBounds.xMin&&r.yMin===this._lastCellBounds.yMin&&r.yMin===this._lastCellBounds.yMin&&r.yMax===this._lastCellBounds.yMax||(s=!0,this._lastCellBounds=r),s&&this._clusterCells(r),s}async updateStatistics(e){let t=!1;for(const s of this._clusters.values())s.inner.count>1&&(t=this._updateAggregateStatistics(this._statistics,s.inner)||t);if(t){const t=Array.from(this._statistics.entries()).map(e=>{let[t,s]=e;return{fieldName:t,minValue:s.minValue,maxValue:s.maxValue}});await e.container.updateStatistics(this._level,t)}}createAggregateFeatures(e,t){const s=e.subscription,r=[],i=s.tile.transform;for(const a of this._clusters.values()){let e=a.inner.getCentroidX(i);const t=a.inner.getCentroidY(i),n=s.tile.lod,o=n.wrap?n.worldSize[0]:null,c=1===a.inner.count?a.inner.firstObjectId:a.inner.id,u=a.displayId;if(null!=o)if(1===o){const s=new he.A([],[e,t]),i=new W.Om(s,a.inner.getAttributes(),null,c,u);i.geometry.coords[0]-=p.CQ,r.push(i);const n=new he.A([],[e,t]),o=new W.Om(n,a.inner.getAttributes(),null,c,u);o.geometry.coords[0]+=p.CQ,r.push(o)}else e>p.CQ+p.CQ/2?e-=o*p.CQ:e<-256&&(e+=o*p.CQ);if(e<p.CQ+ge&&e>=-128&&t<p.CQ+ge&&t>=-128){const s=new he.A([],[e,t]),i=new W.Om(s,a.inner.getAttributes(),null,c,u);r.push(i)}}return ue.K.fromOptimizedFeatures(r,t,s.tile.transform)}_clusterCells(e){let t=Array.from(this._cells.values());t=t.sort((e,t)=>t.count-e.count);const s=[];for(const n of this._clusters.values())s.push(n.inner.id);this._clusters.clear();const r=this._clusterRadius*(1/(0,_e.p)(this._indexOptions.spatialReference,this._scale)),i=1+this._clusterRadius/this._indexOptions.cellSize,a=new Set;for(const n of t){if(a.has(n.id))continue;if(n.gridX<e.xMin||n.gridX>e.xMax||n.gridY<e.yMin||n.gridY>e.yMax)continue;const t=this._store.createDisplayIdForObjectId(n.id),s=new fe(n.clone(),t);a.add(n.id),this._clusters.set(n.id,s);const o=n.centroidXWorld,c=n.centroidYWorld;for(let e=n.gridY-i;e<=n.gridY+i;e++)for(let t=n.gridX-i;t<=n.gridX+i;t++){if(e===n.gridY&&t===n.gridX)continue;const i=this._cells.get(pe.L.createId(t,e));if(!i||a.has(i.id))continue;const u=Math.abs(i.centroidXWorld-o),l=Math.abs(i.centroidYWorld-c);u<r&&l<r&&(s.inner.merge(i),a.add(i.id))}}for(const n of s)this._store.releaseDisplayIdForObjectId(n)}_updateAggregateStatistics(e,t){let s=!1;for(const r of t.statistics.values()){if("esriFieldTypeString"===r.field.type)continue;const t=r.value,i=r.field,a=e.get(i.name);if(a){const{minValue:e,maxValue:r}=a,i=Math.min(a.minValue,t),n=Math.max(a.maxValue,t);e===i&&r===n||(a.minValue=i,a.maxValue=n,s=!0);continue}e.set(i.name,{minValue:t,maxValue:t}),s=!0}return s}}class be extends re{static async create(e,t,s,r,i,a){const n=s.metadata.outSpatialReference,o=new ne.l({spatialReference:n}),c={type:"grid",fields:await Promise.all(t.fields.map(async e=>H.create(o,e))),spatialReference:n,featureFilter:t.featureFilter?await oe.A.create({geometryType:s.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:s.metadata.timeInfo,fieldsIndex:s.metadata.fieldsIndex,spatialReference:n,filterJSON:t.featureFilter}):null,cellSize:t.clusterRadius/4,arcadeContextInfo:i,sqlOptions:a};return new be(e,t.clusterRadius,c,t.fields,s,r,a)}constructor(e,t,s,r,i,a,n){super(i,a,s.spatialReference,s.fields,n),this._connection=e,this._clusterRadius=t,this._indexOptions=s,this._cellsPerScale=new Map,this._metadata=ce.i.createFeature({geometryType:"esriGeometryPoint",featureIdInfo:{type:"object-id",fieldName:"aggregateId"},fieldsIndex:new $.A([...r,...this._source.metadata.fieldsIndex.fields,{name:"aggregateId",alias:"aggregateId",type:"esriFieldTypeOID"}]).toJSON(),globalIdField:null,spatialReference:i.metadata.spatialReference,outSpatialReference:i.metadata.outSpatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,dateFieldsTimeZone:null,typeIdField:null,types:null})}get enablePixelBuffering(){return!1}invalidate(){super.invalidate();for(const e of this._cellsPerScale.values())e.destroy();this._cellsPerScale.clear()}onSubscribe(e){super.onSubscribe(e),this._requiredLevel=e.tile.level,this._requiredScale=e.tile.scale}createState(e){return new ye(e)}async*applyOverrideUpdate(e){for(const t of this._cellsPerScale.values())t.destroy();this._cellsPerScale.clear();for(const t of this._sendStates.values())t.done=!1}displayMap(e,t,s){const r=new Map(e.map(e=>[t(e),e])),i=[],a=this._getClusterState(this._requiredLevel,this._requiredScale);for(const n of a.clusters()){const e=r.get(n.inner.id);if(null!=e){const t=s(n.displayId,e,n.inner.id);i.push(t),r.delete(n.inner.id);continue}if(1===n.inner.count){const{firstObjectId:e}=n.inner,t=e?r.get(e):null;if(null!=t){const a=s(n.displayId,t,e);i.push(a),r.delete(e)}}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[],i=[],a=this._getClusterState(this._requiredLevel,this._requiredScale);for(const n of a.aggregatesWorldSpace())if(t.has(n.displayId)&&!s.has(n.displayId)){const e=(0,B.oN)(n,this._metadata.geometryType,!1,!1);if(s.add(n.displayId),1===e.attributes.cluster_count){r.push({...e,displayId:n.displayId});continue}i.push({...e,displayId:n.displayId})}return{features:r,aggregates:i,tracks:[]}}getFeatureObjectIdsForAggregate(e){const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.clusters())if(s.inner.id===e)return Array.from(s.inner.containedObjectIds);return[]}async*updateChunks(){const e=this._source.chunks();if(!e.length)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale),s=Array.from(this._sendStates.values()).filter(e=>e.subscription.tile.level===this._requiredLevel);if(t.updateChunks(e,s)||!this._source.updateTracking.updating)for(const a of s)a.subscription.tile.level===this._requiredLevel&&(a.didSend=!1,a.done=!1);const r=Array.from(this._sendStates.values()).filter(e=>e.done).map(e=>e.subscription.tile.key),i=new Set(r);for(const a of this._sendStates.values()){if(this._source.updateTracking.updating){if(r.some(e=>e.containsChild(a.subscription.tile.key)))continue;if(a.subscription.tile.key.getChildKeys().every(e=>i.has(e)))continue}a.didSend||a.subscription.tile.level!==this._requiredLevel||(a.didSend=!0,yield*this._update(a,t,this._source))}await t.updateStatistics(this._connection)}forEachAggregateWorldSpace(e){if(null==this._requiredLevel||null==this._requiredScale)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.aggregatesWorldSpace())e(s)}_getClusterState(e,t){if(null==e||null==t)throw new Error("InternalError: Level and scale must be defined");let s=this._cellsPerScale.get(t);return s||(s=new me(e,t,this._indexOptions,this._clusterRadius,this._attributeStore),this._cellsPerScale.set(t,s)),s}async*_update(e,t,s){if(e.done)return;const r=t.createAggregateFeatures(e,this._metadata);this.events.emit("changed"),e.done=!s.updateTracking.updating;const i=r.getCursor(),a=e.subscription.tile.createArcadeEvaluationOptions(this._indexOptions.arcadeContextInfo);for(;i.next();)this._attributeStore.setAttributeData(i.getDisplayId(),i,a,this._sqlOptions);const n=new ie(e.subscription,r,!0,e.done,{});yield n}}var Ie=s(80332),ve=s(66422);class we extends te{}class Se extends se{constructor(e,t,s,r){super(e,t,r),this._arcadeContextInfo=s,this.handledChunks=new Set,this.handledChunksForIdCreation=new Set,this.handledChunksForAttributeData=new Set,this._streamLayerDeferredObjectIdsToRemove=[]}destroy(){super.destroy();for(const e of this._source.chunks())this._cleanupChunkIds(e)}invalidateAttributeData(e){this.handledChunksForAttributeData.clear(),this._arcadeContextInfo=e,null!=this._evalOptions&&(this._evalOptions=(0,ve.N)(this._evalOptions.$view.scale,e))}onSubscribe(e){super.onSubscribe(e),this._evalOptions=e.tile.createArcadeEvaluationOptions(this._arcadeContextInfo)}createState(e){return new we(e)}get aggregateQueryEngine(){return null}displayMap(e,t,s){const r=new Map(e.map(e=>[t(e),e])),i=[];for(const a of this._source.chunks()){const e=a.reader.getCursor();for(;e.next();){const t=e.getObjectId(),a=e.getDisplayId(),n=r.get(t);if(null!=n){const e=s(a,n,t);i.push(e),r.delete(t)}}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[];for(const i of this._source.chunks()){const e=i.reader.getCursor();for(;e.next();){const i=e.getObjectId(),a=e.getDisplayId();t.has(a)&&!s.has(i)&&(r.push({...e.readLegacyFeatureWorldSpace(),displayId:a}),s.add(i))}}return{features:r,aggregates:[],tracks:[]}}async*applyOverrideUpdate(e){const t=[];for(const a of e.modified.values()){const e=this._attributeStore.createDisplayIdForObjectId(a.objectId);a.displayId=e,t.push(e)}const s=ue.K.fromOptimizedFeatures(Array.from(e.modified.values()),this._source.metadata).getCursor();for(;s.next();)this._attributeStore.setAttributeData(s.getDisplayId(),s,this._evalOptions,this._sqlOptions);const r=[];for(const a of e.removed){const e=this._attributeStore.getDisplayIdForObjectId(a);null!=e&&r.push(e)}(0,a.A)("esri-2d-update-debug")&&console.debug("FeatureUpdateStrategy.applyLocalEdit",{message:e,modifiedDisplayIds:t,removedDisplayIds:r});const i=Ie.KN.fromFeatures(Array.from(e.modified.values()),this._source.metadata);this.handledChunks.add(i.chunkId),this.handledChunksForAttributeData.add(i.chunkId),this.handledChunksForIdCreation.add(i.chunkId);for(const a of this._sendStates.values())a.handledChunks.add(i.chunkId),yield new ae(a.subscription,null,t,!1,i.queryInfo);for(const a of this._sendStates.values()){const e=i.getTileReader(a.subscription.tile);yield new ae(a.subscription,e,r,!1,i.queryInfo)}for(const a of e.removed)this._attributeStore.releaseDisplayIdForObjectId(a)}async*updateChunks(){if(this._source.chunks().length){this._updateAttributeData();for(const e of this._sendStates.values())yield*this._update(e)}}removeChunks(e){for(const t of e)this.handledChunks.delete(t.chunkId),this.handledChunksForAttributeData.delete(t.chunkId),this._cleanupChunkIds(t)}afterUpdateChunks(){for(const e of this._streamLayerDeferredObjectIdsToRemove)this._attributeStore.releaseDisplayIdForObjectId(e);this._streamLayerDeferredObjectIdsToRemove=[]}_cleanupChunkIds(e){if(this.handledChunksForIdCreation.has(e.chunkId)){const t=e.reader.getCursor();for(;t.next();){const e=t.getObjectId();this._source.isStream?this._streamLayerDeferredObjectIdsToRemove.push(e):this._attributeStore.releaseDisplayIdForObjectId(e)}this.handledChunksForIdCreation.delete(e.chunkId)}}_updateAttributeData(){for(const e of this._source.chunks()){const{chunkId:t,reader:s}=e;if(!this.handledChunksForIdCreation.has(t)){this.handledChunksForIdCreation.add(t);const e=s.getCursor();for(;e.next();){const t=this._attributeStore.createDisplayIdForObjectId(e.getObjectId());e.setDisplayId(t)}}}for(const e of this._source.chunks())if(this._attributeStore.referencesScale()||!this.handledChunksForAttributeData.has(e.chunkId)){this.handledChunksForAttributeData.add(e.chunkId);const t=e.reader.getCursor();for(;t.next();){const e=t.getDisplayId();this._attributeStore.setAttributeData(e,t,this._evalOptions,this._sqlOptions)}}}*_update(e){const{subscription:t,handledChunks:s}=e;for(const r of this._source.chunks()){const{chunkId:i}=r;if(s.has(i)||!this.handledChunksForIdCreation.has(i)||!this.handledChunksForAttributeData.has(i))continue;s.add(i);const a=r.getTileReader(t.tile);a&&(yield new ie(e.subscription,a,!1,r.end,r.queryInfo))}}}var ke=s(18690),xe=s(76460),Fe=s(92667),Ae=s(75226),Ce=s(2413),Oe=s(1438),qe=s(54222),Me=s(35495),Te=s(30248);let Re;class Pe{constructor(e,t,s,r,i){this.chunkIndex=e,this.featureIndex=t,this.objectId=s,this.displayId=r,this.time=i}}class Ee{static getOid(e){return F.xq+e}constructor(e,t,s,r,i,a,n,o){this._schema=e,this.trackId=t,this.objectId=s,this.displayId=r,this._fields=i,this._spatialReference=a,this._metadata=n,this._isStream=o,this._maxDisplayDuration=this._schema.maxDisplayDuration>0?this._schema.maxDisplayDuration:1/0,this._maxDisplayObservationsPerTrack=this._schema.maxDisplayObservationsPerTrack>=1?this._schema.maxDisplayObservationsPerTrack:1/0,this._observationRecords=[],this._nextObservationRecords=[],this._trackLinePath=[],this._bounds=[],this._trackLineGeometry=new he.A}get _trackLineAttributes(){const e={...this._latestObservationFeature?.attributes,aggregateId:this.objectId,[F.EA]:0};if(null!=this._statistics)for(const t of this._statistics.values())e[t.field.name]=t.value;return e}get _startTimeField(){return this._metadata.timeInfo?.startTimeField}get length(){return this._observationRecords.length}*observations(){yield*this._observationRecords}*previousObservations(){for(let e=0;e<this._observationRecords.length-1;e++)yield this._observationRecords[e]}get latestObservationFeature(){return this._latestObservationFeature}get latestObservationRecord(){return this._latestObservationRecord}stageObservation(e,t){this._nextObservationRecords.push(new Pe(e,t.getIndex(),t.getObjectId(),t.getDisplayId(),null!=this._startTimeField?t.readAttributeAsTimestamp(this._startTimeField):null))}commitObservations(e,t,s){const r=new Set(this._nextObservationRecords.map(e=>e.objectId)),i=this._observationRecords.filter(e=>!r.has(e.objectId)).map(e=>e.objectId);let a,n;switch(this._observationRecords=[],this._trackLinePath=[],this._isStream||null==this._startTimeField||this._nextObservationRecords.sort((e,t)=>{const s=e.time,r=t.time;return null!=s&&null!=r?s-r:0}),this._schema.timeField){case"startTimeField":a=this._metadata.timeInfo?.startTimeField;break;case"endTimeField":a=this._metadata.timeInfo?.endTimeField;break;case"timeReceived":a=this._isStream?F.Aw:null}n=this._isStream?s?.end??Date.now():s?.end??-1/0;const o=t.map(e=>e.reader.getCursor());let c;for(let u=this._nextObservationRecords.length-1;u>=0&&!(this._observationRecords.length>=this._maxDisplayObservationsPerTrack);u--){const e=this._nextObservationRecords[u],t=o[e.chunkIndex];(0,f.Lw)(t),t.setIndex(e.featureIndex);const s=null!=a?t.readAttributeAsTimestamp(a):null;(null!=s?n-s:0)>=this._maxDisplayDuration||(this._commitObservation(e,t),c??=e)}if(null!=c){const{chunkIndex:t,featureIndex:s}=c,r=`${c.objectId}.latest`,a=e.createDisplayIdForObjectId(r),n=o[t];(0,f.Lw)(n),n.setIndex(s);const u=new W.Om(n.readGeometryWorldSpace(),{...n.readAttributes(),[F.EA]:1},null,r,a);this._latestObservationFeature&&i.push(this._latestObservationFeature.objectId),this._latestObservationFeature=u,this._latestObservationRecord=c}else this._latestObservationFeature=null;return this._trackLineGeometry=function(e,t,s){if(t.length<2)return(0,B.eU)(e,[t],!1,!1);if(s.isWrappable){let r=!1;for(let e=1;e<t.length;e++){const i=t[e][0],a=(0,Oe.O7)(i,t[e-1][0],s);i!==a&&(t[e][0]=a,r=!0)}if(r){const r=(0,qe.b3)({paths:[t],spatialReference:s});if(null!=r)return(0,B.eU)(e,r.paths,!1,!1)}return(0,B.eU)(e,[t],!1,!1)}const r=Re.fromGeometryToGXGeometry({hasM:!1,hasZ:!1,paths:[t]}),i=Re.fromSpatialReference(s);if(null!=i){const t=(0,Fe.g7)(r,1e6,i,Ae.O.geodesic);if(null!=t){const s=Re.toGeometry(t,i);if(null!=s&&"paths"in s)return(0,B.eU)(e,s.paths,!1,!1)}}return(0,B.eU)(e,[t],!1,!1)}(this._trackLineGeometry,this._trackLinePath,this._spatialReference),this._bounds=function(e){const{lengths:t,coords:s}=e,r=2;if(!t.length)return[(0,Ce.Ie)()];const i=[];let a=0;for(let n=0;n<t.length;n++){const e=t[n],o=(0,Ce.Ie)();i.push(o);for(let t=0;t<e;t++){const e=s[r*(t+a)],i=s[r*(t+a)+1];(0,Ce.tK)(o,[e,i])}a+=e}return i}(this._trackLineGeometry),this._nextObservationRecords=[],i}updateStatistics(e,t){this._statistics=Me.o.create(this._fields);const s=e.map(e=>e.reader.getCursor());for(const{chunkIndex:r,featureIndex:i}of this._observationRecords){const e=s[r];(0,f.Lw)(e),e.setIndex(i),this._statistics.insert(e,t)}}overlapsTile(e){for(const t of this._bounds)if((0,Ce.$9)(t,e.bounds,32))return!0;return!1}getLatestObservationFeatureForTile(e){if(null==this._latestObservationFeature)return null;const{objectId:t,displayId:s,geometry:r,attributes:i}=this._latestObservationFeature,a=new he.A;(0,B.Nl)(a,r,!1,!1,this._metadata.geometryType,e.subscription.tile.transform);const n=(0,Ce.fA)(1/0,1/0,-1/0,-1/0);return function(e,t){const s=2,{coords:r,lengths:i}=e;if(!i.length)return void t(r[0],r[1]);let a=0;for(let n=0;n<i.length;n++){const e=i[n];let o=0,c=0;for(let i=0;i<e;i++)o+=r[s*(i+a)],c+=r[s*(i+a)+1],t(o,c);a+=e}}(a,(e,t)=>(0,Ce.tK)(n,[e,t])),(0,Ce.HY)(n,(0,Ce.fA)(0,0,p.CQ,p.CQ))?new W.Om(a,i,null,t,s):null}getTrackLineFeatureForTile(e){const t=new he.A;return(0,B.Nl)(t,this._trackLineGeometry,!1,!1,"esriGeometryPolyline",e.subscription.tile.transform),new W.Om(t,this._trackLineAttributes,null,this.objectId,this.displayId)}getTrackLineOptimizedFeature(){return new W.Om(this._trackLineGeometry,this._trackLineAttributes,null,this.objectId,this.displayId)}getTrackLineDisplayFeature(){const{_trackLineGeometry:e,_trackLineAttributes:t,displayId:s}=this;return{geometry:(0,B.zv)(e,"esriGeometryPolyline",!1,!1),attributes:t,displayId:s}}_commitObservation(e,t){const s=t.readCentroidWorldSpace();let r=s?.coords[0],i=s?.coords[1];null==s&&(r=t.readXWorldSpace(),i=t.readYWorldSpace()),null!=r&&null!=i&&(this._observationRecords.unshift(e),this._trackLinePath.unshift([r,i]))}}class De extends te{constructor(e){super(e),this.done=!1}}class je extends re{static async create(e,t,r,i,a){const n=t.metadata.outSpatialReference,o=new ne.l({spatialReference:n}),c=await Promise.all(e.fields.map(async e=>H.create(o,e))),u=e.featureFilter?await oe.A.create({geometryType:t.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:t.metadata.timeInfo,fieldsIndex:t.metadata.fieldsIndex,spatialReference:n,filterJSON:e.featureFilter}):null;return n.isWrappable||(0,Fe.s1)()||await Promise.all([Promise.resolve().then(s.bind(s,58067)),Promise.resolve().then(s.bind(s,48045)),(0,Fe.Hh)()]).then(e=>{let[t,s,r]=e;Re={fromGeometryToGXGeometry:s.fromGeometryToGXGeometry,toGeometry:s.toGeometry,fromSpatialReference:t.fromSpatialReference}}),new je(e,t,r,n,c,u,i,a)}constructor(e,t,s,r,i,a,n,o){super(t,s,r,i,o),this._schema=e,this._featureFilter=a,this._arcadeContextInfo=n,this._tracks=new Map,this._handledChunks=new Set,this._metadata=t.metadata.weakCloneWithAdditionalFields([{name:F.EA,alias:"trackPart",type:"esriFieldTypeSmallInteger"}]),this._trackLineMetadata=ce.i.createFeature({geometryType:"esriGeometryPolyline",featureIdInfo:{type:"object-id",fieldName:"aggregateId"},fieldsIndex:{fields:[...this._source.metadata.fieldsIndex.fields,...this.aggregateFields,{name:F.EA,alias:"trackPart",type:"esriFieldTypeSmallInteger"},{name:"aggregateId",alias:"aggregateId",type:"esriFieldTypeOID"}],timeZoneByFieldName:null},globalIdField:null,spatialReference:t.metadata.spatialReference,outSpatialReference:t.metadata.outSpatialReference,subtypeField:null,subtypes:null,timeInfo:t.metadata.timeInfo,timeReferenceUnknownClient:null,dateFieldsTimeZone:null,typeIdField:null,types:null})}destroy(){super.destroy(),this._clear()}get _isStream(){return this._source.isStream}get enablePixelBuffering(){return!0}get isAggregate(){return!1}requiresInvalidation(){return!0}invalidate(){super.invalidate(),this._clear()}createState(e){return new De(e)}async*applyOverrideUpdate(e){xe.A.getLogger("esri.views.2d.layers.features.processor.TrackStrategy").error("Applying override to tracks is not supported")}displayMap(e,t,s){const r=new Map(e.map(e=>[t(e),e])),i=[];for(const a of this._tracks.values()){const e=r.get(a.objectId);if(null!=e){const t=s(a.displayId,e,a.objectId);i.push(t),r.delete(a.objectId);continue}const t=a.latestObservationFeature;if(t?.objectId){const e=r.get(t.objectId);if(null!=e){const a=s(t.displayId,e,t.objectId);i.push(a),r.delete(t.objectId);continue}}for(const n of a.observations()){const e=r.get(n.objectId);if(null!=e){const t=s(n.displayId,e,n.objectId);i.push(t),r.delete(n.objectId)}}}return i}getDisplayFeatures(e){const t=new Set(e),s=[],r=[],i=this._source.chunks().map(e=>e.reader.getCursor());for(const a of this._tracks.values()){if(t.has(a.displayId)&&r.push(a.getTrackLineDisplayFeature()),null!=a.latestObservationFeature&&t.has(a.latestObservationFeature.displayId)){const{displayId:e,chunkIndex:t,featureIndex:r}=a.latestObservationRecord,n=i[t];n.setIndex(r),s.push({displayId:e,...n.readLegacyFeatureWorldSpace()})}for(const{displayId:e,chunkIndex:r,featureIndex:n}of a.observations())if(t.has(e)){const t=i[r];t.setIndex(n),s.push({displayId:e,...t.readLegacyFeatureWorldSpace()})}}return{features:s,aggregates:[],tracks:r}}getFeatureObjectIdsForAggregate(e){for(const t of this._tracks.values())if(t.objectId===e)return Array.from(t.observations(),e=>e.objectId);return[]}async*updateChunks(){0===this._handledChunks.size&&this._rebuildTracks();for(const e of this._sendStates.values())yield*this._update(e)}forEachAggregateWorldSpace(e){for(const t of this._tracks.values())e(t.getTrackLineOptimizedFeature())}_clear(){for(const e of this._source.chunks())if(this._handledChunks.has(e.chunkId)){const t=e.reader.getCursor();for(;t.next();){const e=t.getObjectId();this._attributeStore.releaseDisplayIdForObjectId(e)}}this._handledChunks.clear();for(const e of this._tracks.values())this._removeTrack(e);this._tracks.clear()}_rebuildTracks(){const e=this._source.chunks();if(!e.length)return;const t=this._metadata.timeInfo?.trackIdField;if(null==t)return;const s=new Set;for(let r=0;r<e.length;r++){const i=e[r];if(this._handledChunks.has(i.chunkId))continue;this._handledChunks.add(i.chunkId);const a=i.reader.getCursor();for(;a.next();){const e=a.getObjectId();a.setDisplayId(this._attributeStore.createDisplayIdForObjectId(e));const i=a.readAttribute(t);if(null!=i&&null!=e&&(null===this._featureFilter||this._featureFilter.check(a,this._sqlOptions))){if(!this._tracks.has(i)){const e=Ee.getOid(i),t=this._attributeStore.createDisplayIdForObjectId(e),s=new Ee(this._schema,i,e,t,this.aggregateFields,this.spatialReference,this._source.metadata,this._isStream);this._tracks.set(i,s)}this._tracks.get(i).stageObservation(r,a),s.add(i)}}}for(const r of this._tracks.values())if(s.has(r.trackId)){const t=r.commitObservations(this._attributeStore,e,this._featureFilter?.timeExtent);for(const e of t)this._attributeStore.releaseDisplayIdForObjectId(e);r.updateStatistics(e,(0,ve.N)(1,this._arcadeContextInfo))}else this._removeTrack(r)}_removeTrack(e){this._tracks.delete(e.trackId),this._attributeStore.releaseDisplayIdForObjectId(e.objectId),null!=e.latestObservationFeature&&this._attributeStore.releaseDisplayIdForObjectId(e.latestObservationFeature.objectId)}*_update(e){if(e.done)return;e.done=!this._source.updateTracking.updating;const t=[],s=[];for(const u of this._tracks.values())if(u.length>0){if(this._schema.showLatestObservation){const s=u.getLatestObservationFeatureForTile(e);null!=s&&t.push(s)}this._schema.showTrackLine&&u.overlapsTile(e.subscription.tile)&&s.push(u.getTrackLineFeatureForTile(e))}const r=ue.K.fromOptimizedFeatures(t,this._metadata,e.subscription.tile.transform),i=ue.K.fromOptimizedFeatures(s,this._trackLineMetadata,e.subscription.tile.transform);let a=[];if(this._schema.showPreviousObservations){const t=this._source.chunks().map(()=>[]);for(const e of this._tracks.values())for(const{chunkIndex:s,featureIndex:r}of e.previousObservations())t[s].push(r);a=this._source.chunks().map((s,r)=>{const i=s.getTileReader(e.subscription.tile);if(null==i)return null;const a=Te.e.from(i,t[r]);return a.setProcessorAttributes({[F.EA]:2}),"esriGeometryPoint"!==a.geometryType&&null!=a.getInTransform()||a.setTransformForDisplay(e.subscription.tile.transform),a}).filter(ke.Ru)}this.events.emit("changed");const n=e.subscription.tile.createArcadeEvaluationOptions(this._arcadeContextInfo),o=i.getCursor();for(;o.next();)this._attributeStore.setAttributeData(o.getDisplayId(),o,n,this._sqlOptions);for(const u of a){const e=u.getCursor();for(;e.next();)this._attributeStore.setAttributeData(e.getDisplayId(),e,n,this._sqlOptions)}const c=r.getCursor();for(;c.next();)this._attributeStore.setAttributeData(c.getDisplayId(),c,n,this._sqlOptions);yield new ie(e.subscription,i,!1,!1,{});for(const u of a)yield new ie(e.subscription,u,!1,!1,{});yield new ie(e.subscription,r,!1,e.done,{})}}var ze=s(86289);class Ue{constructor(e,t){this._connection=e,this._source=t,this._version=1,this._registry=new U.o,this._proxy=new z.J({fetch:(e,t)=>this._connection.layerView.fetch(e,t),fetchDictionary:(e,t)=>this._connection.layerView.fetchDictionary(e,t)}),this._attributeStore=new ze.K({isLocal:!1,update:e=>(0,d.oV)(this._connection.container.updateAttributeView(e))})}destroy(){this._proxy.destroy(),this._strategy?.destroy(),this._attributeStore.destroy()}get aggregateQueryEngine(){return this._strategy?.aggregateQueryEngine}get usedMemory(){let e=0;return e+=this._attributeStore.usedMemory,this._strategy&&(e+=this._strategy.usedMemory),e}get version(){return this._version}getDisplayFeatures(e){return this._strategy?this._strategy.getDisplayFeatures(e):{features:[],aggregates:[],tracks:[]}}getDisplayIds(e){const t={};return this._strategy?(this._strategy.displayMap(e,e=>e,(e,s,r)=>{t[r]=e}),t):t}getFeatureObjectIdsForAggregate(e){return this._strategy?this._strategy.getFeatureObjectIdsForAggregate(e):[]}onSubscribe(e){this._strategy?.onSubscribe(e)}onUnsubscribe(e){this._strategy?.onUnsubscribe(e)}requiresInvalidation(){return this._strategy?.requiresInvalidation()??!1}async update(e,t,s,r,i){const n=e.processor,o=(0,g.i8)(this._schema?.storage,n.storage),c=(0,g.i8)(this._schema?.mesh.properties,n.mesh.properties),u=(0,g.i8)(this._schema?.mesh.factory,n.mesh.factory),l=(0,g.i8)(this._schema?.mesh.strategy,n.mesh.strategy),d=function(e,t){const s=[];return e?.timeExtent?.start===t.timeExtent?.start&&e?.timeExtent?.end===t.timeExtent?.end||s.push("timeProperties"),s}(this._schema?.expressionProperties,n.expressionProperties),h=d.some(e=>this._attributeStore.hasArcadeDependency(e)),p=d.some(e=>this._factory?.hasArcadeDependency(e)??!1),_=d.some(e=>this._strategy?.hasArcadeDependency(e))||this._strategy?.isAggregate&&h,f=p||_,m=c||u||l;if(!(o||m||p||h||_)&&!r)return!1;(0,a.A)("esri-2d-update-debug")&&console.debug(`Version[${this._version}] SymbolProcessor.update`,{changes:(0,y.Ui)(this._schema,n),schema:n}),this._schema=n;const b=new ne.l({fields:this._source.metadata.fieldsIndex,spatialReference:this._source.metadata.outSpatialReference}),I={currentUser:n.mesh.properties.currentUser};if((o||m||h)&&(await this._attributeStore.update(n.storage,b,this._source.metadata,t),this._strategy?.invalidateAttributeData(Le(n))),!r&&!m&&!f)return!1;(l||c||f)&&await this._updateStrategy(n.mesh.strategy,i,Le(n),I),this._updateSortKey(b,"sortKey"in n.mesh.properties?n.mesh.properties.sortKey:null);const v="dictionary"===n.mesh.factory.symbology.type?n.mesh.factory.symbology.fieldMap:null,w=new L(b,this._proxy,s,this._registry,v);return(u||"dictionary"===n.mesh.factory.symbology.type)&&(this._factory=await j.create(w,n.mesh.factory)),this._version=t,!0}async applyOverrideUpdate(e){if(!this._strategy)return;const t=this._strategy.applyOverrideUpdate(e);for await(const s of t)try{await this._process(s)}catch(M){}}async updateChunks(){await this._doUpdateChunks(),this._strategy?.afterUpdateChunks()}async removeChunks(e){this._strategy?.removeChunks(e),this._attributeStore.incrementDisplayIdGeneration()}updateHighlight(e){let{highlights:t}=e;if(!this._strategy||!this._strategy.hasSubscribers)return void this._attributeStore.setHighlight(t.map(e=>{let{objectId:t,highlightFlags:s}=e;return{objectId:t,highlightFlags:s,displayId:-1}}),t);const s=this._strategy.displayMap(t,e=>{let{objectId:t}=e;return t},(e,t,s)=>{let{highlightFlags:r}=t;return{objectId:s,displayId:e,highlightFlags:r}});this._attributeStore.setHighlight(s,t)}invalidate(){this._strategy&&this._strategy.invalidate()}async _doUpdateChunks(){if(!this._strategy)return;const e=this._strategy.updateChunks(),t=[],s=new Map;for await(const i of e){let e=s.get(i.id);null==e&&(e=new N({concurrency:16,process:e=>this._process(e)}),s.set(i.id,e));const r=e.push(i).catch(e=>(0,o.jH)(e));t.push(r)}try{await Promise.all(t)}catch(r){}(0,a.A)("esri-2d-update-debug")&&console.log("SendUpdates"),this._attributeStore.sendUpdates(),(0,a.A)("esri-2d-update-debug")&&console.log("SendUpdates.await")}async _updateStrategy(e,t,s,r){switch(this._strategy?.destroy(),e.type){case"feature":this._strategy=new Se(this._source,this._attributeStore,s,r);break;case"binning":this._strategy=await de.create(e,this._source,this._attributeStore,s,r);break;case"cluster":this._strategy=await be.create(this._connection,e,this._source,this._attributeStore,s,r);break;case"track":this._strategy=await je.create(e,this._source,this._attributeStore,s,r)}for(const i of t)this._strategy.onSubscribe(i)}async _updateSortKey(e,t){if(this._sortInfo=(0,f.pR)(this._sortInfo?.computed),null!=t){const s=t.byRenderer?null:await e.createComputedField(t);this._sortInfo={...t,computed:s}}}async _process(e){const t=e.subscription;if((0,a.A)("esri-2d-update-debug")){const s=t.tile;console.debug(`Version[${this._version}] Tile[${s.key.id}, end=${e.end}] Processor._process`)}const s={currentUser:this._schema?.mesh.properties.currentUser};await this._fetchResources(e,s),(0,o.Te)(t.signal);const r=await this._write(e,t.tile.createArcadeEvaluationOptions(Le(this._schema)),s),i=t.tile.tileInfoView.getLODInfoAt(t.tile.key);(0,o.Te)(t.signal);const{message:n,transferList:c}=r.serialize(i),u={objectIdMap:null,inner:e.createMessage(n,this._version,this._attributeStore.epoch)};if(this._schema?.mesh.properties.returnMeshObjectId){u.objectIdMap={};const t=e.reader?.getCursor();if(t)for(;t.next();)u.objectIdMap[t.getDisplayId()]=t.getObjectId()}if((0,o.Te)(t.signal),await this._connection.container.onMessage(u,{signal:t.signal,transferList:c}),this._attributeStore.sendUpdates(),(0,a.A)("esri-2d-update-debug")){const s=t.tile;console.debug(`Version[${this._version}] Tile[${s.key.id}, end=${e.end}] Processor._process.await`)}}async _fetchResources(e,t){await this._fetchMatcherResources(e),await this._fetchWriterResources(e,t)}async _fetchMatcherResources(e){if(e.reader)return this._factory.enqueueMatcherRequests(this._proxy,e.reader)}async _fetchWriterResources(e,t){if(!e.reader)return;const s=e.reader.getCursor(),r=e.subscription.tile.createArcadeEvaluationOptions(Le(this._schema));for(;s.next();)this._factory.enqueueWriterRequests(this._proxy,s,r,t);await this._proxy.fetchEnqueuedResources()}async _write(e,t,s){const r=e.subscription.tile,i=e.reader?.getCursor(),a=i?.getSize()??0,n=r.tileInfoView.tileInfo.isWrappable,c=r.tileInfoView.tileInfo.spatialReference.isWGS84,u=new k(r.key,this._strategy.enablePixelBuffering,n,c,a);if(!i)return u;const l=r.createArcadeEvaluationOptions(Le(this._schema));let d=0;for(;i.next();){++d%1e3||(await(0,o.Pl)(0),(0,o.Te)(e.subscription));const a=this._getSortKeyValue(i,t);u.entityStart(i.getDisplayId(),a),this._factory.write(u,this._proxy,i,l,s,r.level),u.entityEnd()}return u}_getSortKeyValue(e,t){if(!this._sortInfo)return 0;const{computed:s,order:r,byRenderer:i}=this._sortInfo,a=i?this._factory.getSortKey(e,t):s?.read(e,t);return null==a||isNaN(a)?0:a*("asc"===r?-1:1)}}function Le(e){const{timeZone:t}=e?.mesh.properties??{},{timeExtent:s}=e?.expressionProperties??{};return{timeZone:t,timeExtent:s}}class Ge{static from(e){let t=0,s=0,r=0;return e.forEach(e=>{const i=e._readGeometry();i&&(s+=i.isPoint?1:i.lengths.reduce((e,t)=>e+t,0),r+=i.isPoint?1:i.lengths.length,t+=1)}),new Ge(t,s,r)}constructor(e,t,s){this.featureCount=e,this.vertexCount=t,this.ringCount=s}toJSON(){return{featureCount:this.featureCount,ringCount:this.featureCount,vertexCount:this.featureCount}}}var Ne=s(6326),Qe=s(91967),Be=s(46053),We=s(87990);let Ve=class extends Qe.A{constructor(e){super(),this._connection=e,this._enabledEventTypes=new Set,this._updateInfo={websocket:0,client:0},this._lastTime=performance.now(),this._queuedCommands=[],this.addHandles([(0,u.wB)(()=>this._strategy?.connectionStatus??"disconnected",e=>{this._layerView.setProperty({propertyName:"pipelineConnectionStatus",value:e})},{initial:!0}),(0,u.wB)(()=>this._strategy?.errorString||null,e=>this._layerView.setProperty({propertyName:"pipelineErrorString",value:e}),{initial:!0})])}destroy(){this._strategy=null,this.removeAllHandles()}get _layerView(){return this._connection.layerView}set strategy(e){null==this._strategy&&this._resetUpdateInfo(performance.now());const t="event-handles";this.removeHandles(t),null!=e&&(this.addHandles([e.events.on("data-received",e=>this._onFeature(e)),e.events.on("message-received",e=>this._onWebSocketMessage(e)),e.events.on("features-updated",e=>this._onUpdate(e)),e.events.on("tick",()=>this._onTick())],t),this._queuedCommands.forEach(t=>t(e)),this._queuedCommands=[]),this._strategy=e}updateCustomParameters(e){null!=e&&this._callOrEnqueue(t=>t.updateCustomParameters(e))}sendMessageToSocket(e){this._callOrEnqueue(t=>t.sendMessageToSocket(e))}sendMessageToClient(e){this._callOrEnqueue(t=>t.sendMessageToClient(e))}enableEvent(e,t){t?this._enabledEventTypes.add(e):this._enabledEventTypes.delete(e)}disconnect(){this._strategy?.disconnect()}connect(){this._strategy?.connect()}clear(){this._strategy?.clear()}_onWebSocketMessage(e){this._enabledEventTypes.has("message-received")&&this._layerView.emitEvent({name:"message-received",event:e})}_onFeature(e){this._updateInfo.websocket++,this._enabledEventTypes.has("data-received")&&this._layerView.emitEvent({name:"data-received",event:{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry}})}_onUpdate(e){this._updateInfo.client+=e}_onTick(){const e=performance.now(),t=e-this._lastTime;if(t>2500){const s=Math.round(this._updateInfo.client/(t/1e3)),r=Math.round(this._updateInfo.websocket/(t/1e3));this._resetUpdateInfo(e),this._layerView.emitEvent({name:"update-rate",event:{client:s,websocket:r}})}}_resetUpdateInfo(e){this._lastTime=e,this._updateInfo.client=0,this._updateInfo.websocket=0}_callOrEnqueue(e){null!=this._strategy?e(this._strategy):this._queuedCommands.push(e)}};(0,Ne.Cg)([(0,Be.MZ)()],Ve.prototype,"_strategy",void 0),Ve=(0,Ne.Cg)([(0,We.$)("esri.views.2d.layers.features.sources.StreamMessenger")],Ve);class $e{constructor(){this._requiresInvalidation=!1}get requiresInvalidation(){return this._requiresInvalidation}requireInvalidation(){this._requiresInvalidation=!0}}class Ke{constructor(e,t,s){this._context=s,this._controller=new AbortController,this.metadata=ce.i.createFeature(e),this._schema=t}destroy(){this._controller.abort(),this.store.destroy()}get store(){return this._context.store}get _connection(){return this._context.connection}get _options(){return{signal:this._controller.signal}}get _signal(){return this._controller.signal}async applyOverride(e){this._onOverride(),await this.store.applyOverride(e)}takeOverrideUpdate(){return this.store.takeOverrideUpdate()}unsafeSetQueryHistoricMoment(e){throw new Error("InternalError: LoadStrategy does not support query info")}async queryByObjectId(e,t){throw new Error("InternalError: LoadStrategy does not support fetching")}prepareCacheUpdate(e,t){}applyCacheUpdate(){return null}}var He=s(49723),Je=s(61137);async function Ze(e,t,s){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const a=(await Promise.allSettled(s.map(s=>async function(e,t,s){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const i=`${e.chunkPrefix??""}${s.num}`,a=await e.fetch(s.query,r,{chunkId:i}),n=new Je.j(a,s.query.inner.toJSON(),s.num,!1);n.chunkId=n.normalizedChunkId=i,(0,o.Te)(r),t.insert(n)}(e,t,s,i)))).filter(e=>"rejected"===e.status).map(e=>e.reason);if(a.length)throw new r.A("featurelayer-query","Encountered errors when downloading data",{errors:a})}const Ye=8e3;class Xe{constructor(e,t,s,i){this.store=e,this.queryInfo=t,this._options=s,this._fetch=i,this._nextBatch=new Set,this._fetchFeatures=(0,o.sg)(async()=>{if(0===this._nextBatch.size||this._options.signal?.aborted)return;const e=Array.from(this._nextBatch);this._nextBatch.clear(),e.length>Ye&&xe.A.getLogger("esri.views.2d.layers.FeatureLayerView2D").warn(new r.A("highlight-too-many-features","highlight is limited to 8000 features on large layers configured with a display filter to avoid performance issues"));const t=this.queryInfo.objectIdsQueryPageSize,s=Math.ceil(Ye/t),i=Math.min(s,Math.ceil(e.length/t)),a=Array.from({length:i},(s,r)=>{const i=r*t,a=Math.min(i+t,e.length);return{num:r,query:this.queryInfo.createObjectIdsQuery(e.slice(i,a))}});try{await Ze({chunkPrefix:"cache."+(0,He.lk)(),fetch:this._fetch},this.store,a,this._options)}catch(w){}})}prepareCacheUpdate(e,t){if(t)for(const s of t)this._nextBatch.delete(s);for(const s of e)this._nextBatch.add(s)}applyCacheUpdate(){return 0===this._nextBatch.size||this._options.signal?.aborted?null:this._fetchFeatures().catch(()=>{})}}var et=s(3825),tt=s(97015),st=s(55013);var rt=s(45012),it=s(76279),at=s(26799),nt=s(36643),ot=s(97255),ct=s(29234),ut=s(55147),lt=s(93210),dt=s(82857),ht=s(10693);const pt=268435455;class _t{constructor(){this.hasFeatures=!1,this.exceededTransferLimit=!1,this.fieldCount=0,this.featureCount=0,this.idFieldIndices=[],this.vertexCount=0,this.offsets={attributes:new Array,geometry:new Array},this.centroid=new Array}get usedMemory(){let e=0;return e+=(0,ot.Qf)(this.idFieldIndices),e+=(0,ot.Qf)(this.offsets.attributes),e+=(0,ot.Qf)(this.offsets.geometry),e+=(0,ot.Qf)(this.centroid),this.displayIds&&(e+=(0,ot.Qf)(this.displayIds)),this.groupIds&&(e+=(0,ot.Qf)(this.groupIds)),e}}const ft=268435455,gt=128e3,yt={small:{delta:new Int32Array(128),decoded:new Int32Array(128)},small64:{delta:new Float64Array(0),decoded:new Float64Array(0)},large:{delta:new Int32Array(gt),decoded:new Int32Array(gt)},large64:{delta:new Float64Array(0),decoded:new Float64Array(0)}};function mt(e,t){return t?e<=yt.small64.delta.length?yt.small64:(e<=yt.large64.delta.length||(yt.large64.delta=new Float64Array(Math.round(1.25*e)),yt.large64.decoded=new Float64Array(Math.round(1.25*e))),yt.large64):e<=yt.small.delta.length?yt.small:(e<=yt.large.delta.length||(yt.large.delta=new Int32Array(Math.round(1.25*e)),yt.large.decoded=new Int32Array(Math.round(1.25*e))),yt.large)}function bt(e){for(;e.next();){if(1===e.tag())return e.getMessage();e.skip()}return null}function It(e,t,s,r,i){return!!e&&(0===t*i-r*s&&t*r+s*i>0)}class vt extends lt.Y{static fromBuffer(e,t){let s=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const i=t.geometryType,a=function(e){try{const t=2,s=new ct.A(new Uint8Array(e),new DataView(e));for(;s.next();){if(s.tag()===t)return bt(s.getMessage());s.skip()}}catch(i){const t=new r.A("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:i});xe.A.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF").error(t)}return null}(e),n=function(e,t,s){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i=e.asUnsafe(),a=i.pos(),n=new _t;let o=0,c=0,u=null,l=!1;const d=[];for(;i.next();)switch(i.tag()){case 12:u=i.processMessage(ht.ae);break;case 9:if(n.exceededTransferLimit=i.getBool(),n.exceededTransferLimit){n.offsets.geometry=r?new Float64Array(8e3):new Int32Array(8e3),n.centroid=r?new Float64Array(16e3):new Int32Array(16e3);for(let e=0;e<n.centroid.length;e++)n.centroid[e]=pt}break;case 13:{const e=i.processMessage(ht.cn);e.index=o++,d.push(e);break}case 15:{const e=i.getLength(),s=i.pos()+e;if(!n.exceededTransferLimit){const e=n.offsets.geometry,t=n.centroid;e.push(0),t.push(pt),t.push(pt)}!l&&n.exceededTransferLimit&&(l=!0,n.offsets.attributes=r?new Float64Array(8e3*o):new Uint32Array(8e3*o));let a=c*o;for(;i.pos()<s&&i.next();)switch(i.tag()){case 1:{l?n.offsets.attributes[a++]=i.pos():n.offsets.attributes.push(i.pos());const e=i.getLength();i.skipLen(e);break}case 2:if(t){const e=i.getLength(),t=i.pos()+e;for(;i.pos()<t&&i.next();)switch(i.tag()){case 3:{i.getUInt32();const e=i.getSInt64(),t=i.getSInt64();n.centroid[2*c]=e,n.centroid[2*c+1]=t;break}default:i.skip()}}else{n.offsets.geometry[c]=i.pos();const e=i.getLength();n.vertexCount+=e,i.skipLen(e)}break;case 4:{const e=i.getLength(),t=i.pos()+e;for(;i.pos()<t&&i.next();)switch(i.tag()){case 3:{i.getUInt32();const e=i.getSInt64(),t=i.getSInt64();n.centroid[2*c]=e,n.centroid[2*c+1]=t;break}default:i.skip()}break}default:i.skip()}c++,n.hasFeatures=!0;break}default:i.skip()}n.fields=new $.A(d),n.featureCount=c,n.fieldCount=o;const h=(0,dt.Y)(s);return n.idFieldIndices=Array.from(h,e=>n.fields.get(e)?.index),n.transform=u,n.displayIds=new Uint32Array(n.featureCount),n.groupIds=new Uint16Array(n.featureCount),i.move(a),n}(a,"esriGeometryPoint"===i,t.featureIdInfo,s);return new vt(a,n,t,s)}constructor(e,t,s,r){super(s),this._use64Bit=r,this._hasNext=!1,this._isPoints=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0},this._parseCaches=new Array,this._geometryType=s.geometryType,this._reader=e,this._header=t,this._hasNext=t.hasFeatures,this._isPoints="esriGeometryPoint"===s.geometryType}get _size(){return this._header.featureCount}get fields(){return this._header.fields}get geometryType(){return this._geometryType}get hasZ(){return!1}get hasM(){return!1}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}getSize(){return this._size}getInTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._featureIndex=e}getAttributeHash(){let e="";for(const t of this._header.fields.fields)e+=this._readAttributeAtIndex(t.index)+".";return e}getObjectId(){if(1===this._header.idFieldIndices.length)return this._readAttributeAtIndex(this._header.idFieldIndices[0]);const e=this._header.idFieldIndices.map(e=>this._readAttributeAtIndex(e));return JSON.stringify(e)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}readGeometryArea(){return this._cache.area||this._readGeometry(!0),this._cache.area}copy(){const e=this._reader.clone(),t=new vt(e,this._header,this.metadata,this._use64Bit);return this.copyInto(t),t}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0;++this._featureIndex<this._size&&!this._getExists(););return this._featureIndex<this._size}get usedMemory(){return ot.qK+(this._cache.geometry?.usedMemory??0)}get underlyingMemory(){return super.underlyingMemory+this._reader.usedMemory+this._header.usedMemory}_readX(){return this._header.centroid[2*this._featureIndex]}_readY(){return this._header.centroid[2*this._featureIndex+1]}_readServerCentroid(){const e=this._header.centroid[2*this._featureIndex],t=this._header.centroid[2*this._featureIndex+1];return e===ft?null:new he.A([],[e,t])}_readGeometry(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(void 0===this._cache.geometry){let t=null;if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===ft)return null;const e=this._header.centroid[2*this._featureIndex],s=this._header.centroid[2*this._featureIndex+1];t=new he.A([],[e,s])}else{const s=this._header.offsets.geometry[this._featureIndex],r=this._reader;if(0===s)return null;r.move(s);try{t=e?this._parseGeometryForDisplay(r):this._parseGeometry(r)}catch(_){return null}}return 0===t?.coords.length&&(t=null),this._cache.geometry=t,t}return this._cache.geometry}_readAttribute(e,t){const s=this._header.fields.get(e);if(null==s)return;const r=this._readAttributeAtIndex(s.index),i=this._header.fields.isDateField(s.name);return t?null==r?r:i?new Date(r):r:r}_readAttributes(){const e={};for(const t of this._header.fields.fields)e[t.name]=this._readAttributeAtIndex(t.index);return e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext,e._parseCaches=this._parseCaches}_readAttributeAtIndex(e){let t=this._parseCaches[e];if(t||(t=new ut.P(this.getSize()),this._parseCaches[e]=t),t.has(this._featureIndex))return t.get(this._featureIndex);const s=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],r=this._reader;r.move(s);const i=function(e){const t=e.getLength(),s=e.pos()+t;for(;e.pos()<s&&e.next();)switch(e.tag()){case 1:return e.getString();case 2:return e.getFloat();case 3:return e.getDouble();case 4:return e.getSInt32();case 5:return e.getUInt32();case 6:return e.getInt64();case 7:return e.getUInt64();case 8:return e.getSInt64();case 9:return e.getBool();default:return e.skip(),null}return null}(r);return t.set(this._featureIndex,i),i}_readGeometryDeltaDecoded(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(void 0===this._cache.unquantGeometry){const t=this._readGeometry(e);if(!t)return this._cache.unquantGeometry=void 0,null;if(!this.getInTransform())return this._cache.unquantGeometry=t,t;const s=mt(t.coords.length,this._use64Bit).decoded,r=t.clone(s),i=r.coords;let a=0;for(const e of r.lengths){for(let t=1;t<e;t++){const e=2*(a+t),s=2*(a+t-1);i[e]+=i[s],i[e+1]+=i[s+1]}a+=e}return this._cache.unquantGeometry=r,r}return this._cache.unquantGeometry}_parseGeometry(e){const t=e.asUnsafe(),s=t.getLength(),r=t.pos()+s,i=[],a=[];for(;t.pos()<r&&t.next();)switch(t.tag()){case 2:{const e=t.getUInt32(),s=t.pos()+e;for(;t.pos()<s;)a.push(t.getUInt32());break}case 3:{const e=t.getUInt32(),s=t.pos()+e;for(i.push(t.getSInt64()),i.push(t.getSInt64()),this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64();t.pos()<s;)i.push(t.getSInt64()),i.push(t.getSInt64()),this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64();break}default:t.skip()}return new he.A(a,i)}_parseGeometryForDisplay(e){const t=e.asUnsafe(),s=t.getLength(),r=t.pos()+s,i=[],a=[];let n=0,o=0,c=null,u=0;const l="esriGeometryPolygon"===this.geometryType,d="esriGeometryPolyline"===this.geometryType,h=l?3:d?2:1,p=l||d;for(;t.pos()<r&&t.next();)switch(t.tag()){case 2:{const e=t.getUInt32(),s=t.pos()+e;for(;t.pos()<s;){const e=t.getUInt32();i.push(e),n+=e}c=mt(2*n,this._use64Bit).delta;break}case 3:{t.getUInt32();const e=2+(this.hasZ?1:0)+(this.hasM?1:0);(0,f.Lw)(c);for(const s of i){if(o+e*s>c.length){for(let e=0;e<s;e++)t.getSInt64(),t.getSInt64(),this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64();continue}let r=0,i=t.getSInt64(),n=t.getSInt64();this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64(),c[o++]=i,c[o++]=n,r+=1;for(let e=1;e<s;e++){const e=t.getSInt64(),s=t.getSInt64(),a=i+e,l=n+s;u+=-.5*(a-i)*(l+n),this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64(),0===e&&0===s||It(p,c[o-2],c[o-1],e,s)?(c[o-2]+=e,c[o-1]+=s):(c[o++]=e,c[o++]=s,r+=1),i=a,n=l}r>=h?a.push(r):o-=r*e}break}default:t.skip()}return this._cache.area=u,a.length?new he.A(a,c):null!=c?this._createDeltaQuantizedExtrudedGeometry(c[0],c[1]):null}}class wt{constructor(e,t){this.service=e,this._metadata=t}destroy(){}}class St extends wt{constructor(e,t,s){super(e,t),this._ports=[],this._loaded=this._load(s)}destroy(){this._loaded.finally(()=>{this._client.close(),this._client=null;for(const e of this._ports)e.close()}).catch(()=>{})}async _load(e){this._ports=await e.layerView.openMemoryPorts(),this._client=await async function(e){const t=new rt.A;return await t.open(e,{}),t}(this._ports)}async executeQuery(e,t){await this._loaded;const s=await this._client.invoke("queryFeatures",e.toJSON(),t);return ue.K.fromFeatureSet(s,this._metadata)}}class kt extends wt{async executeQuery(e,t){const{data:s}=await(0,nt.kS)(this.service.source,e,t),r=!e.quantizationParameters;return vt.fromBuffer(s,this._metadata,r)}}class xt extends wt{async executeQuery(e,t){const{source:s,queryMetadata:r}=this.service;if(null!=e.quantizationParameters&&!r.supportsQuantization){const r=e.clone(),i=(0,it.VV)(r.quantizationParameters);r.quantizationParameters=null;const{data:a}=await(0,nt.eW)(s,r,this._metadata.spatialReference,t),n=(0,B.q3)(a,this._metadata.featureIdInfo);return(0,B.jH)(i,n),ue.K.fromOptimizedFeatureSet(n,this._metadata)}const{data:i}=await(0,nt.eW)(s,e,this._metadata.spatialReference,t);return"esriGeometryPoint"===this._metadata.geometryType&&(i.features=i.features?.filter(e=>{if(null!=e.geometry){const t=e.geometry;return Number.isFinite(t.x)&&Number.isFinite(t.y)}return!0})),ue.K.fromFeatureSet(i,this._metadata)}}class Ft extends wt{async executeQuery(e,t){if(e.quantizationParameters&&!this.service.queryMetadata.supportsQuantization){const s=e.clone(),r=(0,it.VV)(s.quantizationParameters);s.quantizationParameters=null;const i=await(0,at.I)(this.service.source,e,t);return(0,B.jH)(r,i),ue.K.fromOptimizedFeatureSet(i,this._metadata)}const s=await(0,at.I)(this.service.source,e,t);return ue.K.fromOptimizedFeatureSet(s,this._metadata)}}class At extends Ke{constructor(e,t,s){super(e.metadata,t,s),this._service=e,this._didApplyOverride=!1,this._queue=new G.QueueProcessor({concurrency:32,process:async e=>{const t={signal:e.options?.signal,query:e.query.customParameters,useRequestQueue:!0};return this._adapter.executeQuery(e.query.inner,t)}}),this._queryInfo=st.k.create(e,{...t.full,...t.partial},this.metadata),this._adapter=function(e,t,s){switch(e.type){case"memory":return new St(e,t,s);case"ogc":return new Ft(e,t);case"feature-service":return e.queryMetadata.supportsFormatPBF&&(0,a.A)("featurelayer-pbf")?new kt(e,t):new xt(e,t)}}(e,this.metadata,s.connection),this._lastEditDate=e.queryMetadata.lastEditDate}destroy(){super.destroy(),this._adapter.destroy()}unsafeSetQueryHistoricMoment(e){this._queryInfo.updateHistoricMoment(e)}async tryUpdate(e,t){if((0,g.i8)(this.availableFields,t.availableFields)){if(this._didApplyOverride||await this._queryLastEditDateChanged())return!1;await this._updateFields(t.availableFields)}return this._schema.partial=t,!0}async queryByObjectId(e,t){if(0===e.length)return ue.K.empty(this.metadata);const s=this._queryInfo.createQuery({objectIds:e});return s.inner.outFields=t,this._fetch(s,null,null)}get availableFields(){return this._schema.partial.availableFields}get definitionExpression(){return this._schema.full.definitionExpression}_onOverride(){this._didApplyOverride=!0}async _updateFields(e){this._queryInfo.updateFields(e);const t=Array.from(this.store.chunks()).map(async e=>{const s=tt.A.fromJSON(e.queryInfo.queryJSON);if(s)try{return await this._tryUpdateFields(e.reader,s,{chunkId:e.chunkId}),null}catch(t){return t}}),s=(await Promise.all(t)).filter(e=>e);if(s.length)throw new r.A("featurelayer-query","Encountered errors when downloading fields",{errors:s})}async _fetch(e,t,s){const r=await this._enqueue(e,t);return await this._tryUpdateFields(r,e.inner,s),r}async _queryLastEditDateChanged(){if(null==this._lastEditDate)return!1;if(!("source"in this._service))return!1;const e=this._service.source,t={...e.query,f:"json"},s=(await(0,et.A)(e.path,{query:t,responseType:"json"})).data.editingInfo.lastEditDate;return s!==this._lastEditDate&&(this._lastEditDate=s,!0)}async _tryUpdateFields(e,t,s){const i=this._queryInfo.createPatchFieldsQuery(t,e,s);if(!i)return;const a=await this._enqueue(i,this._options);a.getSize()===e.getSize()?e.joinAttributes(a):xe.A.getLogger("esri.views.2d.layers.features.sources.strategies.AFetchLoadStrategy").error(new r.A("featurelayer-query",`Failed to join features. Expected a count of ${e.getSize()} features, but got ${a.getSize()}`,{query:i.inner.toJSON(),debugInfo:s}))}async _enqueue(e,t){return this._connection.onEvent({type:"fetchStart"}),this._queue.push({query:e,options:t}).finally(()=>{this._connection.onEvent({type:"fetchEnd",done:0===this._queue.length})})}}class Ct extends At{constructor(e,t,s){super(e,t,s),this._chunksById=new Map,this._featureCache=new Xe(this.store,this._queryInfo,this._options,this._fetch.bind(this))}prepareCacheUpdate(e,t){return this._featureCache.prepareCacheUpdate(e,t)}applyCacheUpdate(){return this._featureCache.applyCacheUpdate()}unload(e){this._removeChunks(e.tile)}_addChunk(e){const t=e.tile.id;this._chunksById.has(t)||this._chunksById.set(t,[]);const s=e.size();(s||e.first||e.end)&&((0,a.A)("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] ATileLoadStrategy.addChunk [count=${s}]`),this._chunksById.get(t).push(e),this.store.insert(e))}_removeChunks(e){const t=this._chunksById.get(e.key.id)??[];for(const s of t)(0,a.A)("esri-2d-update-debug")&&console.debug(`Tile[${e.key.id}] Chunk[${s.chunkId}] ATileLoadStrategy.removeChunk`),this.store.remove(s);this._chunksById.delete(e.key.id)}}var Ot=s(51681);class qt extends Ot.K{constructor(e,t,s,r,i,a){super(),this._reader=e,this._queryJSON=t,this._tile=s,this._sourceTile=r,this._sourceTileDepth=i,this._end=a,this.chunkId=`${this._tile.key.id}.${this._sourceTile?.key.id}${this._end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._sourceTile?.key.normalizedId}${this._end?"e":""}`}get queryInfo(){return{type:"drill-down-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,sourceTileDepth:this._sourceTileDepth,sourceTileId:this._sourceTile?.key.id,size:this.size(),end:this.end}}get first(){return 0===this._sourceTileDepth}get reader(){return this._reader}get end(){return this._end}get tile(){return this._tile}get isTiled(){return!0}getTileReader(e){return this._tile.key.id===e.key.id?this.reader:null}}const Mt=(0,a.A)("featurelayer-query-max-depth");class Tt{constructor(e,t){this.subscription=e,this._tileIdToResult=new Map,this._controller=new AbortController,this._handles=(0,i.vE)([(0,o.u7)(e.signal,()=>this._controller.abort()),(0,o.u7)(t,()=>this._controller.abort())])}destroy(){this._controller.abort(),this._handles.remove()}get(e){return this._tileIdToResult.get(e)}set(e,t){this._tileIdToResult.set(e,t)}get options(){return{signal:this._controller.signal}}}class Rt extends Ct{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const e of this._loadStates.values())e.destroy();this._loadStates.clear()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){this._loadStates.has(e.key.id)||this._loadStates.set(e.key.id,new Tt(e,this._options));const t=this._loadStates.get(e.key.id);let s;try{for await(const s of this._fetchChunkInfos(t,e.tile,0)){const{queryJSON:e,reader:r,sourceTile:i,sourceTileDepth:a,tile:n}=s,c=new qt(r,e,n,i,a,!1);(0,o.Te)(t.options),this._addChunk(c)}}catch(i){s=i}(0,o.Te)(t.options);const r=new qt(ue.K.empty(this.metadata),null,e.tile,null,-1,!0);if(this._addChunk(r),s)throw s}unload(e){super.unload(e),this._loadStates.get(e.key.id)?.destroy(),this._loadStates.delete(e.key.id)}async*_fetchChunkInfos(e,t,s){let r=e.get(t.id);const i=!!r;if(r||(r=await this._fetchChunkInfo(e,t,s),e.set(t.id,r)),r.reader.exceededTransferLimit&&s<(0,a.A)("featurelayer-query-max-depth"))for(const a of t.createChildTiles())yield*this._fetchChunkInfos(e,a,s+1);else i||(yield r)}async _fetchChunkInfo(e,t,s){const r=e.subscription.tile.getQuantizationParameters(),i=this._queryInfo.createTileQuery(t,{returnExceededLimitFeatures:s===Mt,quantizationParameters:r});return{reader:await this._fetch(i,e.options,{chunkId:t.id}),queryJSON:i.inner.toJSON(),tile:e.subscription.tile,sourceTile:t,sourceTileDepth:s}}}var Pt=s(87663);class Et extends Ot.K{constructor(e,t,s,r,i){super(),this._reader=e,this._queryJSON=t,this._tile=s,this._page=r,this._end=i,this.chunkId=`${this._tile.key.id}.${this._page}${this.end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._page}${this.end?"e":""}`}get queryInfo(){return{type:"paged-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get reader(){return this._reader}get first(){return 0===this._page}get end(){return this._end}get page(){return this._page}get tile(){return this._tile}get isTiled(){return!0}getTileReader(e){return this._tile.key.id===e.key.id?this.reader:null}}class Dt{constructor(e,t){this.subscription=e,this._pages=new Set,this._controller=new AbortController,this._done=!1,this._handles=(0,i.vE)([(0,o.u7)(e.signal,()=>this._controller.abort()),(0,o.u7)(t,()=>this._controller.abort())])}destroy(){this._controller.abort(),this._handles.remove()}get pageStart(){let e=-1;for(const t of this._pages.values())e=Math.max(e,t);return e+1}get done(){return this._done}get options(){return{signal:this._controller.signal}}add(e,t){this._pages.add(e),this._done=this._done||t}}class jt extends Ct{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const e of this._loadStates.values())e.destroy();this._loadStates.clear()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){const t=(0,Pt.tE)(this._loadStates,e.key.id,()=>new Dt(e,this._options));for await(const s of this._fetchPages(t))this._addChunk(s)}unload(e){super.unload(e),this._loadStates.get(e.key.id)?.destroy(),this._loadStates.delete(e.key.id)}async*_fetchPages(e){let t;try{for await(const t of this._concurrentPageStream(e))(0,o.Te)(e.options),0!==t.size()&&(yield t)}catch(s){t=s}if(t&&(0,o.zf)(t)||(yield new Et(ue.K.empty(this.metadata),null,e.subscription.tile,-1,!0)),t)throw t}async*_concurrentPageStream(e){const t=(0,a.A)("featurelayer-query-tile-concurrency"),s=this._pageStreamAll(e),r=[];let i=!1,n=1;for(;!i;){const e=[];for(;!i&&r.length<n;){const t=s.next();if(!t.value){i=!0;break}const a=t.value;a.then(e=>{e.reader.exceededTransferLimit||(i=!0)}).catch(e=>{i=!0}).finally(()=>{r.splice(r.indexOf(a),1)}),r.push(a),e.push(a)}for(const t of e)yield t;r.length&&await Promise.race(r),n<t&&(n+=1)}}*_pageStreamAll(e){const t=Math.ceil((0,a.A)("featurelayer-query-tile-max-features")/this._queryInfo.pageSize);for(let s=0;s<t;s++)yield this._downloadPage(s,e)}async _downloadPage(e,t){(0,o.Te)(t.options);const s=t.subscription.tile,r=this._queryInfo.createPagedTileQuery(s,e),i=await this._fetch(r,t.options,{chunkId:`${s.id}-${e}`});return(0,o.Te)(t.options),new Et(i,r.inner.toJSON(),s,e,!1)}}var zt=s(69194);class Ut extends At{constructor(e,t,s){super(e,t,s)}get about(){return{willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}load(e){return null==this._promise&&(this._promise=this._download()),this._promise}unload(e){}async _download(){const e=this._schema.snapshotInfo.initialTolerance,t=e?new zt.A({mode:"view",originPosition:"upper-left",tolerance:e}):null;await this._downloadStreaming(t),null!=t&&await this._downloadRefresh()}async _downloadStreaming(e){try{for await(const t of this._fetchPages(e))this.store.insert(t)}catch(t){throw new r.A("featurelayer-query","Encountered error when downloading data",{error:t})}}async _downloadRefresh(){try{const e=[];for await(const t of this._fetchPages(null))e.push(t);this.store.clear();for(const t of e)this.store.insert(t);this.store.refresh()}catch(_){throw new r.A("featurelayer-query","Encountered error when downloading data",{error:_})}}async*_fetchPages(e){let t;try{for await(const t of this._concurrentPageStream(e))0!==t.size()&&(yield t)}catch(s){t=s}if(t&&(0,o.zf)(t)||(yield new Je.j(ue.K.empty(this.metadata),null,-1,!0)),t)throw t}async*_concurrentPageStream(e){const t=(0,a.A)("featurelayer-snapshot-concurrency"),s=this._pageStreamAll(e),r=[];let i=!1,n=1;for(;!i;){const e=[];for(;!i&&r.length<n;){const t=s.next();if(!t.value){i=!0;break}const a=t.value;a.then(e=>{e.reader.exceededTransferLimit||(i=!0)}).catch(e=>{i=!0}).finally(()=>{r.splice(r.indexOf(a),1)}),r.push(a),e.push(a)}for(const t of e)yield t;r.length&&await Promise.race(r),n<t&&(n+=1)}}*_pageStreamAll(e){const t=Math.ceil(this._schema.snapshotInfo.maxFeatureCount/this._queryInfo.pageSize);for(let s=0;s<t;s++)yield this._downloadPage(s,e)}async _downloadPage(e,t){(0,o.Te)(this._options);const s=this._queryInfo.createPagedQuery(e,t),r=await this._fetch(s,this._options,{chunkId:e.toString()}),i=new Je.j(r,s.inner.toJSON(),e,!1);return(0,o.Te)(this._options),i}}var Lt=s(41289),Gt=s(67103),Nt=s(27428);class Qt extends Ke{constructor(e,t,s){super(e.metadata,t,s),this._service=e,this._chunkId=0,this._files=new Map}destroy(){super.destroy();for(const e of this._files.values())e.free();this._files.clear()}get about(){return{willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}get availableFields(){return this._schema.partial.availableFields}get definitionExpression(){return this._schema.full.definitionExpression}async tryUpdate(e,t){if((0,g.i8)(this.availableFields,t.availableFields)&&await this._updateFields(t.availableFields),(0,g.i8)(this._schema.partial.urls,t.urls)){for(const e of t.urls)this._files.has(e)||await this._insert(e);for(const e of this._files.keys())if(!t.urls.includes(e))throw new r.A("unsupported","Removing parquet files is not supported",{previous:this._schema.partial.urls,next:t.urls})}return this._schema.partial=t,!0}async load(e){return null==this._promise&&(this._promise=this._download()),this._promise}unload(e){}_onOverride(){}async _updateFields(e){await this._promise;const t=new Set(e),s=(0,Lt.iv)(t,new Set(this.availableFields)),r=this._fieldsIndex;if(null==r)return;const i=Array.from(s).map(e=>r.get(e)?.column);if(s.size)for(const a of this._files.values())await a.ensureFields(new Uint32Array(i))}async _insert(e){const t=await(0,Gt.DV)(e,{geometryInfo:this._service.geometryInfo,outSpatialReference:this._service.outSpatialReference,getCustomParameters:()=>this._schema.full.customParameters}),s=this._files.size;this._files.set(e,t),(0,o.Te)(this._options);const r=t.fields().map(e=>({name:e.name,alias:e.name,type:e.type,column:t.columnForFieldName(e.name)})),{timeZoneByFieldName:i}=this._service.metadata.fieldsIndex,a=$.A.fromJSON({fields:r,timeZoneByFieldName:i});this._fieldsIndex=a;const n=new Uint32Array(Array.from(this.availableFields.values()).map(e=>a.get(e)?.column).filter(e=>null!=e));await t.readAllChunks(n,this._signal,e=>{if(this._signal.aborted)return;const t=this._chunkId++,r=new Nt.s(this.metadata,a,e,t,s),i=new Je.j(r,null,t,!1);this.store.insert(i)})}async _download(){try{await Promise.all(this._schema.partial.urls.map(e=>this._insert(e)));const e=new Je.j(ue.K.empty(this.metadata),null,-1,!0);this.store.insert(e)}catch(se){throw console.error(se),se}}}var Bt=s(65215);class Wt extends Ot.K{constructor(e,t,s,r,i){super(),this._metadata=e,this._reader=t,this._tile=s,this._page=r,this._end=i,this.chunkId=`${this._tile.key.id}.${this._page}${this.end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._page}${this.end?"e":""}`}get reader(){return this._reader??ue.K.empty(this._metadata)}get first(){return 0===this._page}get end(){return this._end}get tile(){return this._tile}get queryInfo(){return{type:"parquet",chunkId:this.chunkId,queryJSON:null,page:this._page,size:this.size(),tileId:this._tile.id,end:this.end}}get isTiled(){return!0}getTileReader(e){if(this._tile.key.id===e.key.id){const t=[];for(let e=0;e<this.reader.getSize();e++)t.push(e);const s=Te.e.from(this.reader,t);return s.setTransformForDisplay(e.transform),s}return null}}class Vt extends Ke{constructor(e,t,s){if(super(e.metadata,t,s),this._files=[],!e.geometryInfo.displayOptimization)throw new Error("InternalError: ParquetTileLoadStrategy only supports XZ-enabled parquet files");this._index=$t.create(t.partial.urls,this.metadata,e,new Set(t.partial.availableFields),this.store,()=>t.full.customParameters)}destroy(){super.destroy();for(const e of this._files)e.free()}get about(){return{willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}get availableFields(){return this._schema.partial.availableFields}get definitionExpression(){return this._schema.full.definitionExpression}async tryUpdate(e,t){return(0,g.i8)(this.availableFields,t.availableFields)&&await this._updateFields(t.availableFields),this._schema.partial=t,!0}async load(e){const t=await this._index;await t.ensureLoaded(e)}unload(e){this._index.then(t=>t.unload(e.tile))}_onOverride(){}async _updateFields(e){return(await this._index).updateFields(e)}}class $t{static async create(e,t,s,r,i,a){const n=await Promise.all(e.map(e=>(0,Gt.DV)(e,{geometryInfo:s.geometryInfo,outSpatialReference:s.outSpatialReference,getCustomParameters:a})));if(1!==n.length)throw new Error("InternalError: experimental parquet XZ display optimization only supports a single file.");const[o]=n,c=o.fields().map(e=>({name:e.name,alias:e.name,type:e.type,column:o.columnForFieldName(e.name)})),{timeZoneByFieldName:u}=s.metadata.fieldsIndex,l=$.A.fromJSON({fields:c,timeZoneByFieldName:u}),d=new Uint32Array(Array.from(r.values()).map(e=>l.get(e)?.column).filter(e=>null!=e)),h=s.geometryInfo.displayOptimization;if(!h)throw new Error("InternalError: tiled parquet load requires display optimization");return new $t(t,await Promise.all(n),l,d,i,r,h)}constructor(e,t,s,r,i,a,n){this._metadata=e,this._files=t,this._fieldsIndex=s,this._fieldIndices=r,this._store=i,this._availableFields=a,this._displayOptimization=n,this.fileIndex=0,this._queue=new G.QueueProcessor({concurrency:32,process:e=>this._ensureLoaded(e)}),this._tileIdToChunkId=new Map}get file(){return this._files[0]}async ensureLoaded(e){return this._queue.push(e)}unload(e){const t=this._tileIdToChunkId.get(e.id);if(null!=t){for(const e of t)this._store.removeById(e);this._tileIdToChunkId.delete(e.id)}}async _ensureLoaded(e){const t=this._metadata.outSpatialReference,s=e.tile,{xmin:r,ymin:i,xmax:a,ymax:n}=function(e,t){const s=[e.xmin,e.ymin,e.xmax,e.ymax],r=Bt.A.fromExtent((0,Ce.w1)(s,t)),i=(0,V.Cv)(r,t,Q.A.WGS84);if(!i)return null;const a=(0,B.Ye)(new he.A,i,!1,!1),n=a.coords.filter((e,t)=>!(t%2)),o=a.coords.filter((e,t)=>t%2);return{xmin:Math.min(...n),ymin:Math.min(...o),xmax:Math.max(...n),ymax:Math.max(...o)}}(s.extent,t);let o=0;const c={extent:s.extent,extent_lat_lng:{xmin:r,ymin:i,xmax:a,ymax:n},tile_level:s.level,attributes:this._fieldIndices};if("z"===this._displayOptimization.mode?await this.file.queryZChunks(c.extent_lat_lng,this._fieldIndices,e.signal,t=>{if(e.signal.aborted)return;const r=new Nt.s(this._metadata,this._fieldsIndex,t,o,this.fileIndex),i=new Wt(this._metadata,r,s,o++,!1);this._insertChunk(s,i)}):await this.file.queryXZChunks(c,e.signal,t=>{if(e.signal.aborted)return;const r=new Nt.s(this._metadata,this._fieldsIndex,t,o,this.fileIndex),i=new Wt(this._metadata,r,s,o++,!1);this._insertChunk(s,i)}),e.signal.aborted)return;const u=new Wt(this._metadata,null,s,o++,!0);this._insertChunk(s,u)}_insertChunk(e,t){let s=this._tileIdToChunkId.get(e.id);null==s&&(s=[],this._tileIdToChunkId.set(e.id,s)),s.push(t.chunkId),this._store.insert(t)}async updateFields(e){const t=new Set(e),s=(0,Lt.iv)(t,this._availableFields);if(this._availableFields=(0,Lt.KC)(s,this._availableFields),s.size)for(const r of this._files){const e=Array.from(s).map(e=>this._fieldsIndex.get(e)?.column);await r.ensureFields(new Uint32Array(e))}}}var Kt=s(71976),Ht=s(15941);class Jt{constructor(e,t,s,i){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:128;if(this._trackIdToObservations=new Map,this._idCounter=0,this._lastPurge=performance.now(),this._addOrUpdated=new Map,this._removed=[],this._maxAge=0,this._timeInfo=s,this._purgeOptions=i,this.store=e,"unique-id-composite"===t.type)throw new r.A("stream-layer","composite uniqueIds are not supported");this.idField=t.fieldName,this.purgeInterval=a,this._useGeneratedIds=this.idField===F.DN}removeById(e){this._removed.push(e)}removeByTrackId(e){const t=this._trackIdToObservations.get(e);if(t)for(const s of t.entries)this._removed.push(s)}add(e){if(this._useGeneratedIds){const t=this._nextId();e.attributes[this.idField]=t,e.objectId=t}else e.objectId=e.attributes[this.idField];const t=e.objectId;if(this._addOrUpdated.set(t,e),this._maxAge=Math.max(this._maxAge,e.attributes[this._timeInfo.startTimeField]),!this._timeInfo.trackIdField)return null==this._trackIdLessObservations&&(this._trackIdLessObservations=new Kt.A(1e5)),void this._trackIdLessObservations.enqueue(t);const s=e.attributes[this._timeInfo.trackIdField];if(!this._trackIdToObservations.has(s)){const e=null!=this._purgeOptions?.maxObservations?this._purgeOptions.maxObservations:1e3,t=(0,Ht.qE)(e,0,1e3);this._trackIdToObservations.set(s,new Kt.A(t))}const r=this._trackIdToObservations.get(s),i=r?.enqueue(t);null!=i&&(this._addOrUpdated.has(i)?this._addOrUpdated.delete(i):this._removed.push(i))}checkForUpdates(){const e=this._getToAdd(),t=this._getToRemove(),s=performance.now(),r=s-this._lastPurge,i=Date.now();r>=this.purgeInterval&&(this._purge(s),this._lastPurge=s);const a=[];if(null!=t)for(const o of t){const e=this.store.removeById(o);null!=e&&a.push(e)}const n=[];if(null!=e){const r=new Set(t??[]);for(const t of e)r.has(t.objectId)||(t.attributes[F.Gm]=s,t.attributes[F.Aw]=i,this.store.add(t),n.push(t))}return!(!n.length&&!a?.length)&&(this.store.update(n,a),!0)}_getToAdd(){if(!this._addOrUpdated.size)return null;const e=new Array(this._addOrUpdated.size);let t=0;return this._addOrUpdated.forEach(s=>e[t++]=s),this._addOrUpdated.clear(),e}_getToRemove(){const e=this._removed;return this._removed.length?(this._removed=[],e):null}_nextId(){const e=this._idCounter;return this._idCounter=(this._idCounter+1)%4294967294+1,e}_purge(e){const t=this._purgeOptions;null!=t&&(this._purgeSomeByDisplayCount(t),this._purgeByAge(t),this._purgeByAgeReceived(e,t),this._purgeTracks())}_purgeSomeByDisplayCount(e){if(!e.displayCount)return;let t=this.store.size;if(t>e.displayCount){if(this._timeInfo.trackIdField)for(const s of this._trackIdToObservations.values())if(t>e.displayCount&&s.size){const e=s.dequeue();this._removed.push(e),t--}if(null!=this._trackIdLessObservations){let s=t-e.displayCount;for(;s-- >0;){const e=this._trackIdLessObservations.dequeue();null!=e&&this._removed.push(e)}}}}_purgeByAge(e){const t=this._timeInfo?.startTimeField;if(!e.age||!t)return;const s=60*e.age*1e3,r=this._maxAge-s;this.store.forEach(e=>{e.attributes[t]<r&&this._removed.push(e.objectId)})}_purgeByAgeReceived(e,t){if(!t.ageReceived)return;const s=e-60*t.ageReceived*1e3;this.store.forEach(e=>{e.attributes[F.Gm]<s&&this._removed.push(e.objectId)})}_purgeTracks(){this._trackIdToObservations.forEach((e,t)=>{0===e.size&&this._trackIdToObservations.delete(t)})}}var Zt=s(55039);let Yt=class extends Qe.A{constructor(e){super(e)}get connectionStatus(){return this.connection?.connectionStatus}get errorString(){return this.connection?.errorString}};(0,Ne.Cg)([(0,Be.MZ)()],Yt.prototype,"connection",void 0),(0,Ne.Cg)([(0,Be.MZ)()],Yt.prototype,"connectionStatus",null),(0,Ne.Cg)([(0,Be.MZ)()],Yt.prototype,"errorString",null),Yt=(0,Ne.Cg)([(0,We.$)("esri.views.2d.layers.features.sources.StreamConnectionState")],Yt);class Xt{constructor(e,t){this._metadata=e,this._onUpdate=t,this._objectIdToFeature=new Map}get size(){return this._objectIdToFeature.size}get reader(){return ue.K.fromFeatures([...this._objectIdToFeature.values()],this._metadata)}add(e){this._objectIdToFeature.set(e.objectId,e)}forEach(e){this._objectIdToFeature.forEach(e)}removeById(e){const t=this._objectIdToFeature.get(e);return t?(this._objectIdToFeature.delete(e),t):null}clear(){this._objectIdToFeature=new Map}update(e,t){this._onUpdate(e?.length??0)}}class es extends Ot.K{constructor(e){super(),this._reader=e,this.chunkId="stream-chunk",this.normalizedChunkId="stream-chunk"}get reader(){return this._reader}get first(){return!0}get end(){return!0}get queryInfo(){return{type:"stream",chunkId:this.chunkId,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(e){const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}}class ts extends Ke{constructor(e,t,s){super(e.metadata,t,s),this._service=e,this._connectionState=new Yt,this._forceRefresh=!1,this.events=new J.bk;const{timeInfo:r}=this.metadata,{purgeOptions:i}=t.full;this._stagingStore=new Xt(this.metadata.weakCloneWithAdditionalFields([{name:F.Aw,alias:"timeReceived",type:"esriFieldTypeDate"}]),e=>this.events.emit("features-updated",e)),this._manager=new Jt(this._stagingStore,this.metadata.featureIdInfo,r,i),this.connect()}destroy(){super.destroy(),this.disconnect()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}get connectionStatus(){return this._connectionState.connectionStatus}get errorString(){return this._connectionState?.errorString}get availableFields(){return this._schema.full.availableFields}get definitionExpression(){return this._schema.full.definitionExpression}async tryUpdate(e,t){const s=null!=this._chunk;if(t.sourceRefreshVersion!==this._refreshVersion){if(this._refreshVersion=t.sourceRefreshVersion,!this._manager.checkForUpdates()&&s&&!this._forceRefresh)return this.events.emit("tick"),!0;this._chunk&&(this.store.remove(this._chunk),e.requireInvalidation()),this._forceRefresh=!1,this._chunk=new es(this._stagingStore.reader),this.store.insert(this._chunk),this.events.emit("tick")}return this._schema.partial=t,!0}async load(e){}unload(e){}disconnect(){this._streamConnection=(0,f.pR)(this._streamConnection),this._connectionState.connection=null,this._handlesGroup?.remove()}connect(){if(null!=this._streamConnection)return;const{geometryType:e,spatialReference:t}=this.metadata,{maxReconnectionAttempts:s,maxReconnectionInterval:r,geometryDefinition:a,definitionExpression:n,customParameters:o}=this._schema.full;this._streamConnection=(0,Zt.createConnection)(this._service.source,t,this._service.outSpatialReference,e,n,a,s,r,o),this._handlesGroup=(0,i.vE)([this._streamConnection.on("data-received",e=>this._onFeature(e)),this._streamConnection.on("message-received",e=>this._onWebSocketMessage(e))]),this._connectionState.connection=this._streamConnection}clear(){this._manager.checkForUpdates(),this._stagingStore.clear(),this._forceRefresh=!0}updateCustomParameters(e){this._streamConnection?.updateCustomParameters(e)}sendMessageToSocket(e){this._streamConnection?.sendMessageToSocket(e)}sendMessageToClient(e){this._streamConnection?.sendMessageToClient(e)}_onOverride(){}_onWebSocketMessage(e){if("type"in e)switch(e.type){case"delete":if(e.objectIds)for(const t of e.objectIds)this._manager.removeById(t);if(e.trackIds)for(const t of e.trackIds)this._manager.removeByTrackId(t);break;case"clear":this.clear()}this.events.emit("message-received",e)}_onFeature(e){try{this._manager.add(e),this.events.emit("data-received",e)}catch(_){}}}var ss=s(21666),rs=s(33817);class is{constructor(e,t,s,r){this._aggregateAdapter=e,this._subscriptions=t,this._connection=s,this._cachedObjectIds=r,this._updateTracking=new rs.F({debugName:"FeatureSource"}),this.store=new ss.I}destroy(){this._strategy?.destroy(),this._streamMessenger?.destroy(),this._updateTracking?.destroy(),this.store.destroy()}get metadata(){return this._strategy.metadata}get streamMessenger(){return null==this._streamMessenger&&this._initStreamMessenger(),this._streamMessenger}get statistics(){return Ge.from(this.store)}get updateTracking(){return this._updateTracking}get usedMemory(){return this.store.usedMemory}get queryEngine(){if(!this._queryEngine){if(!this.store||!this._strategy)return null;this._queryEngine=new X.do({featureStore:this.store,fieldsIndex:this.metadata.fieldsIndex,geometryType:this.metadata.geometryType,featureIdInfo:this.metadata.featureIdInfo,hasM:!1,hasZ:!1,spatialReference:this.metadata.outSpatialReference,aggregateAdapter:this._aggregateAdapter,timeInfo:this.metadata.timeInfo,definitionExpression:this._strategy?.definitionExpression,availableFields:this._strategy?.availableFields})}return this._queryEngine}get isStream(){return"stream"===this._schema.type}get hasQueryDisplayFilter(){if(!this._schema)return!1;switch(this._schema.type){case"feature":return null!=this._schema.strategy.full.displayFilterInfo;case"parquet":case"stream":return!1}}chunks(){return Array.from(this.store.chunks())}prepareCacheUpdate(e,t){const s=new Set,r=new Set;for(const i of e)this._cachedObjectIds.has(i)||(this._cachedObjectIds.add(i),s.add(i));for(const i of t)this._cachedObjectIds.delete(i),r.add(i);this.hasQueryDisplayFilter&&this._strategy.prepareCacheUpdate(s,r)}async applyCacheUpdate(){this.hasQueryDisplayFilter&&await this._updateTracking.addPromise(this._strategy.applyCacheUpdate())}cleanup(){return this.store.cleanup()}onSubscribe(e){if(this._connection.onEvent({type:"subscribe",tile:e.tile.id}),!this._strategy)return;const t=this._strategy.load(e);t.then(()=>this._connection.onEvent({type:"loaded",tile:e.tile.id})).catch(t=>this._connection.onEvent({type:"error",tile:e.tile.id,error:t})),this._updateTracking.addPromise(t)}onResume(e){this._updateTracking.addPromise((0,o.QZ)(this._strategy?.load(e)))}onUnsubscribe(e){this._connection.onEvent({type:"unsubscribe",tile:e.tile.id}),this._strategy?.unload(e)}async applyOverride(e){await(this._strategy?.applyOverride(e))}takeOverrideUpdate(){return this._strategy?.takeOverrideUpdate()}async update(e,t){const s=this._schema;if(this._schema=e,this._queryEngine=(0,f.pR)(this._queryEngine),s&&s.type!==e.type)throw new Error("InternalError: Reconfiguring source types is not supported.");const r=new $e;return!s||(0,g.i8)(s.service,e.service)||s.strategy.type!==e.strategy.type||(0,g.i8)(e.strategy.full,s.strategy.full)||!await this._strategy.tryUpdate(r,e.strategy.partial)?(await this._updateStrategyType(this._schema.service,e,t),await this.store.update({metadata:this.metadata,definitionExpression:this._schema.strategy.full.definitionExpression}),!0):r.requiresInvalidation}unsafeSetQueryHistoricMoment(e){"feature"===this._schema.type&&(this._schema.strategy.full.historicMoment=e,this._strategy.unsafeSetQueryHistoricMoment(new Date(e)))}_initStreamMessenger(){null==this._streamMessenger&&(this._streamMessenger=new Ve(this._connection))}async normalizeOverrides(e){const t={historicMoment:e.historicMoment,commands:{updateWeak:e.commands.updateWeak.map(W.Om.fromJSON),removeWeak:e.commands.removeWeak,update:e.commands.update.map(W.Om.fromJSON),remove:e.commands.remove,release:e.commands.release}},s=e.commands.updateByIdWeak,r=await this._queryOptimizedFeatures(s);if(r.length!==s.length){const e=new Set(r.map(e=>e.objectId));for(const r of s)e.has(r)||t.commands.removeWeak.push(r)}return t.commands.updateWeak.push(...r),t}async _queryOptimizedFeatures(e){if(0===e.length)return[];const t=[],s=(await this._strategy.queryByObjectId(e,["*"])).getCursor();for(;s.next();)t.push(s.readOptimizedFeatureWorldSpace());return t}getObjectIdsFromGlobalIds(e){const t=this.metadata.globalIdField;if(null==t)throw new Error("InternalError: Recieved an edit with globalIds, but not supported by the service");const s=this.store.mapObjectIdsFromGlobalIds(e,t).values();return Array.from(s)}async _updateStrategyType(e,t,s){const r=this._createStrategy(e,t);this._connection.onEvent({type:"updateStrategyStart",about:r.about});const i=!!this._strategy;this.store.clear(),this._strategy?.destroy(),this._strategy=r,(0,a.A)("esri-2d-update-debug")&&console.debug(`Version[${s}] FeatureSource.updateStrategy`,{strategy:r});const n=Array.from(this._subscriptions.values());if(!n.length)return void this._connection.onEvent({type:"updateStrategyEnd"});const c=Promise.all(n.map(e=>this._strategy.load(e).then(()=>this._connection.onEvent({type:"loaded",tile:e.tile.id})).catch(t=>this._connection.onEvent({type:"error",tile:e.tile.id,error:t}))));this._updateTracking.addPromise(c),this._strategy.prepareCacheUpdate(this._cachedObjectIds);try{i&&await c}catch(u){(0,o.jH)(u)}this._connection.onEvent({type:"updateStrategyEnd"}),(0,a.A)("esri-2d-update-debug")&&console.debug(`Version[${s}] FeatureSource.updateStrategyEnd`,{strategy:r})}_createStrategy(e,t){const s={connection:this._connection,store:this.store};switch(t.type){case"feature":return this._createFeatureLoadStrategy(e,t.strategy,s);case"parquet":return this._createParquetLoadStrategy(e,t.strategy,s);case"stream":return this._createStreamLoadStrategy(e,t.strategy,s)}}_createFeatureLoadStrategy(e,t,s){switch(t.type){case"drill-down":return new Rt(e,t,s);case"paged-tile":return new jt(e,t,s);case"snapshot":return new Ut(e,t,s)}}_createParquetLoadStrategy(e,t,s){switch(t.type){case"xz":return new Vt(e,t,s);case"snapshot":return new Qt(e,t,s)}}_createStreamLoadStrategy(e,t,s){const r=new ts(e,t,s);return this.streamMessenger.strategy=r,r}}class as{constructor(e,t){this.tile=e,this.version=t,this._abortController=new AbortController}get key(){return this.tile.key}get signal(){return this._abortController.signal}abort(){this._abortController.abort()}}var ns=s(9835);class os{constructor(e){this.inner=e,this.resolver=(0,o.Tw)()}}class cs{constructor(){this._aggregateAdapter={getFeatureObjectIds:e=>this._processor.getFeatureObjectIdsForAggregate(e)},this._subscriptions=new Map,this._cachedObjectIds=new Set,this._updateRequested=!1,this._didSourceRefresh=!1,this._updateSubscriptionRequests=[],this._updateHighlightRequests=[]}destroy(){this._subscriptions.clear(),this._processor?.destroy(),this._source?.destroy(),this._handles?.remove(),this._updateOverridesRequest=null,this._tileInfoView=null}onAttach(e){(0,a.A)("esri-2d-update-debug")&&console.debug("Pipeline.onAttach");const t=this._connection,s=h.A.fromJSON(e.tileInfoJSON);this._tileInfoView=new m.A(s),this._source=new is(this._aggregateAdapter,this._subscriptions,t,this._cachedObjectIds),this._processor=new Ue(t,this._source),this._handles=(0,i.vE)([this._source.store.events.on("changed",()=>this._requestUpdate()),this._source.store.events.on("refresh",()=>this._requestRefresh()),(0,u.wB)(()=>this._source.updateTracking.updating,()=>{this._requestUpdate(),(0,o.QZ)(this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0}))})])}onDetach(){(0,a.A)("esri-2d-update-debug")&&console.debug("Pipeline.onDetach"),this.destroy()}set remoteClient(e){this._connection=new _(e)}get features(){const e=this._source?.queryEngine;if(!e)throw new r.A("no-queryEngine","No query engine defined");return e}get aggregates(){const e=this._processor?.aggregateQueryEngine;if(!e)throw new r.A("no-queryEngine","No aggregate query engine defined");return e}get processor(){return this._processor}get streamMessenger(){return this._source.streamMessenger}getUsedMemory(){return this._source.usedMemory+this._processor.usedMemory}getDisplayFeatures(e){return this._processor.getDisplayFeatures(e)}getDisplayIds(e){return this._processor.getDisplayIds(e)}getObjectIdsFromGlobalIds(e){return this._source.getObjectIdsFromGlobalIds(e)}async updateSchema(e,t){return(0,a.A)("esri-2d-update-debug")&&this._updateSchemaRequest&&console.error("InternalError: Schema already updating"),this._updateSchemaRequest=new os({schema:e,version:t}),this._requestUpdate(),this._updateSchemaRequest.resolver.promise}updateSubscriptions(e){const t=new os(e);return this._updateSubscriptionRequests.push(t),this._requestUpdate(),t.resolver.promise}updateHighlight(e){const t=new os(e);return this._updateHighlightRequests.push(t),this._requestUpdate(),t.resolver.promise}async onOverride(e){if(null!=this._updateOverridesRequest)throw new r.A("featurelayer","InternalError - Already processing an edit");this._updateOverridesRequest=new os(e);const t=this._updateOverridesRequest.resolver.promise;return this._requestUpdate(),t}queryStatistics(){return this._source.statistics.toJSON()}async queryVisibleFeatures(e,t){return this.features.executeQuery(e,t)}async queryHeatmapStatistics(e){const t=Math.round((0,l.Lz)(e.radius));let s=Number.POSITIVE_INFINITY,r=Number.NEGATIVE_INFINITY;const i="string"==typeof e.fieldOffset,a=e.fieldOffset??0,n=Array.from(this._subscriptions.values()),o=this._source.chunks(),c=t**2,u=3/(Math.PI*c),d=2*t,h=Math.ceil(p.CQ/d);for(const l of n){const t=l.tile,n=new Float64Array(h*h);for(const s of o){const r=s.getTileReader(t);if(!r)continue;const o=r.getCursor();for(;o.next();){let t=1;if(null!=e.field){const s=o.readAttribute(e.field);t=i?-1*+s:+s+a}const s=o.readXForDisplay()/d,r=o.readYForDisplay()/d,l=Math.floor(s),p=Math.floor(r);if(l<0||p<0||l>=h||p>=h)continue;const _=((.5+l-s)*d)**2+((.5+p-r)*d)**2;if(_>c)continue;const f=t*(u*(1-_/c)**2);n[p+l*h]+=f}}for(let e=0;e<n.length;e++)s=Math.min(s,n[e]),r=Math.max(r,n[e])}return{max:r,min:s}}async getSampleFeatures(e){const t=this._source.chunks();if(t.reduce((e,t)=>e+t.size(),0)<=e.minFeatureCount){if(!this._source.updateTracking.updating){const e=[];return this._source.store.forEachUnsafe(t=>e.push(t.readLegacyFeatureWorldSpace())),e}return null}const s=new Set,r=[],i=t.map(e=>e.reader.getCursor()),a=new c.A,n=3*e.sampleSize;for(let o=0;o<n&&r.length<e.sampleSize;o++){const e=i[a.getIntRange(0,t.length-1)];if(0===e.getSize())continue;const n=a.getIntRange(0,e.getSize()-1);e.setIndex(n);const o=e.getObjectId();s.has(o)||(s.add(o),r.push(e.readLegacyFeatureWorldSpace()))}return r.length>=e.sampleSize?r:null}_requestUpdate(){this._updateRequested||(this._updateRequested=!0,(0,n.d)(()=>this._scheduleNextUpdate()))}_requestRefresh(){this._didSourceRefresh=!0,this._requestUpdate()}_scheduleNextUpdate(){this._updateRequested&&(this._ongoingUpdate||(this._ongoingUpdate=(0,d.oV)(this._doUpdate()).finally(()=>{this._ongoingUpdate=null,this._scheduleNextUpdate()}),this._updateRequested=!1))}_subscribe(e){const t=e.tileId;if(this._subscriptions.has(t))return;(0,a.A)("esri-2d-update-debug")&&console.debug(`Tile[${t}] Pipeline.subscribe`);const s=new ns.F(this._tileInfoView,t),r=new as(s,e.version);this._subscriptions.set(t,r),this._source.onSubscribe(r),this._processor.onSubscribe(r)}_unsubscribe(e){const t=this._subscriptions.get(e);t&&((0,a.A)("esri-2d-update-debug")&&console.debug(`Tile[${e}] Pipeline.unsubscribe`),t.abort(),this._source.onUnsubscribe(t),this._processor.onUnsubscribe(t),this._subscriptions.delete(t.key.id))}async _doUpdate(){if((0,a.A)("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateStart"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0}),this._updateSubscriptionRequests.length){const e=this._updateSubscriptionRequests;this._updateSubscriptionRequests=[];for(const t of e)this._doUpdateSubscriptions(t.inner),t.resolver.resolve()}if(this._updateHighlightRequests.length){const e=this._updateHighlightRequests,t=new Set,s=new Set;for(const r of e)for(const{objectId:e,highlightFlags:i}of r.inner.highlights)i?(t.add(e),s.delete(e)):(s.add(e),t.delete(e));this._source.prepareCacheUpdate(t,s)}const e=this._updateSchemaRequest;this._updateSchemaRequest=null;let t=!1;if(null!=e){const{schema:s,version:r}=e.inner;t=await this._doUpdateSchema(s,r)}this._processor.requiresInvalidation()&&(t=!0),this._didSourceRefresh&&(t=!0,this._didSourceRefresh=!1),t&&(this._processor.invalidate(),await this._connection.container.updateRenderState(this._processor.version));const s=this._updateOverridesRequest;if(this._updateOverridesRequest=null,null!=s){(0,a.A)("esri-2d-update-debug")&&console.debug("Pipeline.applyOverride",s.inner),null!=s.inner.historicMoment&&this._source.unsafeSetQueryHistoricMoment(s.inner.historicMoment);const e=await this._source.normalizeOverrides(s.inner);await this._source.applyOverride(e),(0,a.A)("esri-2d-update-debug")&&console.debug("Pipeline.endOverride",s.inner)}if(await this._source.applyCacheUpdate(),this._updateHighlightRequests.length){const e=this._updateHighlightRequests;this._updateHighlightRequests=[];for(const t of e)this._processor.updateHighlight(t.inner),t.resolver.resolve()}const r=this._source.cleanup();this._processor.removeChunks(r);try{const e=this._source.takeOverrideUpdate();if(null!=e&&this._subscriptions.size){(0,a.A)("esri-2d-update-debug")&&console.debug("Pipeline.applyOverrideChangesStart"),await this._connection.container.lockForOverrides();try{await this._processor.applyOverrideUpdate(e)}catch(i){(0,a.A)("esri-2d-update-debug")&&console.debug("InternalError",i)}await this._connection.container.unlockForOverrides(),(0,a.A)("esri-2d-update-debug")&&console.debug("Pipeline.applyOverrideChangesEnd")}this._subscriptions.size&&((0,a.A)("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksStart"),await this._processor.updateChunks(),(0,a.A)("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksEnd"))}catch(i){(0,o.jH)(i)}null!=s&&s.resolver.resolve(),null!=e&&e.resolver.resolve(),null==e&&t&&await this._connection.container.trySwapRenderState(),this._connection.onEvent({type:"performance",usedMemory:this.getUsedMemory()}),this._updateRequested?((0,a.A)("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=true]"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0})):((0,a.A)("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=false, After flush]"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:this._updateRequested}))}async _doUpdateSchema(e,t){(0,a.A)("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateStart`,{schema:e});const s={tileInfo:this._tileInfoView?.tileInfo},r=await this._source.update(e.source,t),i=Array.from(this._subscriptions.values()),n=this._processor.update(e,t,s,r,i);return(0,a.A)("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateEnd`),n}_doUpdateSubscriptions(e){(0,a.A)("esri-2d-update-debug")&&console.debug("Pipeline.updateSubscriptions",e);for(const t of e.subscribe)this._subscribe(t);for(const t of e.unsubscribe)this._unsubscribe(t)}}},75226:(e,t,s)=>{s.d(t,{O:()=>r});const r={geodesic:0,loxodrome:1,"great-elliptic":2,"normal-section":3,"shape-preserving":4}},82857:(e,t,s)=>{function*r(e){switch(e.type){case"object-id":case"unique-id-simple":return void(yield e.fieldName);case"unique-id-composite":return void(yield*e.fieldNames)}}s.d(t,{Y:()=>r})},92667:(e,t,s)=>{s.d(t,{Hh:()=>o,fz:()=>l,g7:()=>c,s1:()=>n,zo:()=>u});var r=s(68707),i=s(7724);let a;function n(){return!!a&&(0,i.i)()}async function o(){if(!n()){const[e,t]=await Promise.all([s.e(5090).then(s.bind(s,25090)),s.e(5606).then(s.bind(s,75606)).then(e=>{let{injectPe:t}=e;return t}),(0,i.l)()]);a=new e.OperatorGeodeticDensifyByLength,t(i.p)}}function c(e,t,s,r){return a.execute(e,t,s,r,null)}function u(e,t,s,i){const n=a.executeMany(new r.S(e),t,s,i,null);return Array.from(n)}function l(){return a.supportsCurves()}}}]);
//# sourceMappingURL=4794.d3f55872.chunk.js.map