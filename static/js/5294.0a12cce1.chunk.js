"use strict";(self.webpackChunkn2_trees=self.webpackChunkn2_trees||[]).push([[5294],{5294:(e,r,t)=>{t.r(r),t.d(r,{default:()=>P});var s,i=t(76797),n=t(19247),o=t(62801),l=t(66486),a=t(93982),f=t(52494),c=t(81633),p=t(59844),m=t(86866),u=t(99846),h=t(26855),y=t(6326),x=(t(76460),t(81806),t(47249),t(50076),t(6409)),d=t(87990),g=t(75116);let C=s=class extends g.A{constructor(){super(...arguments),this.type="identity"}clone(){return new s}};(0,y.Cg)([(0,x.e)({IdentityXform:"identity"})],C.prototype,"type",void 0),C=s=(0,y.Cg)([(0,d.$)("esri.layers.support.rasterTransforms.IdentityTransform")],C);var v=t(29754);const S={GCSShiftXform:h.A,IdentityXform:C,PolynomialXform:v.A};function w(e){const r=e?.type;if(!r)return null;const t=S[e?.type];if(t){const r=new t;return r.read(e),r}return null}var O=t(20118),A=t(46533);function k(e){if(!e)return{result:null,transferList:[]};const{pixelBlock:r,transferList:t}=e.getTransferableObject();return{result:r,transferList:t}}class P{convertVectorFieldData(e){const r=l.A.fromJSON(e.pixelBlock),t=k((0,u.FI)(r,e.type));return Promise.resolve(t)}convertPixelBlockToFeatures(e){const r=(0,f.L)({pixelBlock:l.A.fromJSON(e.pixelBlock),extent:i.A.fromJSON(e.extent),fieldNames:e.fieldNames,skipFactor:e.skipFactor,skipSpatialReference:!0,pixelIdOffset:e.pixelIdOffset,imageRowSize:e.imageRowSize});return Promise.resolve(r)}computeStatisticsHistograms(e){const r=l.A.fromJSON(e.pixelBlock),t=(0,m.eH)(r,{histogramSize:e.histogramSize,includeSkewnessKurtosis:e.includeSkewnessKurtosis});return Promise.resolve(t)}async decode(e){return k(await(0,a.D)(e.data,e.options))}symbolize(e){e.pixelBlock=l.A.fromJSON(e.pixelBlock),e.extent=e.extent?i.A.fromJSON(e.extent):null;const r=k(this.symbolizer.symbolize(e));return Promise.resolve(r)}highlightPixels(e){const r=l.A.fromJSON(e.pixelBlock),t=l.A.fromJSON(e.renderedPixelBlock);return(0,f._F)(r,t,e.highlightOptions),Promise.resolve(t.toJSON())}async updateSymbolizer(e){this.symbolizer=O.A.fromJSON(e.symbolizerJSON),e.histograms&&"rasterStretch"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=e.histograms)}async updateRasterFunction(e){this.rasterFunction=(0,c.vt)(e.rasterFunctionJSON)}async process(e){return k(this.rasterFunction.process({extent:i.A.fromJSON(e.extent),primaryPixelBlocks:e.primaryPixelBlocks.map(e=>null!=e?l.A.fromJSON(e):null),primaryPixelSizes:e.primaryPixelSizes?.map(e=>null!=e?n.A.fromJSON(e):null),primaryRasterIds:e.primaryRasterIds}))}stretch(e){const r=k(this.symbolizer.simpleStretch(l.A.fromJSON(e.srcPixelBlock),e.stretchParams));return Promise.resolve(r)}estimateStatisticsHistograms(e){const r=(0,m.f4)(l.A.fromJSON(e.srcPixelBlock));return Promise.resolve(r)}split(e){const r=(0,f.lD)(l.A.fromJSON(e.srcPixelBlock),e.tileSize,e.maximumPyramidLevel??0,!1===e.useBilinear),t=[];let s;return r&&(s=new Map,r.forEach((e,r)=>{if(e){const{pixelBlock:i,transferList:n}=e.getTransferableObject();s.set(r,i),n.forEach(e=>{t.includes(e)||t.push(e)})}})),Promise.resolve({result:s,transferList:t})}clipTile(e){const r=l.A.fromJSON(e.pixelBlock),t=k((0,f.J$)({...e,pixelBlock:r}));return Promise.resolve(t)}async mosaicAndTransform(e){const r=e.srcPixelBlocks.map(e=>e?new l.A(e):null),t=(0,f.z7)(r,e.srcMosaicSize,{blockWidths:e.blockWidths,alignmentInfo:e.alignmentInfo,clipOffset:e.clipOffset,clipSize:e.clipSize});let s,i=t;e.coefs&&(i=(0,f.$i)(t,e.destDimension,e.coefs,e.sampleSpacing,e.interpolation)),e.projectDirections&&e.gcsGrid&&(s=(0,f.QF)(e.destDimension,e.gcsGrid),i=(0,u.Y2)(i,e.isUV?"vector-uv":"vector-magdir",s));const{result:n,transferList:o}=k(i);return{result:{pixelBlock:n,localNorthDirections:s},transferList:o}}async createFlowMesh(e,r){const t={data:new Float32Array(e.flowData.buffer),mask:new Uint8Array(e.flowData.maskBuffer),width:e.flowData.width,height:e.flowData.height},{vertexData:s,indexData:i}=await(0,A.CW)(e.meshType,e.simulationSettings,t,r.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:i.buffer},transferList:[s.buffer,i.buffer]}}async getProjectionOffsetGrid(e){const r=i.A.fromJSON(e.projectedExtent),t=i.A.fromJSON(e.srcBufferExtent);let s=null;e.datumTransformationSteps?.length&&(s=new o.A({steps:e.datumTransformationSteps})),await(0,p.Hh)();const n=e.rasterTransform?w(e.rasterTransform):null;return(0,p.l0)({...e,projectedExtent:r,srcBufferExtent:t,datumTransformation:s,rasterTransform:n})}}},26855:(e,r,t)=>{t.d(r,{A:()=>f});var s,i=t(6326),n=t(46053),o=(t(81806),t(76460),t(47249),t(6409)),l=t(87990),a=t(75116);let f=s=class extends a.A{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(e){return"point"===(e=e.clone()).type?(e.x>180+this.tolerance&&(e.x-=360),e):(e.xmin>=180-this.tolerance?(e.xmax-=360,e.xmin-=360):e.xmax>180+this.tolerance&&(e.xmin=-180,e.xmax=180),e)}inverseTransform(e){return"point"===(e=e.clone()).type?(e.x<-this.tolerance&&(e.x+=360),e):(e.xmin<-this.tolerance&&(e.xmin+=360,e.xmax+=360),e)}clone(){return new s({tolerance:this.tolerance})}};(0,i.Cg)([(0,o.e)({GCSShiftXform:"gcs-shift"})],f.prototype,"type",void 0),(0,i.Cg)([(0,n.MZ)()],f.prototype,"tolerance",void 0),f=s=(0,i.Cg)([(0,l.$)("esri.layers.support.rasterTransforms.GCSShiftTransform")],f)},29754:(e,r,t)=>{t.d(r,{A:()=>y});var s,i=t(6326),n=t(46053),o=(t(81806),t(76460),t(47249),t(6409)),l=t(28379),a=t(87990),f=t(17707),c=t(76797),p=t(19247),m=t(75116);function u(e,r,t){const{x:s,y:i}=r;if(t<2)return{x:e[0]+s*e[2]+i*e[4],y:e[1]+s*e[3]+i*e[5]};if(2===t){const r=s*s,t=i*i,n=s*i;return{x:e[0]+s*e[2]+i*e[4]+r*e[6]+n*e[8]+t*e[10],y:e[1]+s*e[3]+i*e[5]+r*e[7]+n*e[9]+t*e[11]}}const n=s*s,o=i*i,l=s*i,a=n*s,f=n*i,c=s*o,p=i*o;return{x:e[0]+s*e[2]+i*e[4]+n*e[6]+l*e[8]+o*e[10]+a*e[12]+f*e[14]+c*e[16]+p*e[18],y:e[1]+s*e[3]+i*e[5]+n*e[7]+l*e[9]+o*e[11]+a*e[13]+f*e[15]+c*e[17]+p*e[19]}}function h(e,r,t){const{xmin:s,ymin:i,xmax:n,ymax:o,spatialReference:l}=r;let a=[];if(t<2)a.push({x:s,y:o}),a.push({x:n,y:o}),a.push({x:s,y:i}),a.push({x:n,y:i});else{let e=10;for(let r=0;r<e;r++)a.push({x:s,y:i+(o-i)*r/(e-1)}),a.push({x:n,y:i+(o-i)*r/(e-1)});e=8;for(let r=1;r<=e;r++)a.push({x:s+(n-s)*r/e,y:i}),a.push({x:s+(n-s)*r/e,y:o})}a=a.map(r=>u(e,r,t));const f=a.map(e=>e.x),p=a.map(e=>e.y);return new c.A({xmin:Math.min.apply(null,f),xmax:Math.max.apply(null,f),ymin:Math.min.apply(null,p),ymax:Math.max.apply(null,p),spatialReference:l})}let y=s=class extends m.A{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,r){const{coeffX:t,coeffY:s}=r;if(!t?.length||!s?.length||t.length!==s.length)return null;const i=[];for(let n=0;n<t.length;n++)i.push(t[n]),i.push(s[n]);return i}writeForwardCoefficients(e,r,t){const s=[],i=[];for(let n=0;n<e?.length;n++)n%2==0?s.push(e[n]):i.push(e[n]);r.coeffX=s,r.coeffY=i}get inverseCoefficients(){let e=this._get("inverseCoefficients");const r=this._get("forwardCoefficients");return!e&&r&&this.polynomialOrder<2&&(e=function(e){const[r,t,s,i,n,o]=e,l=s*o-n*i,a=n*i-s*o;return[(n*t-r*o)/l,(s*t-r*i)/a,o/l,i/a,-n/l,-s/a]}(r)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,r){const{inverseCoeffX:t,inverseCoeffY:s}=r;if(!t?.length||!s?.length||t.length!==s.length)return null;const i=[];for(let n=0;n<t.length;n++)i.push(t[n]),i.push(s[n]);return i}writeInverseCoefficients(e,r,t){const s=[],i=[];for(let n=0;n<e?.length;n++)n%2==0?s.push(e[n]):i.push(e[n]);r.inverseCoeffX=s,r.inverseCoeffY=i}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(e){if("point"===e.type){const r=u(this.forwardCoefficients,e,this.polynomialOrder);return new p.A({x:r.x,y:r.y,spatialReference:e.spatialReference})}return h(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const r=u(this.inverseCoefficients,e,this.polynomialOrder);return new p.A({x:r.x,y:r.y,spatialReference:e.spatialReference})}return h(this.inverseCoefficients,e,this.polynomialOrder)}clone(){return new s({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};(0,i.Cg)([(0,n.MZ)({json:{write:!0}})],y.prototype,"polynomialOrder",void 0),(0,i.Cg)([(0,n.MZ)()],y.prototype,"forwardCoefficients",void 0),(0,i.Cg)([(0,l.w)("forwardCoefficients",["coeffX","coeffY"])],y.prototype,"readForwardCoefficients",null),(0,i.Cg)([(0,f.K)("forwardCoefficients")],y.prototype,"writeForwardCoefficients",null),(0,i.Cg)([(0,n.MZ)({json:{write:!0}})],y.prototype,"inverseCoefficients",null),(0,i.Cg)([(0,l.w)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],y.prototype,"readInverseCoefficients",null),(0,i.Cg)([(0,f.K)("inverseCoefficients")],y.prototype,"writeInverseCoefficients",null),(0,i.Cg)([(0,n.MZ)()],y.prototype,"affectsPixelSize",null),(0,i.Cg)([(0,o.e)({PolynomialXform:"polynomial"})],y.prototype,"type",void 0),y=s=(0,i.Cg)([(0,a.$)("esri.layers.support.rasterTransforms.PolynomialTransform")],y)},75116:(e,r,t)=>{t.d(r,{A:()=>l});var s=t(6326),i=t(42553),n=t(46053),o=(t(81806),t(76460),t(47249),t(87990));let l=class extends i.o{get affectsPixelSize(){return!1}forwardTransform(e){return e}inverseTransform(e){return e}};(0,s.Cg)([(0,n.MZ)()],l.prototype,"affectsPixelSize",null),(0,s.Cg)([(0,n.MZ)({json:{write:!0}})],l.prototype,"spatialReference",void 0),l=(0,s.Cg)([(0,o.$)("esri.layers.support.rasterTransforms.BaseRasterTransform")],l)}}]);
//# sourceMappingURL=5294.0a12cce1.chunk.js.map