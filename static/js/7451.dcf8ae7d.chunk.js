"use strict";(self.webpackChunkn2_trees=self.webpackChunkn2_trees||[]).push([[7451],{67451:(e,t,n)=>{n.r(t),n.d(t,{execute:()=>v,isLoaded:()=>m,load:()=>h,supportsCurves:()=>d});var r=n(31633),i=n(7724);let o;function s(){return!!o&&(0,i.i)()}async function c(){if(!s()){const[e,t]=await Promise.all([Promise.all([n.e(3033),n.e(7694)]).then(n.bind(n,37694)),n.e(5606).then(n.bind(n,75606)).then(e=>{let{injectPe:t}=e;return t}),(0,i.l)()]);o=new e.OperatorGeodeticDistance,t(i.p)}}function l(e,t,n,r){return o.execute(e,t,n,r,null)}var a=n(75226);let u,p,f,d;function m(){return!!u&&s()}async function h(){if(!m()){const[e]=await Promise.all([Promise.resolve().then(n.bind(n,58067)),c()]);u=e.fromGeometry,p=e.fromSpatialReference,f=e.getSpatialReference,d=o.supportsCurves()}}function v(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const{curveType:i="geodesic",unit:o}=n,s=f(e);let c=l(u(e),u(t),p(s),a.O[i]);return c&&o&&(c=(0,r.oU)(c,"meters",o)),c}},75226:(e,t,n)=>{n.d(t,{O:()=>r});const r={geodesic:0,loxodrome:1,"great-elliptic":2,"normal-section":3,"shape-preserving":4}}}]);
//# sourceMappingURL=7451.dcf8ae7d.chunk.js.map