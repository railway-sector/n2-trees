"use strict";(self.webpackChunkn2_trees=self.webpackChunkn2_trees||[]).push([[6745],{46745:(e,t,n)=>{n.r(t),n.d(t,{TextureCompressionWorkerOutput:()=>h,compress:()=>f,compressRGBADataToKTX2:()=>m,createTextureDataKTX2:()=>y,destroy:()=>d,initializeBasisEncoder:()=>p,initializeDXTEncoder:()=>w});var r=n(28899);let a,l;var s=n(93345);let i,u,o=null,c=null;class h{constructor(e,t){this.internalFormat=e,this.compressedTexture=t}}function d(){o=null,i=null,c=null,u=null,a=null,l=null}async function f(e){let t;t=e.data instanceof ImageBitmap?function(e){const t=new OffscreenCanvas(e.width,e.height),n=t.getContext("2d");return n.drawImage(e,0,0),n.getImageData(0,0,t.width,t.height).data}(e.data):function(e,t,n,r,a){const l=new Uint8ClampedArray(e).subarray(0,t*n*r);if(!a)return l;const s=new Uint8ClampedArray(l.length),i=t*r;for(let u=0;u<n;u++){const e=u*i,t=(n-u-1)*i;s.set(l.subarray(e,e+i),t)}return s}(e.data,e.width,e.height,e.components,e.needsFlip);try{if(e.hasS3TC){c||await w();const n=new Uint8Array(t.length);if(c?.encode(t,e.width,e.height,e.preMultiplyAlpha,n)){const e=function(e,t){const n=new Int32Array(e.buffer,e.byteOffset,C);let r,a;switch(n[S]){case X:r=8,a=s.CQ.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case B:r=16,a=s.CQ.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case F:r=16,a=s.CQ.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;default:return null}let l=1,i=n[E],u=n[A];(3&i||3&u)&&(i=i+3&-4,u=u+3&-4);const o=i,c=u;let h,d;n[g]&_&&!1!==t&&(l=Math.max(1,n[b]));let f=e.byteOffset+n[T]+4;const p=[];for(let s=0;s<l;++s)d=(i+3>>2)*(u+3>>2)*r,h=new Uint8Array(e.buffer,f,d),p.push(h),f+=d,i=Math.max(1,i>>1),u=Math.max(1,u>>1);return{textureData:{type:"compressed",levels:p},internalFormat:a,width:o,height:c}}(n,!0),t=[n.buffer];return{result:new h(e?.internalFormat??null,e?.textureData??null),transferList:t}}return{result:new h(null,null)}}if(e.hasETC){if(o||await p(),e.preMultiplyAlpha&&!c&&await w(),e.preMultiplyAlpha){const n=new Uint8ClampedArray(t.length);c?.premultiply(new Uint8Array(t),e.width,e.height,n),t=n}const n=m(t,e.width,e.height,e.hasMipmap),r=n?y(n):null,a=r?.compressedTexture?.levels.map(e=>e.buffer)||[];return{result:new h(r?.internalFormat??null,r?.compressedTexture??null),transferList:a}}return{result:new h(null,null)}}finally{t instanceof ImageBitmap&&t.close()}}async function p(){o||(o=await(i??=(a??=(async()=>{const e=await n.e(6378).then(n.bind(n,56378)),t=await e.default({locateFile:e=>(0,r.s)(`esri/libs/basisu/${e}`)});return t.initializeBasis(),t})(),a)),i=null)}async function w(){c||(c=await(u??=(l??=(async()=>{const e=await n.e(3996).then(n.bind(n,53996));return await e.default({locateFile:e=>(0,r.s)(`esri/libs/dxtEncoder/${e}`)})})(),l)),u=null)}function m(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:255,l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];if(!o)return null;const u=new o.BasisEncoder;u.setPerceptual(!i),u.setCheckForAlpha(!0),u.setForceAlpha(!1),u.setRenormalize(i),u.setMipGen(r),u.setMipSRGB(!i),u.setCreateKTX2File(!0),u.setKTX2SRGBTransferFunc(!i),u.setQualityLevel(a),u.setCompressionLevel(l);const c=new Uint8Array(e.byteLength);u.setSliceSourceImage(0,new Uint8Array(e),t,n,s);const h=u.encode(c),d=new Uint8Array(c.buffer,0,h),f=new o.KTX2File(new Uint8Array(d));return f.isValid()?(u.delete(),d):(f.close(),f.delete(),u.delete(),null)}function y(e){if(!o)return new h(null,null);const t=new o.KTX2File(new Uint8Array(e));t.startTranscoding();const[n,r]=t.getHasAlpha()?[1,s.CQ.COMPRESSED_RGBA8_ETC2_EAC]:[0,s.CQ.COMPRESSED_RGB8_ETC2],a=t.getLevels(),l=[];for(let s=0;s<a;s++)l.push(new Uint8Array(t.getImageTranscodedSizeInBytes(s,0,0,n))),t.transcodeImage(l[s],s,0,0,n,0,-1,-1);return t.close(),t.delete(),{internalFormat:r,compressedTexture:{type:"compressed",levels:l}}}const C=31,T=1,g=2,A=3,E=4,b=7,S=21,_=131072;function D(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}const X=D("DXT1"),B=D("DXT3"),F=D("DXT5")}}]);
//# sourceMappingURL=6745.c359318b.chunk.js.map