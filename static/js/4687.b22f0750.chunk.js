"use strict";(self.webpackChunkn2_trees=self.webpackChunkn2_trees||[]).push([[4687,7995],{2914:(e,t,r)=>{r.d(t,{i:()=>s});var i=r(19902),n=r(80963);function s(e,t,r){const{geometry:s}=e,o=e.compactGeometryEnabled??!1,a=e.toJSON();delete a.compactGeometryEnabled,delete a.defaultSpatialReferenceEnabled;const l=a;let u,p,c;if(s&&(p=s.spatialReference,c=(0,n.YX)(p),l.geometryType=(0,i.$B)(s),l.geometry=function(e,t){if(t&&"extent"===e.type)return`${e.xmin},${e.ymin},${e.xmax},${e.ymax}`;if(t&&"point"===e.type)return`${e.x},${e.y}`;const r=e.toJSON();return delete r.spatialReference,JSON.stringify(r)}(s,o),l.inSR=c),a.groupByFieldsForStatistics&&(l.groupByFieldsForStatistics=a.groupByFieldsForStatistics.join(",")),a.objectIds)switch(r?.uniqueIdFields?.length){case void 0:l.objectIds=a.objectIds.join(",");break;case 1:l.uniqueIds=JSON.stringify(a.objectIds),delete l.objectIds;break;default:l.uniqueIds=JSON.stringify(a.objectIds.map(e=>JSON.parse(e))),delete l.objectIds}if(a.orderByFields&&(l.orderByFields=a.orderByFields.join(",")),!a.outFields||!a.returnDistinctValues&&(t?.returnCountOnly||t?.returnExtentOnly||t?.returnIdsOnly)?delete l.outFields:a.outFields.includes("*")?l.outFields="*":l.outFields=a.outFields.join(","),a.outSR?(l.outSR=(0,n.YX)(a.outSR),u=e.outSpatialReference):s&&(a.returnGeometry||a.returnCentroid)&&(l.outSR=l.inSR,u=p),a.returnGeometry&&delete a.returnGeometry,a.outStatistics&&(l.outStatistics=JSON.stringify(a.outStatistics)),a.fullText&&(l.fullText=JSON.stringify(a.fullText)),a.pixelSize&&(l.pixelSize=JSON.stringify(a.pixelSize)),a.quantizationParameters&&(e.defaultSpatialReferenceEnabled&&null!=p&&null!=e.quantizationParameters?.extent&&p.equals(e.quantizationParameters.extent.spatialReference)&&delete a.quantizationParameters.extent.spatialReference,l.quantizationParameters=JSON.stringify(a.quantizationParameters)),a.parameterValues&&(l.parameterValues=JSON.stringify(a.parameterValues)),a.rangeValues&&(l.rangeValues=JSON.stringify(a.rangeValues)),a.dynamicDataSource&&(l.layer=JSON.stringify({source:a.dynamicDataSource}),delete a.dynamicDataSource),a.timeExtent){const e=a.timeExtent,{start:t,end:r}=e;null==t&&null==r||(l.time=t===r?t:`${t??"null"},${r??"null"}`),delete a.timeExtent}return e.defaultSpatialReferenceEnabled&&null!=p&&null!=u&&p.equals(u)&&(l.defaultSR=l.inSR,delete l.inSR,delete l.outSR),l}},8350:(e,t,r)=>{r.d(t,{H:()=>m});var i=r(6326),n=r(46053),s=(r(81806),r(76460),r(47249),r(87990)),o=r(69098),a=r(42553),l=r(40565),u=r(6409),p=r(88205);let c=class extends((0,o.OU)(a.o)){constructor(e){super(e),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};(0,i.Cg)([(0,n.MZ)({type:String,json:{write:{isRequired:!0}}})],c.prototype,"name",void 0),(0,i.Cg)([(0,n.MZ)({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),(0,u.e)({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],c.prototype,"method",void 0),(0,i.Cg)([(0,n.MZ)({type:String,json:{write:{isRequired:!0}}})],c.prototype,"value",void 0),(0,i.Cg)([(0,n.MZ)({type:[l.jz],json:{write:{isRequired:!0}}})],c.prototype,"bandIds",void 0),(0,i.Cg)([(0,n.MZ)({types:p.uy,json:{write:!0,origins:{"web-scene":{types:p.Gj,write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],c.prototype,"renderer",void 0),c=(0,i.Cg)([(0,s.$)("esri.renderers.support.RasterPresetRenderer")],c);const m=e=>{const t=e;let r=class extends t{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return(0,i.Cg)([(0,n.MZ)({type:String,json:{name:"layerDefinition.activePresetRendererName",write:{allowNull:!0}}})],r.prototype,"activePresetRendererName",void 0),(0,i.Cg)([(0,n.MZ)({type:[c],json:{name:"layerDefinition.presetRenderers",write:!0}})],r.prototype,"presetRenderers",void 0),r=(0,i.Cg)([(0,s.$)("esri.layers.mixins.RasterPresetRendererMixin")],r),r}},12482:(e,t,r)=>{r.d(t,{$7:()=>M,B:()=>x,Fo:()=>C,M7:()=>D,Q5:()=>S,Tq:()=>T,Up:()=>I,XF:()=>A,Ze:()=>v,bK:()=>l,bh:()=>m,id:()=>w,ky:()=>c,qt:()=>N,tW:()=>F,v9:()=>d,w7:()=>u,wF:()=>a,wS:()=>R,x:()=>y,xS:()=>b,ze:()=>p});var i=r(56002),n=r(31633),s=r(81478);function o(e){return e?N:T}function a(e,t){return t?.mode?t.mode:o(e).mode}function l(e,t){return null!=t?t:o(e)}function u(e,t){return a(null==e||(e.hasZ??!1),t)}function p(e,t){return l(null==e||(e.hasZ??!1),t)}function c(e){const t=h(e);return u(e.geometry,t)}function m(e){const t=h(e),r=u(e.geometry,t),i=null!=t&&"on-the-ground"!==r?D(t):0,n=t?.featureExpressionInfo;return{mode:r,offset:i,featureExpressionInfo:n}}function d(e){return g(e)||y(e)}function y(e){return"0"===e?.featureExpressionInfo?.expression}function g(e){if(!e)return!1;if("on-the-ground"===e.mode)return!1;const t=e?.featureExpressionInfo?e.featureExpressionInfo.expression:null;return!(!t||"0"===t)}function h(e){return e.layer&&"elevationInfo"in e.layer?e.layer.elevationInfo:null}const f=(0,i.B)((e,t,r)=>{if(!e)return 0;if("decimal-degrees"===t)return 0;const i="unknown"!==t&&t?t:"meters",s=(0,n.mq)(r);return s?(0,n.oU)(e,i,s):0});function v(e,t){return f(e?.offset,e?.unit,t)}function w(e,t,r){if(!r?.mode)return;const i=e.hasZ?e.z:0,n=v(r,e.spatialReference);switch(r.mode){case"absolute-height":return i-n;case"on-the-ground":return 0;case"relative-to-ground":return i-((t.elevationProvider.getElevation(e.x,e.y,i,e.spatialReference,"ground")??0)+n);case"relative-to-scene":return i-((t.elevationProvider.getElevation(e.x,e.y,i,e.spatialReference,"scene")??0)+n)}}function R(e,t,r){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;return C(e,t.x,t.y,t.hasZ?t.z:0,t.spatialReference,r,i)}function b(e,t,r,i){let n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;return C(e,t[0],t[1],t.length>2?t[2]:0,r,i,n)}function C(e,t,r,i,n,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;if(null==s)return;const a=null!=o?o.mode:"absolute-height";if("on-the-ground"===a)return 0;const{absoluteZ:l}=S(t,r,i,n,e,s);return function(e,t,r,i,n,s,o,a){const l=v(o,n);switch(a){case"absolute-height":return e-l;case"relative-to-ground":return e-((s.elevationProvider.getElevation(t,r,i,n,"ground")??0)+l);case"relative-to-scene":return e-((s.elevationProvider.getElevation(t,r,i,n,"scene")??0)+l)}}(l,t,r,i,n,e,o,a)}function S(e,t,r,i,n,s){const o=v(s,i);switch(s.mode){case"absolute-height":return{absoluteZ:r+o,elevation:0};case"on-the-ground":{const r=n.elevationProvider.getElevation(e,t,0,i,"ground")??0;return{absoluteZ:r,elevation:r}}case"relative-to-ground":{const s=n.elevationProvider.getElevation(e,t,r,i,"ground")??0;return{absoluteZ:r+s+o,elevation:s}}case"relative-to-scene":{const s=n.elevationProvider.getElevation(e,t,r,i,"scene")??0;return{absoluteZ:r+s+o,elevation:s}}}}function I(e,t){if(null==t)return!1;const{mode:r}=t;return null!=r&&("scene"===e&&"relative-to-scene"===r||"ground"===e&&"absolute-height"!==r)}function x(e,t,r){return r&&r.mode!==t?`${e} only support ${t} elevation mode`:null}function M(e,t,r){return r?.mode===t?`${e} do not support ${t} elevation mode`:null}function F(e,t){return null!=t?.featureExpressionInfo&&"0"!==t.featureExpressionInfo.expression?`${e} do not support featureExpressionInfo`:null}function A(e,t){t&&e.warn(".elevationInfo=",t)}function D(e){return(e?.offset??0)*(0,s.Ao)(e?.unit)}const N={mode:"absolute-height",offset:0},T={mode:"on-the-ground",offset:null}},14009:(e,t,r)=>{r.d(t,{e:()=>l,s:()=>a});var i=r(54994),n=r(36643),s=r(77725),o=r(97015);async function a(e,t,r,i){const n=await l(e,t,r,i);return s.A.fromJSON(n)}async function l(e,t,r,s){const a=(0,i.Dl)(e),l={...r},u=o.A.from(t),{data:p}=await(0,n.eW)(a,u,u.sourceSpatialReference,l,s);return p}},16852:(e,t,r)=>{r.d(t,{C:()=>o,m:()=>s});var i=r(50076),n=r(50346);async function s(e,t,r){let s;try{s=await createImageBitmap(e)}catch(o){throw new i.A("request:server",`Unable to load ${t}`,{url:t,error:o})}return(0,n.Te)(r),s}async function o(e,t,r,s,o){let a;try{a=await createImageBitmap(e)}catch(l){throw new i.A("request:server",`Unable to load tile ${t}/${r}/${s}`,{error:l,level:t,row:r,col:s})}return(0,n.Te)(o),a}},20176:(e,t,r)=>{r.d(t,{N3:()=>a,Om:()=>o});var i=r(97255),n=r(90321),s=r(1484);class o{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=arguments.length>2?arguments[2]:void 0,i=arguments.length>3?arguments[3]:void 0,n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;this.geometry=e,this.attributes=t,this.centroid=r,this.objectId=i,this.displayId=n}static fromJSON(e){const t=e.geometry?s.A.fromJSON(e.geometry):null,r=e.centroid?s.A.fromJSON(e.centroid):null,i=e.objectId;return new o(t,e.attributes,r,i)}weakClone(){const e=new o(this.geometry,this.attributes,this.centroid,this.objectId);return e.displayId=this.displayId,e}clone(){const e=this.geometry?.clone(),t=new o(e,{...this.attributes},this.centroid?.clone(),this.objectId);return t.displayId=this.displayId,t}ensureCentroid(e){return this.centroid??=(0,n.Q)(new s.A,this.geometry,e.hasZ,e.hasM),this.centroid}get usedMemory(){return 128+(0,i.lM)(this.attributes)+(this.geometry?.usedMemory??0)}}function a(e){return!!e.geometry?.coords?.length}},25213:(e,t,r)=>{r.d(t,{E9:()=>y,Tw:()=>m,X6:()=>d});var i=r(3825),n=r(76797),s=r(19247),o=r(13312),a=r(23032),l=r(49653),u=r(54994),p=r(77725);async function c(e,t,r){const c=(0,u.Dl)(e),{rasterFunction:m,sourceJSON:d}=t||{},y=m?JSON.stringify(m.rasterFunctionDefinition||m):null,g=(0,u.lF)({...c.query,renderingRule:y,f:"json"}),h=(0,u.jV)(g,r);e=c.path;const f=d||await(0,i.A)(e,h).then(e=>e.data),v=f.hasRasterAttributeTable?(0,i.A)(`${e}/rasterAttributeTable`,h):null,w=f.hasColormap?(0,i.A)(`${e}/colormap`,h):null,R=f.hasHistograms?(0,i.A)(`${e}/histograms`,h):null,b=f.currentVersion>=10.3?(0,i.A)(`${e}/keyProperties`,h):null,C=f.hasMultidimensions?(0,i.A)(`${e}/multidimensionalInfo`,h):null,S=await Promise.allSettled([v,w,R,b,C]);let I=null;if(f.minValues&&f.minValues.length===f.bandCount){I=[];for(let e=0;e<f.minValues.length;e++)I.push({min:f.minValues[e],max:f.maxValues[e],avg:f.meanValues[e],stddev:f.stdvValues[e]})}const x=n.A.fromJSON(f.extent),M=Math.ceil(x.width/f.pixelSizeX-.1),F=Math.ceil(x.height/f.pixelSizeY-.1),A=o.A.fromJSON(f.spatialReference||f.extent.spatialReference),D="fulfilled"===S[0].status?S[0].value?.data:null,N=D?.features?.length?p.A.fromJSON(D):null,T="fulfilled"===S[1].status?S[1].value?.data.colormap:null,P=T?.length?T:null,O="fulfilled"===S[2].status?S[2].value?.data.histograms:null,j=O?.[0]?.counts?.length?O:null,Z="fulfilled"===S[3].status?S[3].value?.data??{}:{},_="fulfilled"===S[4].status?S[4].value?.data.multidimensionalInfo:null,V=_?.variables?.length?_:null;V&&V.variables.forEach(e=>{e.statistics?.length&&e.statistics.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),e.dimensions?.forEach(e=>{"StdTime"!==e.name||e.recurring||e.unit||(e.unit="ISO8601")})});const{defaultVariable:E,serviceDataType:q}=f;E&&E!==Z.DefaultVariable&&(Z.DefaultVariable=E),q?.includes("esriImageServiceDataTypeVector")&&!q.includes(Z.DataType)&&(Z.DataType=q.replace("esriImageServiceDataType",""));let J=f.noDataValue;f.noDataValues?.length&&f.noDataValues.some(e=>e!==J)&&(J=f.noDataValues);const G=f.transposeInfo?new l.A({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:"lerc",origin:new s.A({x:f.extent.xmin,y:f.extent.ymax,spatialReference:A}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max(M,F))/Math.LN2-8)),transposeInfo:f.transposeInfo}):void 0;return new a.A({width:M,height:F,bandCount:f.bandCount,extent:n.A.fromJSON(f.extent),spatialReference:A,pixelSize:new s.A({x:f.pixelSizeX,y:f.pixelSizeY,spatialReference:A}),pixelType:f.pixelType.toLowerCase(),statistics:I,attributeTable:N,colormap:P,histograms:j,keyProperties:Z,noDataValue:J,multidimensionalInfo:V,storageInfo:G})}function m(e,t,r){return c(e,{sourceJSON:t},r)}function d(e,t,r){return c(e,{rasterFunction:t},r)}function y(e,t){e.attributeTable||(t.hasRasterAttributeTable=!1),e.histograms||(t.hasHistograms=!1),e.colormap||(t.hasColormap=!1),e.multidimensionalInfo||(t.hasMultidimensions=!1)}},36643:(e,t,r)=>{r.d(t,{IJ:()=>m,Jf:()=>h,Pk:()=>y,eW:()=>c,gW:()=>g,kS:()=>d});var i=r(3825),n=r(90534),s=r(1438),o=r(78238),a=r(89122),l=r(2914),u=r(57831);const p="Layer does not support extent calculation.";async function c(e,t,r,i,n){const s=t.timeExtent?.isEmpty?{data:{features:[]}}:await v(e,t,"json",i,void 0,n);return(0,u.q)(t,r,s.data),s}async function m(e,t,r,i,n){if(t.timeExtent?.isEmpty)return{data:r.createFeatureResult()};const s=await d(e,t,i,n),o=s;return o.data=(0,a.m)(s.data,r),o}function d(e,t,r,i){return v(e,t,"pbf",r,void 0,i)}function y(e,t,r,i){return t.timeExtent?.isEmpty?Promise.resolve({data:{objectIds:[]}}):v(e,t,"json",r,{returnIdsOnly:!0},i)}function g(e,t,r,i){return t.timeExtent?.isEmpty?Promise.resolve({data:{count:0}}):v(e,t,"json",r,{returnIdsOnly:!0,returnCountOnly:!0},i)}async function h(e,t,r){if(t.timeExtent?.isEmpty)return{data:{count:0,extent:null}};const i=await v(e,t,"json",r,{returnExtentOnly:!0,returnCountOnly:!0}),n=i.data;if(n.hasOwnProperty("extent"))return i;if(n.features)throw new Error(p);if(n.hasOwnProperty("count"))throw new Error(p);return i}function f(e,t){if(!e.returnIdsOnly||!t.uniqueIdFields)return e;const r={...e,returnUniqueIdsOnly:!0};return delete r.returnIdsOnly,r}async function v(e,t,r){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},p=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{};const c="string"==typeof e?(0,n.An)(e):e,m=t.geometry?[t.geometry]:[],d=await(0,s.el)(m,null,{signal:a.signal}),y=d?.[0];null!=y&&((t=t.clone()).geometry=y);const g=(0,o.z)({...c.query,f:r,...f(u,p),...(h=t,v=u,w=p,(0,l.i)(h,v,w))});var h,v,w;return(0,i.A)((0,n.fj)(c.path,function(e,t){return null!=e.formatOf3DObjects&&!(t.returnCountOnly||t.returnExtentOnly||t.returnIdsOnly)}(t,u)?"query3d":"query"),{...a,responseType:"pbf"===r?"array-buffer":"json",query:{...g,...a.query}})}},37133:(e,t,r)=>{r.d(t,{V:()=>i,t:()=>n});const i=Symbol("isImageryGraphicOrigin");function n(e){return!!e&&i in e}},37713:(e,t,r)=>{r.d(t,{I:()=>o});var i=r(54994),n=r(36643),s=r(97015);async function o(e,t,r,o){const a=(0,i.Dl)(e),{data:l}=await(0,n.gW)(a,s.A.from(t),r,o);return l.count}},53104:(e,t,r)=>{r.d(t,{V:()=>o});var i=r(54994),n=r(36643),s=r(97015);async function o(e,t,r,o){const l=(0,i.Dl)(e),{data:u}=await(0,n.Pk)(l,s.A.from(t),r,o);return u.objectIds??a(u.uniqueIds)??[]}function a(e){if(e)return function(e){return!Array.isArray(e[0])}(e)?e:e.map(e=>JSON.stringify(e))}},53181:(e,t,r)=>{r.r(t),r.d(t,{default:()=>pr});var i,n=r(6326),s=r(16868),o=r(69098),a=r(50076),l=r(76460),u=r(77717),p=r(50346),c=r(46053),m=(r(81806),r(47249),r(87990)),d=r(17707),y=r(57274),g=r(9465),h=r(37133);class f extends g.A{get[(i=h.V,y.Q)](){return this.layer}constructor(e){super(),this[i]=!0,this.type="imagery",this.layer=e}get id(){return this.layer.id}}var v=r(25515),w=r(39356),R=r(3825),b=r(63241),C=r(53084),S=r(68134),I=r(90534),x=r(40565),M=r(28379),F=r(76797),A=r(65215),D=r(13312),N=r(80963),T=r(95363),P=r(15359),O=r(42553),j=r(44038),Z=r(52297);const _={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}};var V=r(93187),E=r(74916),q=r(73137);const J=new Set(["u1","u2","u4","u8","s8","u16","s16"]),G={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},z=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function $(e){return z.has(e.type)}function L(e,t){if(!e||!t)return(0,C.o8)(e||t);const r=(0,C.o8)(e);if(r.functionDefinition&&t.rasterFunctionDefinition){const e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=void 0),U(r.functionDefinition.arguments,t),r.rasterFunctionDefinition=r.functionDefinition.toJSON()}else"none"!==t.functionName?.toLowerCase()&&(Q(r.functionArguments).Raster=t);return r}function U(e,t){for(const r in e)"raster"===r.toLowerCase()&&("RasterFunctionVariable"===e[r].type?(e[r]=t.rasterFunctionDefinition,e[r].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===e[r].type&&U(e[r].arguments,t))}function B(e){const t=(0,C.o8)(_[e.functionName+"Function"]),r=e.functionArguments;for(const i in r)"raster"===i.toLowerCase()?(t.arguments[i]=B(r[i]),t.arguments[i].type="RasterFunctionTemplate"):"colormap"===i.toLowerCase()?(t.arguments[i].value=X(r[i]),t.arguments.ColorSchemeType.value=0):t.arguments[i].value=r[i];return t}function k(e,t){switch(t=t||{},e.type){case"raster-stretch":return function(e,t){const r=t.convertToRFT,i=new j.A;i.functionName="Stretch";const n=H[E.u.toJSON(e.stretchType)],s="u8",o=e.customStatistics?.map(e=>[e.min,e.max,e.avg??0,e.stddev??1]),a={StretchType:n,Statistics:o,DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(a.Min=e.outputMin),null!=e.outputMax&&(a.Max=e.outputMax),n===H.standardDeviation?(a.NumberOfStandardDeviations=e.numberOfStandardDeviations,i.outputPixelType=s):n===H.percentClip?(a.MinPercent=e.minPercent,a.MaxPercent=e.maxPercent,i.outputPixelType=s):n===H.minMax?i.outputPixelType=s:n===H.sigmoid&&(a.SigmoidStrengthLevel=e.sigmoidStrengthLevel),i.functionArguments=a,i.variableName="Raster",e.colorRamp){const n=e.colorRamp,s=new j.A;if(r)s.functionArguments={ColorRamp:(0,V.hf)(n)};else{const r=(0,V.hs)(n,!0);if(r)s.functionArguments={colorRampName:r};else if(!t.convertColorRampToColormap||"algorithmic"!==n.type&&"multipart"!==n.type){const t=e.colorRamp.toJSON();"algorithmic"===t.type?t.algorithm=t.algorithm||"esriCIELabAlgorithm":"multipart"===t.type&&t.colorRamps?.length&&t.colorRamps.forEach(e=>e.algorithm=e.algorithm||"esriCIELabAlgorithm"),s.functionArguments={colorRamp:t}}else s.functionArguments={Colormap:(0,V.R8)(n)}}return s.variableName="Raster",s.functionName="Colormap",s.functionArguments.Raster=i,r?new j.A({rasterFunctionDefinition:B(s)}):s}return r?new j.A({rasterFunctionDefinition:B(i)}):i}(e,t);case"class-breaks":return function(e,t){const r=[],i=[],n=[],s=[],o=1e-4,{pixelType:a,rasterAttributeTable:l}=t,u=null==l?null:l.features,p=W(l);if(p&&u&&Array.isArray(u)&&e.classBreakInfos){e.classBreakInfos.forEach((t,r)=>{const i=t.symbol?.color;let n;i?.a&&null!=t.minValue&&null!=t.maxValue&&u.forEach(o=>{null!=t.minValue&&null!=t.maxValue&&(n=o.attributes[e.field],(n>=t.minValue&&n<t.maxValue||r===e.classBreakInfos.length-1&&n>=t.minValue)&&s.push([o.attributes[p],i.r,i.g,i.b]))})});const r=a?K(s,a):s,i=new j.A;return i.functionName="Colormap",i.functionArguments={},i.functionArguments.Colormap=r,i.variableName="Raster",t.convertToRFT?new j.A({rasterFunctionDefinition:B(i)}):i}e.classBreakInfos.forEach((e,t)=>{if(null==e.minValue||null==e.maxValue)return;const a=e.symbol&&e.symbol.color;a?.a?(0===t?r.push(e.minValue,e.maxValue+o):r.push(e.minValue+o,e.maxValue+o),i.push(t),s.push([t,a.r,a.g,a.b])):n.push(e.minValue,e.maxValue)});const c=a?K(s,a):s,m=new j.A;m.functionName="Remap",m.functionArguments={InputRanges:r,OutputValues:i,NoDataRanges:n},m.variableName="Raster";const d=new j.A;return d.functionName="Colormap",d.functionArguments={Colormap:c,Raster:m},t.convertToRFT?new j.A({rasterFunctionDefinition:B(d)}):d}(e,t);case"unique-value":return function(e,t){const r=[],{pixelType:i,rasterAttributeTable:n}=t,s=null==n?null:n.features,o=W(n),a=e.defaultSymbol?.color?.toRgb(),l=e.uniqueValueInfos;if(l)if(s){if(o){const t=new Map;l.forEach(e=>{const r=e.value,i=Y(e);null!=r&&i?.a&&t.set(String(r),i.toRgb())});const i=e.field;i&&s.forEach(e=>{let{attributes:n}=e;const s=String(n[i]),l=n[o],u=t.get(s);u?r.push([l,...u]):a&&r.push([l,...a])})}}else for(let c=0;c<l.length;c++){const e=l[c],t=Y(e),i=+e.value;if(t?.a){if(isNaN(i))return null;r.push([i,t.r,t.g,t.b])}}const u=i?K(r,i):r,p=new j.A;return p.functionName="Colormap",p.functionArguments={},p.functionArguments.Colormap=u,p.variableName="Raster",t.convertToRFT?new j.A({rasterFunctionDefinition:B(p)}):p}(e,t);case"raster-colormap":return function(e,t){const r=e.extractColormap();if(!r||0===r.length)return null;const{pixelType:i}=t,n=i?K(r,i):r,s=new j.A;return s.functionName="Colormap",s.functionArguments={},s.functionArguments.Colormap=n,t.convertToRFT?new j.A({rasterFunctionDefinition:B(s)}):s}(e,t);case"vector-field":return function(e,t){const r=new j.A;r.functionName="VectorFieldRenderer";const{dataType:i,bandNames:n}=t,s="vector-uv"===i;let o,a;if(n&&2===n.length){const e=n.map(e=>e.toLowerCase());o=e.indexOf("magnitude"),a=e.indexOf("direction")}-1!==o&&null!==o||(o=0,a=1);const l="arithmetic"===e.rotationType?1:2,u="flow-from"===e.flowRepresentation?0:1,p=e.visualVariables?e.visualVariables.find(e=>"Magnitude"===e.field):new q.A,c={magnitudeBandID:o,directionBandID:a,isUVComponents:s,referenceSystem:l,massFlowAngleRepresentation:u,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:G[e.style.toLowerCase().replace("-","_")],minimumMagnitude:p.minDataValue,maximumMagnitude:p.maxDataValue,minimumSymbolSize:p.minSize,maximumSymbolSize:p.maxSize};r.functionArguments=c;const m=B(r);return t.convertToRFT?j.A.fromJSON({rasterFunctionDefinition:m}):r}(e,t);case"raster-shaded-relief":return function(e,t){const r=t.convertToRFT;if("elevation"!==t.dataType&&("generic"!==t.dataType||1!==t.bandCount||"s16"!==t.pixelType&&"s32"!==t.pixelType&&"f32"!==t.pixelType&&"f64"!==t.pixelType))return new j.A;const i=new j.A;i.functionName="Hillshade";const n="traditional"===e.hillshadeType?0:1,s="none"===e.scalingType?1:3,o={HillshadeType:n,SlopeType:s,ZFactor:e.zFactor};return 0===n&&(o.Azimuth=e.azimuth,o.Altitude=e.altitude),3===s&&(o.PSPower=e.pixelSizePower,o.PSZFactor=e.pixelSizeFactor),i.functionArguments=o,i.variableName="Raster",e.colorRamp&&(i.functionName="ShadedRelief",r?o.ColorRamp=(0,V.hf)(e.colorRamp):o.Colormap=(0,V.R8)(e.colorRamp)),r?new j.A({rasterFunctionDefinition:B(i)}):i}(e,t);case"flow":throw new Error("Unsupported rendering rule.")}}function Q(e){const t=e?.Raster??e?.raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?Q(t.functionArguments):e}const H={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function K(e,t){const r=J.has(t)?(0,Z.hP)(t):null;return r&&e.push([Math.floor(r[0]-1),0,0,0],[Math.ceil(r[1]+1),0,0,0]),e}function W(e){if(null==e)return;const{fields:t}=e,r=t?.find(e=>e?.name&&"value"===e.name.toLowerCase());return r?.name}function Y(e){return"polygon-3d"===e.symbol?.type?e.symbol.symbolLayers?.find(e=>"fill"===e.type)?.material?.color:e.symbol?.color}function X(e){const t=[],r=[];return e.forEach(e=>{t.push(e[0]),r.push((0,V.vL)([...e.slice(1),255]))}),{type:"RasterColormap",values:t,colors:r}}var ee=r(29365),te=r(58646);let re=class extends O.o{constructor(){super(...arguments),this.layer=null,this.requestRawData=!1,this.compression=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(e,t,r){this.layer.version<10.3||(t[r]=e)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(e,t,r){this.format&&this.format.toLowerCase().includes("jpg")&&null!=e&&(t[r]=e)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}get format(){return this.requestRawData||"vector-field"===this.layer.renderer?.type?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}get pixelType(){const{layer:e}=this;return e.pixelType!==e.serviceRasterInfo.pixelType?e.pixelType:void 0}writeLercVersion(e,t,r){"lerc"===this.format&&this.layer.version>=10.5&&(t[r]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("rasterFunction"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("pixelType"),e.commitProperty("definitionExpression"),e.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const r=e.definitionExpression;return t?r&&r!==t.where&&(t=t.clone(),t.where=r):r&&(t=new ee.A({where:r})),t}get rasterFunction(){const e=this.layer;let{rasterFunction:t}=e;const r=e.pixelFilter,i=!e.format||e.format.includes("jpg")||e.format.includes("png");this.requestRawData||(t=this._addResampleRasterFunction(t));const n=e.multidimensionalSubset?.areaOfInterest;return n&&(t=function(e,t){const r=new j.A({functionName:"Clip",functionArguments:{ClippingGeometry:t.toJSON(),ClippingType:1}});return L(r,e)}(t,n)),this.requestRawData||!i||r||"vector-field"===e.renderer?.type||(t=this.combineRendererWithRenderingRule(t)),t}combineRendererWithRenderingRule(e){const t=this.layer,{rasterInfo:r,renderer:i}=t;return e=e||t.rasterFunction,i&&$(i)?L(k(i,{rasterAttributeTable:r.attributeTable,pixelType:r.pixelType,dataType:r.dataType,bandNames:r.bandInfos.map(e=>{let{name:t}=e;return t}),convertColorRampToColormap:t.version<10.6,convertToRFT:!!e?.rasterFunctionDefinition,bandCount:r.bandCount}),e):e}_addResampleRasterFunction(e){if("vector-field"!==this.layer.renderer?.type||"Resample"===e?.functionName)return e;const t="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,r=this.layer.serviceRasterInfo.pixelSize;let i=new j.A({functionName:"Resample",functionArguments:{ResamplingType:t,InputCellSize:r}});return i=e?.rasterFunctionDefinition?new j.A({rasterFunctionDefinition:B(i)}):i,L(i,e)}};(0,n.Cg)([(0,c.MZ)()],re.prototype,"layer",void 0),(0,n.Cg)([(0,c.MZ)()],re.prototype,"requestRawData",void 0),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],re.prototype,"adjustAspectRatio",null),(0,n.Cg)([(0,d.K)("adjustAspectRatio")],re.prototype,"writeAdjustAspectRatio",null),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],re.prototype,"bandIds",null),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],re.prototype,"compression",void 0),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],re.prototype,"compressionQuality",null),(0,n.Cg)([(0,d.K)("compressionQuality")],re.prototype,"writeCompressionQuality",null),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],re.prototype,"compressionTolerance",null),(0,n.Cg)([(0,d.K)("compressionTolerance")],re.prototype,"writeCompressionTolerance",null),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],re.prototype,"format",null),(0,n.Cg)([(0,c.MZ)({type:String,json:{read:{reader:te.SZ.read},write:{writer:te.SZ.write}}})],re.prototype,"interpolation",null),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],re.prototype,"noData",null),(0,n.Cg)([(0,c.MZ)({type:String,json:{read:{reader:te.hm.read},write:{writer:te.hm.write}}})],re.prototype,"noDataInterpretation",null),(0,n.Cg)([(0,c.MZ)({type:te.e8.apiValues,json:{read:te.e8.read,write:te.e8.write}})],re.prototype,"pixelType",null),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],re.prototype,"lercVersion",void 0),(0,n.Cg)([(0,d.K)("lercVersion")],re.prototype,"writeLercVersion",null),(0,n.Cg)([(0,c.MZ)({type:Number})],re.prototype,"version",null),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],re.prototype,"mosaicRule",null),(0,n.Cg)([(0,c.MZ)({json:{write:!0,name:"renderingRule"}})],re.prototype,"rasterFunction",null),re=(0,n.Cg)([(0,m.$)("esri.layers.support.ExportImageServiceParameters")],re);var ie=r(44135),ne=r(1900),se=r(16852),oe=r(13023),ae=r(66486),le=r(51939),ue=r(23032),pe=r(68347),ce=r(93982),me=r(52494),de=r(99846),ye=r(78937),ge=r(20118),he=r(88205),fe=r(19902),ve=r(1438),we=r(54994),Re=r(19247);let be=class extends((0,o.OU)(O.o)){constructor(e){super(e),this.fromGeometry=null,this.toGeometry=null,this.objectIds=null,this.where=null,this.maxCount=null}};(0,n.Cg)([(0,c.MZ)({type:Re.A,json:{read:!0}})],be.prototype,"fromGeometry",void 0),(0,n.Cg)([(0,c.MZ)({type:Re.A,json:{read:!0,write:!0}})],be.prototype,"toGeometry",void 0),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],be.prototype,"objectIds",void 0),(0,n.Cg)([(0,c.MZ)({type:String,json:{write:!0}})],be.prototype,"where",void 0),(0,n.Cg)([(0,c.MZ)({type:Number,json:{write:!0}})],be.prototype,"maxCount",void 0),be=(0,n.Cg)([(0,m.$)("esri.rest.support.FindImagesParameters")],be);const Ce=e=>{const t=e;let r=class extends t{constructor(){super(...arguments),this.make=null,this.model=null,this.focalLength=null,this.pixelSize=null,this.rows=null,this.cols=null}};return(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],r.prototype,"make",void 0),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],r.prototype,"model",void 0),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],r.prototype,"focalLength",void 0),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],r.prototype,"pixelSize",void 0),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],r.prototype,"rows",void 0),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],r.prototype,"cols",void 0),r=(0,n.Cg)([(0,m.$)("esri.rest.support.CameraInfoMixin")],r),r};let Se=class extends(Ce(O.o)){constructor(){super(...arguments),this.id=null,this.referenceUri=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.perspectiveCenter=null,this.orientation=null}writeAcquisitionDate(e,t){t.acquisitionDate=e?.getTime()}};(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],Se.prototype,"id",void 0),(0,n.Cg)([(0,c.MZ)({json:{name:"uri",write:!0}})],Se.prototype,"referenceUri",void 0),(0,n.Cg)([(0,c.MZ)({type:Date,json:{write:!0}})],Se.prototype,"acquisitionDate",void 0),(0,n.Cg)([(0,d.K)("acquisitionDate")],Se.prototype,"writeAcquisitionDate",null),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],Se.prototype,"cameraID",void 0),(0,n.Cg)([(0,c.MZ)({type:Re.A,json:{write:!0}})],Se.prototype,"center",void 0),(0,n.Cg)([(0,c.MZ)({type:Re.A,json:{write:!0}})],Se.prototype,"perspectiveCenter",void 0),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],Se.prototype,"orientation",void 0),Se=(0,n.Cg)([(0,m.$)("esri.rest.support.ImageInspectionInfo")],Se);const Ie=Se;let xe=class extends O.o{constructor(){super(...arguments),this.images=null}};var Me;(0,n.Cg)([(0,c.MZ)({type:[Ie],json:{write:!0}})],xe.prototype,"images",void 0),xe=(0,n.Cg)([(0,m.$)("esri.rest.support.FindImagesResult")],xe);let Fe=Me=class extends O.o{constructor(e){super(e),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new Me((0,C.o8)({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};(0,n.Cg)([(0,c.MZ)({type:[String],json:{name:"angleName",write:!0}})],Fe.prototype,"angleNames",void 0),(0,n.Cg)([(0,c.MZ)({type:Re.A,json:{write:!0}})],Fe.prototype,"point",void 0),(0,n.Cg)([(0,c.MZ)({type:D.A,json:{write:!0}})],Fe.prototype,"spatialReference",void 0),(0,n.Cg)([(0,c.MZ)({type:x.jz,json:{write:!0}})],Fe.prototype,"rasterId",void 0),Fe=Me=(0,n.Cg)([(0,m.$)("esri.rest.support.ImageAngleParameters")],Fe);let Ae=class extends O.o{constructor(e){super(e),this.north=null,this.up=null,this.spatialReference=null}};(0,n.Cg)([(0,c.MZ)({type:Number,json:{write:!0}})],Ae.prototype,"north",void 0),(0,n.Cg)([(0,c.MZ)({type:Number,json:{write:!0}})],Ae.prototype,"up",void 0),(0,n.Cg)([(0,c.MZ)({type:D.A,json:{write:!0}})],Ae.prototype,"spatialReference",void 0),Ae=(0,n.Cg)([(0,m.$)("esri.rest.support.ImageAngleResult")],Ae);var De=r(31633),Ne=r(31608),Te=r(45802);const Pe=new Te.J({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"});let Oe=class extends O.o{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};(0,n.Cg)([(0,c.MZ)({type:Number,json:{read:!0,write:!0}})],Oe.prototype,"value",void 0),(0,n.Cg)([(0,c.MZ)({type:String,json:{read:!0,write:!0}})],Oe.prototype,"displayValue",void 0),(0,n.Cg)([(0,c.MZ)({type:Number,json:{read:!0,write:!0}})],Oe.prototype,"uncertainty",void 0),Oe=(0,n.Cg)([(0,m.$)("esri.rest.support.imageMeasureUtils.BaseImageMeasureResultValue")],Oe);let je=class extends Oe{constructor(){super(...arguments),this.unit=null}};(0,n.Cg)([(0,c.MZ)({type:String,json:{read:De.Sk.read,write:De.Sk.write}})],je.prototype,"unit",void 0),je=(0,n.Cg)([(0,m.$)("esri.rest.support.imageMeasureUtils.ImageMeasureResultLengthValue")],je);let Ze=class extends Oe{constructor(){super(...arguments),this.unit=null}};(0,n.Cg)([(0,c.MZ)({type:String,json:{read:De.dk.read,write:De.dk.write}})],Ze.prototype,"unit",void 0),Ze=(0,n.Cg)([(0,m.$)("esri.rest.support.imageMeasureUtils.ImageMeasureResultAreaValue")],Ze);let _e=class extends Oe{constructor(){super(...arguments),this.unit=null}};(0,n.Cg)([(0,c.MZ)({type:String,json:{read:De.b$.read,write:De.b$.write}})],_e.prototype,"unit",void 0),_e=(0,n.Cg)([(0,m.$)("esri.rest.support.imageMeasureUtils.ImageMeasureResultAngleValue")],_e);let Ve=class extends O.o{constructor(e){super(e),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.pixelSize=null,this.raster=void 0}};var Ee;(0,n.Cg)([(0,c.MZ)()],Ve.prototype,"type",void 0),(0,n.Cg)([(0,c.MZ)({type:Pe.apiValues,json:{read:Pe.read,write:Pe.write}})],Ve.prototype,"measureOperation",void 0),(0,n.Cg)([(0,c.MZ)({type:ee.A,json:{write:!0}})],Ve.prototype,"mosaicRule",void 0),(0,n.Cg)([(0,c.MZ)({type:Re.A,json:{write:!0}})],Ve.prototype,"pixelSize",void 0),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],Ve.prototype,"raster",void 0),Ve=(0,n.Cg)([(0,m.$)("esri.rest.support.BaseImageMeasureParameters")],Ve);let qe=Ee=class extends Ve{constructor(e){super(e),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,fe.$B)(e),t[r]=e.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new Ee((0,C.o8)({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,n.Cg)([(0,c.MZ)({types:Ne.yR,json:{name:"fromGeometry",read:!0,write:!0}})],qe.prototype,"geometry",void 0),(0,n.Cg)([(0,d.K)("geometry")],qe.prototype,"writeGeometry",null),(0,n.Cg)([(0,c.MZ)({type:Pe.apiValues,json:{write:Pe.write}})],qe.prototype,"measureOperation",null),(0,n.Cg)([(0,c.MZ)({json:{read:!0}})],qe.prototype,"is3D",void 0),(0,n.Cg)([(0,c.MZ)({type:String,json:{read:De.Sk.read,write:De.Sk.write}})],qe.prototype,"linearUnit",void 0),(0,n.Cg)([(0,c.MZ)({type:String,json:{read:De.dk.read,write:De.dk.write}})],qe.prototype,"areaUnit",void 0),qe=Ee=(0,n.Cg)([(0,m.$)("esri.rest.support.ImageAreaParameters")],qe);let Je=class extends O.o{constructor(e){super(e),this.name=null,this.sensorName=null}};(0,n.Cg)([(0,c.MZ)({type:String,json:{read:!0,write:!0}})],Je.prototype,"name",void 0),(0,n.Cg)([(0,c.MZ)({type:String,json:{read:!0,write:!0}})],Je.prototype,"sensorName",void 0),Je=(0,n.Cg)([(0,m.$)("esri.rest.support.BaseImageMeasureResult")],Je);let Ge=class extends Je{constructor(){super(...arguments),this.area=null,this.perimeter=null}};(0,n.Cg)([(0,c.MZ)({type:Ze,json:{read:!0,write:!0}})],Ge.prototype,"area",void 0),(0,n.Cg)([(0,c.MZ)({type:je,json:{read:!0,write:!0}})],Ge.prototype,"perimeter",void 0),Ge=(0,n.Cg)([(0,m.$)("esri.rest.support.ImageAreaResult")],Ge);let ze=class extends((0,o.OU)(O.o)){constructor(e){super(e),this.outSpatialReference=null}};(0,n.Cg)([(0,c.MZ)({type:D.A,json:{name:"outSR",write:!0}})],ze.prototype,"outSpatialReference",void 0),ze=(0,n.Cg)([(0,m.$)("esri.rest.support.ImageBoundaryParameters")],ze);let $e=class extends O.o{constructor(){super(...arguments),this.area=null,this.geometry=null}readGeometry(e,t){return null==e?null:e.rings?A.A.fromJSON(e):F.A.fromJSON(e)}};var Le;(0,n.Cg)([(0,c.MZ)({type:Number,json:{write:!0}})],$e.prototype,"area",void 0),(0,n.Cg)([(0,c.MZ)({types:Ne.yR,json:{name:"shape",write:!0}})],$e.prototype,"geometry",void 0),(0,n.Cg)([(0,M.w)("geometry")],$e.prototype,"readGeometry",null),$e=(0,n.Cg)([(0,m.$)("esri.rest.support.ImageBoundaryResult")],$e);let Ue=Le=class extends Ve{constructor(e){super(e),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(e,t,r){null!=e&&(t.geometryType=(0,fe.$B)(e),t[r]=e.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new Le((0,C.o8)({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,n.Cg)([(0,c.MZ)({type:Re.A,json:{read:!0,write:!0}})],Ue.prototype,"fromGeometry",void 0),(0,n.Cg)([(0,d.K)("fromGeometry")],Ue.prototype,"writeFromGeometry",null),(0,n.Cg)([(0,c.MZ)({type:Re.A,json:{read:!0,write:!0}})],Ue.prototype,"toGeometry",void 0),(0,n.Cg)([(0,c.MZ)({type:Pe.apiValues,json:{write:Pe.write}})],Ue.prototype,"measureOperation",null),(0,n.Cg)([(0,c.MZ)({json:{read:!0}})],Ue.prototype,"is3D",void 0),(0,n.Cg)([(0,c.MZ)({type:String,json:{read:De.Sk.read,write:De.Sk.write}})],Ue.prototype,"linearUnit",void 0),(0,n.Cg)([(0,c.MZ)({type:String,json:{read:De.b$.read,write:De.b$.write}})],Ue.prototype,"angularUnit",void 0),Ue=Le=(0,n.Cg)([(0,m.$)("esri.rest.support.ImageDistanceParameters")],Ue);let Be=class extends Je{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};(0,n.Cg)([(0,c.MZ)({type:je,json:{read:!0,write:!0}})],Be.prototype,"distance",void 0),(0,n.Cg)([(0,c.MZ)({type:_e,json:{read:!0,write:!0}})],Be.prototype,"azimuthAngle",void 0),(0,n.Cg)([(0,c.MZ)({type:_e,json:{read:!0,write:!0}})],Be.prototype,"elevationAngle",void 0),Be=(0,n.Cg)([(0,m.$)("esri.rest.support.ImageDistanceResult")],Be);var ke=r(6409),Qe=r(38432),He=r(59187);let Ke=class extends((0,o.OU)(O.o)){constructor(e){super(e),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,fe.$B)(e),t[r]=JSON.stringify(e.toJSON()))}};(0,n.Cg)([(0,c.MZ)({types:Ne.yR,json:{read:fe.rS,write:!0}})],Ke.prototype,"geometry",void 0),(0,n.Cg)([(0,d.K)("geometry")],Ke.prototype,"writeGeometry",null),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],Ke.prototype,"objectIds",void 0),(0,n.Cg)([(0,ke.e)(Qe.x,{ignoreUnknown:!1,name:"spatialRel"})],Ke.prototype,"spatialRelationship",void 0),(0,n.Cg)([(0,c.MZ)({type:He.A,json:{name:"time",write:!0}})],Ke.prototype,"timeExtent",void 0),(0,n.Cg)([(0,c.MZ)({type:String,json:{write:!0}})],Ke.prototype,"where",void 0),Ke=(0,n.Cg)([(0,m.$)("esri.rest.support.ImageGPSInfoParameters")],Ke);let We=class extends(Ce(O.o)){constructor(){super(...arguments),this.id=null}};(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],We.prototype,"id",void 0),We=(0,n.Cg)([(0,m.$)("esri.rest.support.CameraInfo")],We);const Ye=We;let Xe=class extends O.o{constructor(){super(...arguments),this.id=null,this.name=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.gps=null,this.orientation=null}writeAcquisitionDate(e,t){t.acquisitionDate=e?.getTime()}};(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],Xe.prototype,"id",void 0),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],Xe.prototype,"name",void 0),(0,n.Cg)([(0,c.MZ)({type:Date,json:{write:!0}})],Xe.prototype,"acquisitionDate",void 0),(0,n.Cg)([(0,d.K)("acquisitionDate")],Xe.prototype,"writeAcquisitionDate",null),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],Xe.prototype,"cameraID",void 0),(0,n.Cg)([(0,c.MZ)({type:Re.A,json:{write:!0}})],Xe.prototype,"center",void 0),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],Xe.prototype,"gps",void 0),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],Xe.prototype,"orientation",void 0),Xe=(0,n.Cg)([(0,m.$)("esri.rest.support.ImageGPSInfo")],Xe);const et=Xe;let tt=class extends O.o{constructor(){super(...arguments),this.images=null,this.cameras=null}};var rt;(0,n.Cg)([(0,c.MZ)({type:[et],json:{write:!0}})],tt.prototype,"images",void 0),(0,n.Cg)([(0,c.MZ)({type:[Ye],json:{write:!0}})],tt.prototype,"cameras",void 0),tt=(0,n.Cg)([(0,m.$)("esri.rest.support.ImageGPSInfoResult")],tt);let it=rt=class extends Ve{constructor(e){super(e),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(e,t,r){null!=e&&(t.geometryType=(0,fe.$B)(e),t[r]=e.toJSON())}get measureOperation(){return this.operationType}clone(){return new rt((0,C.o8)({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,n.Cg)([(0,c.MZ)({type:Re.A,json:{read:!0}})],it.prototype,"fromGeometry",void 0),(0,n.Cg)([(0,d.K)("fromGeometry")],it.prototype,"writeFromGeometry",null),(0,n.Cg)([(0,c.MZ)({type:Re.A,json:{read:!0,write:!0}})],it.prototype,"toGeometry",void 0),(0,n.Cg)([(0,c.MZ)({type:Pe.apiValues,json:{write:Pe.write}})],it.prototype,"measureOperation",null),(0,n.Cg)([(0,c.MZ)({json:{read:!0}})],it.prototype,"operationType",void 0),(0,n.Cg)([(0,c.MZ)({type:String,json:{read:De.Sk.read,write:De.Sk.write}})],it.prototype,"linearUnit",void 0),it=rt=(0,n.Cg)([(0,m.$)("esri.rest.support.ImageHeightParameters")],it);let nt=class extends Je{constructor(){super(...arguments),this.height=null}};(0,n.Cg)([(0,c.MZ)({type:je,json:{read:!0,write:!0}})],nt.prototype,"height",void 0),nt=(0,n.Cg)([(0,m.$)("esri.rest.support.ImageHeightResult")],nt);var st,ot=r(46570);let at=st=class extends O.o{constructor(e){super(e),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,fe.$B)(e),t[r]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t?.mosaicMethod&&(t=ee.A.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}set rasterFunction(e){let t=e;t?.rasterFunction&&(t=j.A.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}writeRasterFunction(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON())),e.rasterFunctionDefinition&&(t[r]=JSON.stringify(e.rasterFunctionDefinition))}writeRasterFunctions(e,t,r){null!=e&&(t[r]=JSON.stringify(e.map(e=>e.rasterFunctionDefinition||e.toJSON())))}writePixelSize(e,t,r){null!=e&&(t[r]=JSON.stringify(e))}writeTimeExtent(e,t,r){if(null!=e){const i=null!=e.start?e.start.getTime():null,n=null!=e.end?e.end.getTime():null;t[r]=null!=i?null!=n?`${i},${n}`:`${i}`:null}}clone(){return new st((0,C.o8)({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};(0,n.Cg)([(0,c.MZ)({types:Ne.yR,json:{write:!0}})],at.prototype,"geometry",void 0),(0,n.Cg)([(0,d.K)("geometry")],at.prototype,"writeGeometry",null),(0,n.Cg)([(0,c.MZ)({type:ee.A,json:{write:!0}})],at.prototype,"mosaicRule",null),(0,n.Cg)([(0,d.K)("mosaicRule")],at.prototype,"writeMosaicRule",null),(0,n.Cg)([(0,c.MZ)({type:j.A,json:{write:!0,name:"renderingRule"}})],at.prototype,"rasterFunction",null),(0,n.Cg)([(0,d.K)("rasterFunction")],at.prototype,"writeRasterFunction",null),(0,n.Cg)([(0,c.MZ)({type:[j.A],json:{write:!0,name:"renderingRules"}})],at.prototype,"rasterFunctions",void 0),(0,n.Cg)([(0,d.K)("rasterFunctions")],at.prototype,"writeRasterFunctions",null),(0,n.Cg)([(0,c.MZ)({type:Re.A,json:{write:!0}})],at.prototype,"pixelSize",void 0),(0,n.Cg)([(0,d.K)("pixelSize")],at.prototype,"writePixelSize",null),(0,n.Cg)([(0,c.MZ)({type:Boolean,json:{write:!0}})],at.prototype,"returnGeometry",void 0),(0,n.Cg)([(0,c.MZ)({type:Boolean,json:{write:!0}})],at.prototype,"returnCatalogItems",void 0),(0,n.Cg)([(0,c.MZ)({type:Boolean,json:{write:!0}})],at.prototype,"returnPixelValues",void 0),(0,n.Cg)([(0,c.MZ)({type:Number,json:{write:!0}})],at.prototype,"maxItemCount",void 0),(0,n.Cg)([(0,c.MZ)({type:He.A,json:{write:{target:"time"}}})],at.prototype,"timeExtent",void 0),(0,n.Cg)([(0,d.K)("timeExtent")],at.prototype,"writeTimeExtent",null),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],at.prototype,"raster",void 0),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],at.prototype,"viewId",void 0),(0,n.Cg)([(0,c.MZ)({type:Boolean,json:{write:!0}})],at.prototype,"processAsMultidimensional",void 0),at=st=(0,n.Cg)([(0,m.$)("esri.rest.support.ImageIdentifyParameters")],at);var lt=r(77725);let ut=class extends O.o{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};var pt;(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],ut.prototype,"catalogItemVisibilities",void 0),(0,n.Cg)([(0,c.MZ)({type:lt.A,json:{write:!0}})],ut.prototype,"catalogItems",void 0),(0,n.Cg)([(0,c.MZ)({type:Re.A,json:{write:!0}})],ut.prototype,"location",void 0),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],ut.prototype,"name",void 0),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],ut.prototype,"objectId",void 0),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],ut.prototype,"processedValues",void 0),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],ut.prototype,"properties",void 0),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],ut.prototype,"value",void 0),ut=(0,n.Cg)([(0,m.$)("esri.rest.support.ImageIdentifyResult")],ut);let ct=pt=class extends O.o{constructor(e){super(e),this.geometries=null,this.rasterId=null}writeGeometry(e,t,r){t.geometries={geometryType:"esriGeometryPoint",geometries:e.map(e=>e.toJSON())}}clone(){return new pt({geometries:this.geometries?.map(e=>e.clone())??[],rasterId:this.rasterId})}};(0,n.Cg)([(0,c.MZ)({type:[Re.A],json:{write:!0}})],ct.prototype,"geometries",void 0),(0,n.Cg)([(0,d.K)("geometries")],ct.prototype,"writeGeometry",null),(0,n.Cg)([(0,c.MZ)({type:x.jz,json:{write:!0}})],ct.prototype,"rasterId",void 0),ct=pt=(0,n.Cg)([(0,m.$)("esri.rest.support.ImagePixelLocationParameters")],ct);let mt=class extends O.o{constructor(){super(...arguments),this.geometries=null}};var dt;(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],mt.prototype,"geometries",void 0),mt=(0,n.Cg)([(0,m.$)("esri.rest.support.ImagePixelLocationResult")],mt);let yt=dt=class extends Ve{constructor(e){super(e),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,fe.$B)(e),t[r]=e.toJSON())}get measureOperation(){const{is3D:e,geometry:t}=this;return"point"===t.type?e?"point-3D":"point":e?"centroid-3D":"centroid"}clone(){return new dt((0,C.o8)({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,n.Cg)([(0,c.MZ)({types:Ne.yR,json:{name:"fromGeometry",read:fe.rS}})],yt.prototype,"geometry",void 0),(0,n.Cg)([(0,d.K)("geometry")],yt.prototype,"writeGeometry",null),(0,n.Cg)([(0,c.MZ)({type:Pe.apiValues,json:{read:Pe.read,write:Pe.write}})],yt.prototype,"measureOperation",null),(0,n.Cg)([(0,c.MZ)({json:{read:!0}})],yt.prototype,"is3D",void 0),yt=dt=(0,n.Cg)([(0,m.$)("esri.rest.support.ImagePointParameters")],yt);let gt=class extends Je{constructor(){super(...arguments),this.point=null}};(0,n.Cg)([(0,c.MZ)({type:Re.A,json:{name:"point.value",read:!0,write:!0}})],gt.prototype,"point",void 0),gt=(0,n.Cg)([(0,m.$)("esri.rest.support.ImagePointResult")],gt);var ht=r(76400),ft=r(56333);let vt=class extends((0,o.OU)(O.o)){constructor(e){super(e),this.geometries=[],this.rasterIds=null,this.outSpatialReference=null}writeGeometries(e,t,r){t.geometries=e?.length?{geometryType:(0,fe.$B)(e[0]),geometries:e.map(e=>({...e.toJSON(),spatialReference:void 0}))}:null}};(0,n.Cg)([(0,c.MZ)({types:[Ne.yR]})],vt.prototype,"geometries",void 0),(0,n.Cg)([(0,d.K)("geometries")],vt.prototype,"writeGeometries",null),(0,n.Cg)([(0,c.MZ)({type:[x.jz],json:{write:!0}})],vt.prototype,"rasterIds",void 0),(0,n.Cg)([(0,c.MZ)({type:D.A,json:{name:"outSR",write:!0}})],vt.prototype,"outSpatialReference",void 0),vt=(0,n.Cg)([(0,m.$)("esri.rest.support.ImageToMapMultirayParameters")],vt);let wt=class extends((0,o.OU)(O.o)){constructor(e){super(e),this.geometry=null,this.rasterId=null,this.outSpatialReference=null,this.depthOffset=0,this.adjust=!1}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,fe.$B)(e),t[r]={...e.toJSON(),spatialReference:void 0})}};(0,n.Cg)([(0,c.MZ)({types:Ne.yR,json:{read:fe.rS,write:!0}})],wt.prototype,"geometry",void 0),(0,n.Cg)([(0,d.K)("geometry")],wt.prototype,"writeGeometry",null),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],wt.prototype,"rasterId",void 0),(0,n.Cg)([(0,c.MZ)({type:D.A,json:{name:"outSR",write:!0}})],wt.prototype,"outSpatialReference",void 0),(0,n.Cg)([(0,c.MZ)({json:{name:"options.DOff",write:!0}})],wt.prototype,"depthOffset",void 0),(0,n.Cg)([(0,c.MZ)({json:{name:"options.Adjust",write:!0}})],wt.prototype,"adjust",void 0),wt=(0,n.Cg)([(0,m.$)("esri.rest.support.ImageToMapParameters")],wt);let Rt=class extends((0,o.OU)(O.o)){constructor(e){super(e),this.referenceUri=null,this.rasterId=null}};(0,n.Cg)([(0,c.MZ)({type:String,json:{name:"uri",write:!0}})],Rt.prototype,"referenceUri",void 0),(0,n.Cg)([(0,c.MZ)({type:Number,json:{write:!0}})],Rt.prototype,"rasterId",void 0),Rt=(0,n.Cg)([(0,m.$)("esri.rest.support.ImageUrlParameters")],Rt);let bt=class extends O.o{constructor(){super(...arguments),this.url=null}};(0,n.Cg)([(0,c.MZ)({json:{name:"imageURL",write:!0}})],bt.prototype,"url",void 0),bt=(0,n.Cg)([(0,m.$)("esri.rest.support.ImageUrlResult")],bt);const Ct=new Te.J({0:"constant",1:"plane",2:"minimum",3:"maximum",4:"average"},{useNumericKeys:!0});let St=class extends((0,o.OU)(O.o)){constructor(){super(...arguments),this.geometries=[],this.mosaicRule=null,this.pixelSize=null,this.constantZ=null,this.baseType="plane"}writeGeometries(e,t,r){e?.length&&(t.geometryType=(0,fe.$B)(e[0]),t.geometries=e.map(e=>e.toJSON()))}};(0,n.Cg)([(0,c.MZ)({types:[Ne.yR]})],St.prototype,"geometries",void 0),(0,n.Cg)([(0,d.K)("geometries")],St.prototype,"writeGeometries",null),(0,n.Cg)([(0,c.MZ)({type:ee.A,json:{write:!0}})],St.prototype,"mosaicRule",void 0),(0,n.Cg)([(0,c.MZ)({type:Re.A,json:{write:!0}})],St.prototype,"pixelSize",void 0),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],St.prototype,"constantZ",void 0),(0,n.Cg)([(0,c.MZ)({type:Ct.apiValues,json:{read:Ct.read,write:Ct.write}})],St.prototype,"baseType",void 0),St=(0,n.Cg)([(0,m.$)("esri.rest.support.ImageVolumeParameters")],St);let It=class extends O.o{constructor(){super(...arguments),this.area=null,this.cut=null,this.fill=null,this.maxZ=null,this.minZ=null,this.meanZ=null,this.cutCellCount=null,this.fillCellCount=null}};(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],It.prototype,"area",void 0),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],It.prototype,"cut",void 0),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],It.prototype,"fill",void 0),(0,n.Cg)([(0,c.MZ)({json:{name:"maxz",write:!0}})],It.prototype,"maxZ",void 0),(0,n.Cg)([(0,c.MZ)({json:{name:"minz",write:!0}})],It.prototype,"minZ",void 0),(0,n.Cg)([(0,c.MZ)({json:{name:"meanz",write:!0}})],It.prototype,"meanZ",void 0),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],It.prototype,"cutCellCount",void 0),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],It.prototype,"fillCellCount",void 0),It=(0,n.Cg)([(0,m.$)("esri.rest.support.ImageVolume")],It);const xt=It;let Mt=class extends O.o{constructor(){super(...arguments),this.volumes=[]}};(0,n.Cg)([(0,c.MZ)({type:[xt],json:{write:!0}})],Mt.prototype,"volumes",void 0),Mt=(0,n.Cg)([(0,m.$)("esri.rest.support.ImageVolumeResult")],Mt);let Ft=class extends((0,o.OU)(O.o)){constructor(e){super(e),this.geometry=null,this.rasterId=null,this.visibleOnly=!1}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,fe.$B)(e),t[r]=JSON.stringify(e))}};(0,n.Cg)([(0,c.MZ)({types:Ne.yR,json:{read:fe.rS,write:!0}})],Ft.prototype,"geometry",void 0),(0,n.Cg)([(0,d.K)("geometry")],Ft.prototype,"writeGeometry",null),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],Ft.prototype,"rasterId",void 0),(0,n.Cg)([(0,c.MZ)({json:{name:"options.VisibleOnly",write:!0}})],Ft.prototype,"visibleOnly",void 0),Ft=(0,n.Cg)([(0,m.$)("esri.rest.support.MapToImageParameters")],Ft);let At=class extends O.o{constructor(){super(...arguments),this.geometry=null,this.length=null,this.area=null,this.center=null}readCenter(e,t){return e.spatialReference||(e={...e,spatialReference:t.Shape.spatialReference}),Re.A.fromJSON(e)}};var Dt;(0,n.Cg)([(0,c.MZ)({types:Ne.yR,json:{name:"Shape",read:fe.rS,write:!0}})],At.prototype,"geometry",void 0),(0,n.Cg)([(0,c.MZ)({json:{name:"Length",write:!0}})],At.prototype,"length",void 0),(0,n.Cg)([(0,c.MZ)({json:{name:"Area",write:!0}})],At.prototype,"area",void 0),(0,n.Cg)([(0,c.MZ)({type:Re.A,json:{name:"Center",write:!0}})],At.prototype,"center",void 0),(0,n.Cg)([(0,M.w)("center")],At.prototype,"readCenter",null),At=(0,n.Cg)([(0,m.$)("esri.rest.support.MeasureAreaFromImageResult")],At);let Nt=Dt=class extends O.o{constructor(e){super(e),this.geometry=null,this.rasterId=void 0}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,fe.$B)(e),t[r]={...e.toJSON(),spatialReference:void 0})}clone(){const e=(0,C.o8)({geometry:this.geometry,rasterId:this.rasterId});return new Dt(e)}};(0,n.Cg)([(0,c.MZ)({types:Ne.yR,json:{name:"fromGeometry",read:fe.rS,write:!0}})],Nt.prototype,"geometry",void 0),(0,n.Cg)([(0,d.K)("geometry")],Nt.prototype,"writeGeometry",null),(0,n.Cg)([(0,c.MZ)({json:{write:!0}})],Nt.prototype,"rasterId",void 0),Nt=Dt=(0,n.Cg)([(0,m.$)("esri.rest.support.MeasureFromImageParameters")],Nt);let Tt=class extends O.o{constructor(){super(...arguments),this.geometry=null,this.length=null}};function Pt(e){const t=e?.time;if(t&&(null!=t.start||null!=t.end)){const r=[];null!=t.start&&r.push(t.start),null==t.end||r.includes(t.end)||r.push(t.end),e.time=r.join(",")}}async function Ot(e,t,r){t=(0,x.PZ)(ot.A,t);const i=(0,we.Dl)(e),n=t.geometry?[t.geometry]:[],s=await(0,ve.el)(n),o=t.toJSON();Pt(o);const a=s?.[0];null!=a&&(o.geometry=Vt(a));const l=(0,we.lF)({...i.query,f:"json",...o});return(0,we.jV)(l,r)}async function jt(e,t,r){t=(0,x.PZ)(at,t);const i=(0,we.Dl)(e),n=t.geometry?[t.geometry]:[];return(0,ve.el)(n).then(e=>{const n=t.toJSON(),s=e?.[0];null!=s&&(n.geometry=JSON.stringify(Vt(s)));const o=(0,we.lF)({...i.query,f:"json",...n}),a=(0,we.jV)(o,r);return(0,R.A)(i.path+"/identify",a)}).then(e=>ut.fromJSON(e.data))}async function Zt(e,t,r,i){const n=(0,we.Dl)(e),s=await(0,ve.el)(r),o=t.toJSON();null!=s[0]&&(o.fromGeometry=JSON.stringify(Vt(s[0]))),null!=s[1]&&(o.toGeometry=JSON.stringify(Vt(s[1])));const a=(0,we.lF)({...n.query,f:"json",...o}),l=(0,we.jV)(a,i),{data:u}=await(0,R.A)(n.path+"/measure",l);return u}async function _t(e,t,r){t=(0,x.PZ)(Nt,t);const i=(0,we.Dl)(e),n=t.toJSON(),s=(0,we.lF)({...i.query,f:"json",...n}),o=(0,we.jV)(s,r),{data:a}=await(0,R.A)(i.path+"/measureFromImage",o);return a}function Vt(e){const t=e.toJSON();return e.spatialReference?.imageCoordinateSystem&&(t.spatialReference=Et(e.spatialReference)),t}function Et(e){const{imageCoordinateSystem:t}=e;if(t){const{id:e,referenceServiceName:r}=t;return null!=e?r?{icsid:e,icsns:r}:{icsid:e}:{ics:t}}return e.toJSON()}function qt(e,t){if(!e.imageCoordinateSystem)return(0,N.YX)(e);const r=Et(e),{icsid:i,icsns:n}=r;return null==i||null!=n&&!t?.toLowerCase().includes("/"+n.toLowerCase()+"/")?JSON.stringify(r):`0:${i}`}(0,n.Cg)([(0,c.MZ)({types:Ne.yR,json:{name:"Shape",read:fe.rS,write:!0}})],Tt.prototype,"geometry",void 0),(0,n.Cg)([(0,c.MZ)({json:{name:"Length",write:!0}})],Tt.prototype,"length",void 0),Tt=(0,n.Cg)([(0,m.$)("esri.rest.support.MeasureLengthFromImageResult")],Tt);var Jt=r(25213),Gt=r(49653);var zt=r(37713),$t=r(53104),Lt=r(14009),Ut=r(97015);const Bt=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),kt=(0,x.Qp)(x.GB,{min:0,max:255});const Qt=e=>{const t=e;let r=class extends t{constructor(){super(...arguments),this._functionRasterInfos={},this._serviceSupportsMosaicRule=null,this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new re({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.length<1||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replaceAll(/ /gi,"_"),t.name)}),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(e=>"number"==typeof e))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?ee.A.fromJSON(t):null}get fieldsIndex(){return this.fields?new ne.A(this.fields):null}set format(e){e&&Bt.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t?.mosaicMethod&&(t=ee.A.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const r=e||t.mosaicRule;return r?ee.A.fromJSON(r):this._isMosaicRuleSupported(t)?ee.A.fromJSON(t):null}writeMosaicRule(e,t,r){const{mosaicRule:i}=this;this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON())}writeNoData(e,t,r){null!=e&&"number"==typeof e&&(t[r]=kt(e))}readObjectIdField(e,t){if(!e){const r=t.fields.find(e=>"esriFieldTypeOID"===e.type||"oid"===e.type);e=r?.name}return e}get parsedUrl(){return(0,I.An)(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}get renderer(){const{activePresetRendererName:e,presetRenderers:t}=this;if(e){const r=t?.find(t=>{let{name:r}=t;return r===e});return r?.renderer.clone()}return this.internalRenderer}set renderer(e){this.activePresetRendererName=null,this.internalRenderer=e}set internalRenderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("internalRenderer",e)}readRenderer(e,t,r){const i=t?.layerDefinition?.drawingInfo?.renderer,n=(0,he.LF)(i,r);return null==n?null:("vector-field"===n.type&&t.symbolTileSize&&!i.symbolTileSize&&(n.symbolTileSize=t.symbolTileSize),$(n)||l.A.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),n)}writeRenderer(e,t,r){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this.fields?.map(e=>e.clone())??[];e.push((0,le.rZ)()),"mosaic-dataset"===this.sourceType&&this.fields?.length&&e.push((0,le.Nd)()),this.version>=10.4&&null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.some(e=>{let{name:t}=e;return"none"===t.toLowerCase()})&&e.push((0,le.dy)()),null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.filter(e=>{let{name:t}=e;return"none"!==t.toLowerCase()}).forEach(t=>{let{name:r}=t;return e.push((0,le.nq)(r))});const{rasterInfo:t}=this;if(this._isVectorDataSet()){const r=t?.multidimensionalInfo?.variables[0].unit?.trim(),i=(0,le.DV)(r),n=(0,le.y6)();e.push(i,n)}if(t?.multidimensionalInfo&&"raster-dataset"===this.sourceType){const r=(0,le.AL)(t.multidimensionalInfo);e.push(...r)}const r=t?.attributeTable;if(null!=r){const t=(0,le.jC)(r);e.push(...t)}return e}set rasterFunction(e){let t=e;t?.rasterFunction&&(t=j.A.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}readRasterFunction(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r?.length&&"None"!==r[0].name?this._isRFTJson(t.renderingRule)?j.A.fromJSON({rasterFunctionDefinition:t.renderingRule}):j.A.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?D.A.fromJSON(r):null}writePixelType(e,t,r){null!=this.serviceRasterInfo&&this.pixelType===this.serviceRasterInfo.pixelType||(t[r]=te.e8.toJSON(e))}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let r=e,{renderer:i,symbolizer:n,pixelFilter:s}=this;const{isRawData:o}=e;if(o&&"lerc"!==this.format&&(i??=(0,ye.PD)(this.rasterInfo,{bandIds:this.bandIds,variableName:this.rasterFunction?null:this.mosaicRule?.multidimensionalDefinition?.[0].variableName}),n||(this.symbolizer=new ge.A({rendererJSON:i.toJSON(),rasterInfo:this.rasterInfo}),n=this.symbolizer)),(o||!this._isPicture())&&i&&n&&!s){await this._updateSymbolizer(n,i);const{bandIds:s}=this;r=await this._symbolize({pixelData:e,bandIds:s,symbolizer:n},t)}return r}async highlightPixels(e,t){const r=e.highlightOptions.map(e=>{const t={...e},{bandId:r}=t;if(null==r)t.bandId=0;else{const e=this.bandIds?.length?this.bandIds.indexOf(r):r;if(e<0||e>2)return;t.bandId=e}return t}).filter(e=>null!=e),i=this._rasterJobHandler;i?await i.highlightPixels({...e,highlightOptions:r},t):(0,me._F)(e.pixelBlock,e.renderedPixelBlock,r)}destroy(){this._shutdownJobHandler()}async calculateVolume(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsCalculateVolume)throw new a.A("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=(0,C.o8)(e),this.mosaicRule&&null==e.mosaicRule&&(e.mosaicRule=this.mosaicRule),async function(e,t,r){const i=(t=(0,x.PZ)(St,t)).toJSON();i.geometries=JSON.stringify(i.geometries);const n=(0,we.Dl)(e),s=(0,we.lF)({...n.query,f:"json",...i}),o=(0,we.jV)(s,r),{data:a}=await(0,R.A)(`${n.path}/calculateVolume`,o);return Mt.fromJSON({volumes:a.results})}(this.url,e,this._getRequestOptions(t))}async computeAngles(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeAngles)throw new a.A("imagery-layer:compute-angles","this operation is not supported on the input image service");return async function(e,t,r){const i=(t=(0,x.PZ)(Fe,t)).toJSON();null!=i.angleName&&(i.angleName=i.angleName.join(",")),t?.point?.spatialReference?.imageCoordinateSystem&&(i.point.spatialReference=Et(t.point.spatialReference)),t?.spatialReference?.imageCoordinateSystem&&(i.spatialReference=qt(t.spatialReference));const n=(0,we.Dl)(e),s=(0,we.lF)({...n.query,f:"json",...i}),o=(0,we.jV)(s,r),{data:a}=await(0,R.A)(`${n.path}/computeAngles`,o);return a.spatialReference=a.spatialReference?null!=a.spatialReference.geodataXform?new D.A({wkid:0,imageCoordinateSystem:a.spatialReference}):D.A.fromJSON(a.spatialReference):null,"NaN"===a.north&&(a.north=null),"NaN"===a.up&&(a.up=null),new Ae(a)}(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputePixelLocation)throw new a.A("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return async function(e,t,r){const i=(t=(0,x.PZ)(ct,t)).toJSON(),{geometries:n}=t;if(n)for(let u=0;u<n.length;u++)n[u].spatialReference?.imageCoordinateSystem&&(i.geometries.geometries[u].spatialReference=Et(n[u].spatialReference));const s=(0,we.Dl)(e),o=(0,we.lF)({...s.query,f:"json",...i}),a=(0,we.jV)(o,r),{data:l}=await(0,R.A)(`${s.path}/computePixelLocation`,a);return mt.fromJSON(l)}(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeHistograms)throw new a.A("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=(0,C.o8)(e),this._applyMosaicAndRenderingRules(e),async function(e,t,r){const i=await Ot(e,t,r),n=(0,we.Dl)(e),{data:s}=await(0,R.A)(`${n.path}/computeHistograms`,i);return{histograms:s.histograms}}(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeStatisticsHistograms)throw new a.A("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=(0,C.o8)(e),this._applyMosaicAndRenderingRules(e),async function(e,t,r){const i=await Ot(e,t,r),n=(0,we.Dl)(e),{data:s}=await(0,R.A)(`${n.path}/computeStatisticsHistograms`,i),{statistics:o}=s;return o?.length&&o.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:o,histograms:s.histograms}}(this.url,e,this._getRequestOptions(t))}async measureHeight(e,t){const r=await this._fetchCapabilities(t?.signal);if(!("base-and-top"===e.operationType?r.mensuration.supportsHeightFromBaseAndTop:"base-and-top-shadow"===e.operationType?r.mensuration.supportsHeightFromBaseAndTopShadow:r.mensuration.supportsHeightFromTopAndTopShadow))throw new a.A("imagery-layer:measure-height","this operation is not supported on the input image service");return e=(0,C.o8)(e),this._applyMosaicRule(e),async function(e,t,r){t=(0,x.PZ)(it,t);const i=await Zt(e,t,[t.fromGeometry,t.toGeometry],r);return nt.fromJSON(i)}(this.url,e,this._getRequestOptions(t))}async measureAreaAndPerimeter(e,t){const r=await this._fetchCapabilities(t?.signal);if(!r.mensuration.supportsAreaAndPerimeter||e.is3D&&!r.mensuration.supports3D)throw new a.A("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=(0,C.o8)(e),this._applyMosaicRule(e),async function(e,t,r){t=(0,x.PZ)(qe,t);const i=await Zt(e,t,[t.geometry],r);return Ge.fromJSON(i)}(this.url,e,this._getRequestOptions(t))}async measureDistanceAndAngle(e,t){const r=await this._fetchCapabilities(t?.signal);if(!r.mensuration.supportsDistanceAndAngle||e.is3D&&!r.mensuration.supports3D)throw new a.A("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=(0,C.o8)(e),this._applyMosaicRule(e),async function(e,t,r){t=(0,x.PZ)(Ue,t);const i=await Zt(e,t,[t.fromGeometry,t.toGeometry],r);return Be.fromJSON(i)}(this.url,e,this._getRequestOptions(t))}async measurePointOrCentroid(e,t){const r=await this._fetchCapabilities(t?.signal);if(!r.mensuration.supportsPointOrCentroid||e.is3D&&!r.mensuration.supports3D)throw new a.A("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=(0,C.o8)(e),this._applyMosaicRule(e),async function(e,t,r){t=(0,x.PZ)(yt,t);const i=await Zt(e,t,[t.geometry],r);return gt.fromJSON(i)}(this.url,e,this._getRequestOptions(t))}async measureLengthFromImage(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsMeasureFromImage)throw new a.A("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if("polyline"!==e.geometry.type)throw new a.A("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return async function(e,t,r){const i=await _t(e,t,r);return Tt.fromJSON(i)}(this.url,e,this._getRequestOptions(t))}async measureAreaFromImage(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsMeasureFromImage)throw new a.A("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if("polygon"!==e.geometry.type)throw new a.A("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return async function(e,t,r){const i=await _t(e,t,r);return At.fromJSON(i)}(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return null!=t?t.get(e):void 0}getFieldDomain(e,t){const r=this.getField(e);return r?r.domain:null}fetchImage(e,t,r){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if((0,b.eO)(l.A.getLogger(this),"`ImageryLayer.fetchImage` is deprecated in favor of 'ImageryLayer.fetchPixels'.",{replacement:"ImageryLayer.fetchPixels",version:"4.33",warnOnce:!0}),null==e||null==t||null==r)throw new a.A("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");return this.internalFetchImage(e,t,r,i)}async internalFetchImage(e,t,r){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};await this._updateCurrentRasterInfo();const{exportImageServiceParameters:s}=this;let o=!1;n.requestRawData&&(await this._initJobHandler(),s.requestRawData||"lerc"===this.format||(o=!0,s.requestRawData=!0));const a=this.getExportImageServiceParameters(e,t,r,n.timeExtent);if(o&&(s.requestRawData=!1),null==a){if(n.requestAsImageElement&&this._canRequestImageElement(this.format)){const e=document.createElement("canvas");return e.width=t,e.height=r,n.returnImageBitmap?{imageBitmap:await(0,se.m)(e,`${i(this.parsedUrl)}/exportImage`,n.signal)}:{imageOrCanvasElement:e}}const{bandIds:s,rasterInfo:o}=this,a=(s?.length||o.bandCount)??0,l=t*r,u=o.pixelType,p=[];for(let e=0;e<a;e++)p.push(ae.A.createEmptyBand(u,l));return{pixelData:{pixelBlock:new ae.A({width:t,height:r,pixels:p,mask:new Uint8Array(l),pixelType:u}),extent:e}}}const l=!!n.requestAsImageElement&&!this.pixelFilter,u=l&&!!n.returnImageBitmap,p={imageServiceParameters:a,imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:l,returnImageBitmap:u,signal:n.signal};return this._requestArrayBuffer(p)}async fetchPixels(e,t,r){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};await this._initJobHandler(),i.applyRendering&&this._updateCurrentRasterInfo();const n=i.applyRendering?void 0:new re({layer:this,requestRawData:!0,interpolation:i.interpolation??"nearest",bandIds:i.bandIds??[]}),s=this.getExportImageServiceParameters(e,t,r,i.timeExtent,n);if(null==s)return{extent:e,pixelBlock:null};delete s.pixelType,i.bandIds||delete s.bandIds,delete s.compressionQuality;const o={imageServiceParameters:s,imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:!1,returnImageBitmap:!1,signal:i.signal},{pixelData:a}=await this._requestArrayBuffer(o);return a??{extent:e,pixelBlock:null}}fetchKeyProperties(e){return(0,R.A)(i(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then(e=>e.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new a.A("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):(0,R.A)(i(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then(e=>lt.A.fromJSON(e.data))}getCatalogItemRasterInfo(e,t){const r={...t,query:this._getQueryParams()};return async function(e,t,r){const i=(0,we.Dl)(e),n=(0,we.lF)({...i?.query,f:"json"}),s=(0,we.jV)(n,r),o=`${i?.path}/${t}/info`,a=(0,R.A)(`${o}`,s),l=(0,R.A)(`${o}/keyProperties`,s),u=await Promise.allSettled([a,l]),p="fulfilled"===u[0].status?u[0].value.data:null,c="fulfilled"===u[1].status?u[1].value.data:null;let m=null;p.statistics?.length&&(m=p.statistics.map(e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]})));const d=F.A.fromJSON(p.extent),y=Math.ceil(d.width/p.pixelSizeX-.1),g=Math.ceil(d.height/p.pixelSizeY-.1),h=d.spatialReference,f=new Re.A({x:p.pixelSizeX,y:p.pixelSizeY,spatialReference:h}),v=p.histograms?.length?p.histograms:null,w=new Gt.A({origin:p.origin,blockWidth:p.blockWidth,blockHeight:p.blockHeight,firstPyramidLevel:p.firstPyramidLevel,maximumPyramidLevel:p.maxPyramidLevel});return new ue.A({width:y,height:g,bandCount:p.bandCount,extent:d,spatialReference:h,pixelSize:f,pixelType:p.pixelType.toLowerCase(),statistics:m,histograms:v,keyProperties:c,storageInfo:w})}(i(this.parsedUrl),e,r)}async getCatalogItemICSInfo(e,t){const{data:r}=await(0,R.A)(i(this.parsedUrl)+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),n=r?.ics;if(!n)return;let s=null;try{s=(await(0,R.A)(i(this.parsedUrl)+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!s?.spatialReference)return{ics:n,icsToPixelTransform:null,icsExtent:null,northDirection:null};const o=this.version>=10.7?(0,R.A)(i(this.parsedUrl)+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then(e=>e.data).catch(()=>({})):{},a=s.spatialReference,l={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[s]}),inSR:(0,N.YX)(a),outSR:"0:"+e},u=(0,R.A)(i(this.parsedUrl)+"/project",{query:this._getQueryParams(l),...t}).then(e=>e.data).catch(()=>({})),p=(s.xmin+s.xmax)/2,c=(s.ymax-s.ymin)/6,m=s.ymin+c,d=[];for(let i=0;i<5;i++)d.push({x:p,y:m+c*i});const y={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:d}),inSR:(0,N.YX)(a),outSR:"0:"+e},g=(0,R.A)(i(this.parsedUrl)+"/project",{query:this._getQueryParams(y),...t}).then(e=>e.data).catch(()=>({})),h=await Promise.all([o,u,g]);let f=h[0].ipxf;if(null==f){const e=n.geodataXform?.xf_0;"topup"===e?.name?.toLowerCase()&&6===e?.coefficients?.length&&(f={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const v=F.A.fromJSON(h[1]?.geometries?.[0]);v&&(v.spatialReference=new D.A({wkid:0,imageCoordinateSystem:n}));const w=h[2].geometries?h[2].geometries.filter(e=>null!=e?.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y):[],b=w.length;if(b<3)return{ics:n,icsToPixelTransform:f,icsExtent:v,northDirection:null};let C=0,S=0,I=0,x=0;for(let i=0;i<b;i++)C+=w[i].x,S+=w[i].y,I+=w[i].x*w[i].x,x+=w[i].x*w[i].y;const M=(b*x-C*S)/(b*I-C*C);let A=0;const T=w[4].x>w[0].x,P=w[4].y>w[0].y;return M===1/0?A=P?90:270:0===M?A=T?0:180:M>0?A=T?180*Math.atan(M)/Math.PI:180*Math.atan(M)/Math.PI+180:M<0&&(A=P?180+180*Math.atan(M)/Math.PI:360+180*Math.atan(M)/Math.PI),{ics:n,icsToPixelTransform:f,icsExtent:v,northDirection:A}}async generateRasterInfo(e,t){e=(0,x.PZ)(j.A,e);const r={...t,query:this._getQueryParams()};if(!e||"none"===e.functionName?.toLowerCase()||this._isVectorFieldResampleFunction(e))return this.serviceRasterInfo??(0,Jt.Tw)(i(this.parsedUrl),this.sourceJSON,r);const n=function(e){const t=JSON.stringify(e),r=t.includes('"rasterFunctionDefinition":{'),i=r?t.match(/"type":"(.*?FunctionArguments")/gi):t.match(/"rasterFunction":"(.*?")/gi),n=i?.map(e=>r?e.slice(8,-18):e.slice(18,-1));return n?n.join("/"):null}(e);if(!n)throw new a.A("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[n])return this._functionRasterInfos[n];const s=(0,Jt.X6)(i(this.parsedUrl),e,r);this._functionRasterInfos[n]=s;try{return await s}catch(Ve){throw this._functionRasterInfos[n]=null,Ve}}getExportImageServiceParameters(e,t,r,n,s){const o=qt((e=e.clone().shiftCentralMeridian()).spatialReference,i(this.parsedUrl));s??=this.exportImageServiceParameters;const a=s.toJSON(),{bandIds:l,noData:u}=a;let{renderingRule:p}=a;const c=this.rasterFunction?.rasterFunctionDefinition,m=this.renderer?.type,d=!m||"raster-stretch"===m||"raster-colormap"===m||"unique-value"===m||"class-breaks"===m||"raster-shaded-relief"===m;if(l?.length&&this._hasRasterFunction(this.rasterFunction)&&!c&&d){const e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:l}};if("Stretch"===p.rasterFunction)e.rasterFunctionArguments.Raster=p.rasterFunctionArguments.Raster,p.rasterFunctionArguments.Raster=e;else if("Colormap"===p.rasterFunction){const t=p.rasterFunctionArguments.Raster;"Stretch"===t?.rasterFunction?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,p.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=p,p=e;a.bandIds=void 0}else a.bandIds=l?.join(",");Array.isArray(u)&&u.length>0&&(a.noData=u.join(","));const y=this._processMultidimensionalIntersection(null,n,s.mosaicRule);if(y.isOutSide)return null;a.mosaicRule=null!=y.mosaicRule?JSON.stringify(y.mosaicRule):null,n=y.timeExtent,a.renderingRule=this._getRenderingRuleString(j.A.fromJSON(p));const g={};if(null!=n){const{start:e,end:t}=n.toJSON();e&&t&&e===t?g.time=""+e:null==e&&null==t||(g.time=`${e??"null"},${t??"null"}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:o,imageSR:o,size:t+","+r,...a,...g}}async getSamples(e,t){const r=await this._fetchCapabilities(t?.signal);if(!r?.operations.supportsGetSamples)throw new a.A("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=(0,C.o8)(e);const{raster:i}=this;return i&&null==e.raster&&(e.raster=i),async function(e,t,r){const i=(t=(0,x.PZ)(ht.A,t)).toJSON();Pt(i),i.outFields?.length&&(i.outFields=i.outFields.join(","));const n=await(0,ve.el)(t.geometry),s=n?.[0];null!=s&&(i.geometry=Vt(s));const o=(0,we.Dl)(e),a=(0,we.lF)({...o.query,f:"json",...i}),l=(0,we.jV)(a,r),{data:u}=await(0,R.A)(`${o.path}/getSamples`,l),p=u.samples.map(e=>{const t="NaN"===e.value||""===e.value?null:e.value.split(" ").map(e=>Number(e));return{...e,pixelValue:t}});return ft.A.fromJSON({samples:p})}(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsIdentify)throw new a.A("imagery-layer:identify","identify operation is not supported on the input image service");e=(0,C.o8)(e),this.version<10.91&&"extent"===e.geometry?.type&&(e.geometry=A.A.fromExtent(e.geometry));const r=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(r.isOutSide)throw new a.A("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=r.timeExtent,e.mosaicRule=r.mosaicRule;const{raster:i,rasterFunction:n}=this;return n&&null==e.rasterFunction&&(e.rasterFunction=n),i&&null==e.raster&&(e.raster=i),jt(this.url,e,this._getRequestOptions(t))}async imageToMap(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsImageToMap)throw new a.A("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return async function(e,t,r){const i=(t=(0,x.PZ)(wt,t)).toJSON();t.geometry.spatialReference.imageCoordinateSystem&&(i.geometry=Vt(t.geometry)),t.depthOffset&&t.adjust||delete i.options;const n=(0,we.Dl)(e),s=(0,we.lF)({...n.query,f:"json",...i}),o=(0,we.jV)(s,r),{data:a}=await(0,R.A)(`${n.path}/imageToMap`,o);return(0,fe.rS)(a)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async imageToMapMultiray(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsImageToMapMultiray)throw new a.A("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return async function(e,t,r){const i=(t=(0,x.PZ)(vt,t)).toJSON();t.rasterIds?.length&&(i.rasterIds=t.rasterIds.join(","));const n=(0,we.Dl)(e),s=(0,we.lF)({...n.query,f:"json",...i}),o=(0,we.jV)(s,r),{data:a}=await(0,R.A)(`${n.path}/imageToMapMultiray`,o);return(0,fe.rS)(a)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async mapToImage(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsMapToImage)throw new a.A("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return async function(e,t,r){const i=(t=(0,x.PZ)(Ft,t)).toJSON(),n=await(0,ve.el)(t.geometry),s=n?.[0];null!=s&&(i.geometry=Vt(s)),t.visibleOnly||delete i.options;const o=s?.spatialReference??t.geometry?.spatialReference;o&&(i.inSR=qt(o));const a=(0,we.Dl)(e),l=(0,we.lF)({...a.query,f:"json",...i}),u=(0,we.jV)(l,r),{data:p}=await(0,R.A)(`${a.path}/mapToImage`,u);return(0,fe.rS)(p)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async findImages(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsFindImages)throw new a.A("imagery-layer:find-images","findImages operation is not supported on the input image service");return async function(e,t,r){const i=(t=(0,x.PZ)(be,t)).toJSON(),n=await(0,ve.el)([t.fromGeometry,t.toGeometry]);null!=n[0]&&(i.fromGeometry=Vt(n[0]),n[0].spatialReference&&(i.inSR=qt(n[0].spatialReference))),null!=n[1]&&(i.toGeometry=Vt(n[1])),t.objectIds?.length&&(i.objectIds=i.objectIds.join(","));const s=(0,we.Dl)(e),o=(0,we.lF)({...s.query,f:"json",...i}),a=(0,we.jV)(o,r),{data:l}=await(0,R.A)(`${s.path}/find`,a);return xe.fromJSON(l)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async getImageUrl(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsGetImageUrl)throw new a.A("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return async function(e,t,r){const i=(t=(0,x.PZ)(Rt,t)).toJSON(),n=(0,we.Dl)(e),s=(0,we.lF)({...n.query,f:"json",...i}),o=(0,we.jV)(s,r),{data:a}=await(0,R.A)(`${n.path}/getImageUrl`,o);return bt.fromJSON(a)}(i(this.parsedUrl),e,this._getRequestOptions(t))}createQuery(){return new Ut.A({outFields:["*"],returnGeometry:!0,where:this.definitionExpression||"1=1"})}async queryBoundary(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQueryBoundary)throw new a.A("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return e=e??{outSpatialReference:this.spatialReference},async function(e,t,r){t=(0,x.PZ)(ze,t);const i=(0,we.Dl)(e),n=t.toJSON();t.outSpatialReference&&(n.outSR=qt(t.outSpatialReference));const s=(0,we.lF)({...i.query,f:"json",...n}),o=(0,we.jV)(s,r),{data:a}=await(0,R.A)(i.path+"/queryBoundary",o);return $e.fromJSON(a)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasters(e,t){({query:e,requestOptions:t}=await this._prepareForQuery(e,t));const r=await(0,Lt.s)(this.url,e,t),i=this.graphicOrigin;return r.features.forEach(e=>{e.layer=this,e.origin=i}),r}async queryObjectIds(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,$t.V)(this.url,e,t)}async queryGPSInfo(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQueryGPSInfo)throw new a.A("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return e=e??{where:"1=1"},async function(e,t,r){const i=(t=(0,x.PZ)(Ke,t)).toJSON();Pt(i),i.objectIds?.length&&(i.objectIds=i.objectIds.join(",")),i.geometry||i.objectIds||i.time||i.where||(i.where="1=1");const n=await(0,ve.el)(t.geometry),s=n?.[0];null!=s&&(i.geometry=Vt(s));const o=s?.spatialReference??t.geometry?.spatialReference;o&&(i.inSR=qt(o));const a=(0,we.Dl)(e),l=(0,we.lF)({...a.query,f:"json",...i}),u=(0,we.jV)(l,r),{data:p}=await(0,R.A)(`${a.path}/queryGPSInfo`,u);return tt.fromJSON(p)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasterCount(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,zt.I)(this.url,e,t)}async queryVisibleRasters(e,t){if(!e)throw new a.A("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:r,returnDomainValues:i,returnTopmostRaster:n,showNoDataRecords:s}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let o=!1,l=null,u=null;const p=le.F_.servicePixelValue.toLowerCase(),c=this._rasterFunctionNamesIndex;if(null!=e.outFields&&(o=e.outFields.some(e=>!e.toLowerCase().startsWith(p)),this.version>=10.4)){const t=e.outFields.filter(e=>e.toLowerCase().startsWith(p)&&e.length>p.length).map(e=>{const t=e.slice(p.length+1);return[this._updateRenderingRulesFunctionName(t,c),t]});l=t.map(e=>new j.A({functionName:e[0]})),u=t.map(e=>e[1]);const{rasterFunction:r}=this;0===l.length?r?.functionName?(l.push(r),u.push(r.functionName)):l=null:r?.functionName&&!l.some(e=>e.functionName===r.functionName)&&(l.push(r),u.push(r.functionName))}const m=null==e.outSpatialReference||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:d}=this;let y=e.timeExtent||this.timeExtent;if(d){const{isOutside:t,intersection:r}=(0,pe.Rp)(d,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:this.exportImageServiceParameters.mosaicRule?.multidimensionalDefinition});if(t)throw new a.A("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");null!=r?.timeExtent&&(y=r.timeExtent)}const g=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,y);let h=e.geometry;this.version<10.91&&"extent"===h?.type&&(h=A.A.fromExtent(h));const f=this._getQueryParams({geometry:h,timeExtent:y,mosaicRule:g,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:l,pixelSize:r,returnCatalogItems:o,returnGeometry:m,raster:this.raster,maxItemCount:n?1:null});delete f.f;const v=new at(f);try{await this._generateRasterInfo(this.rasterFunction);const r=await jt(this.url,v,{signal:t?.signal,query:{...this.customParameters}}),n=e.outFields,a=null!=r.value&&r.value.toLowerCase().includes("nodata"),l=o&&!m&&r?.catalogItems?.features.length&&(s||!a),p=this.multidimensionalInfo&&"raster-dataset"===this.sourceType?(0,pe.XU)({rasterInfo:this.rasterInfo,multidimensionalDefinition:g?.multidimensionalDefinition,timeExtent:y,multidimensionalSubset:this.multidimensionalSubset}):null;if(!l)return this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:s,templateFields:n,effectiveMultidimensionalDefinition:p});const c=this.objectIdField||"ObjectId",d=r.catalogItems?.features??[],h=d.map(e=>e.attributes?.[c]),f=new Ut.A({objectIds:h,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[c]}),w=await this.queryRasters(f);return w?.features?.length&&w.features.forEach(t=>{d.forEach(r=>{r.attributes[c]===t.attributes[c]&&t.geometry&&(r.geometry=t.geometry.clone(),null!=e.outSpatialReference&&(r.geometry.spatialReference=e.outSpatialReference))})}),this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:s,templateFields:n,effectiveMultidimensionalDefinition:p})}catch{throw new a.A("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const r=(0,R.A)(i(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then(e=>e.data?.statistics),n=(0,R.A)(i(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then(e=>e.data?.histograms),s=await Promise.all([r,n]);return s[0]&&s[0].forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:s[0]||null,histograms:s[1]||null}}getMultidimensionalSubsetVariables(e){const t=e??this.serviceRasterInfo.multidimensionalInfo;return(0,pe.z2)(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=null!=this.serviceRasterInfo?Promise.resolve(this.serviceRasterInfo):(0,Jt.Tw)(i(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then(e=>(this._set("serviceRasterInfo",e),this._set("multidimensionalInfo",e.multidimensionalInfo),(0,Jt.E9)(e,t),e)),n=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:e}):null,s=this._getRasterFunctionInfos();return Promise.all([r,n,s]).then(e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.internalRenderer&&!this._isSupportedRenderer(this.internalRenderer)&&(this._set("internalRenderer",null),l.A.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("internalRenderer",this._configRenderer(this.renderer)),this.addHandles([(0,S.wB)(()=>this.rasterFunction,e=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(e).then(e=>{e&&(this.rasterInfo=e)})})]);const{serviceRasterInfo:t}=this;null!=t.multidimensionalInfo&&this._updateMultidimensionalDefinition(t)})}_combineMosaicRuleWithTimeExtent(e,t){const r=this.timeInfo,{multidimensionalInfo:i}=this.serviceRasterInfo;if(null==e||null==i||null==t||null==r?.startField)return e;const{startField:n}=r,s=i.variables.some(e=>e.dimensions.some(e=>e.name===n))?n:"StdTime";if(e=e.clone(),"mosaic-dataset"===this.sourceType)return e.multidimensionalDefinition=e.multidimensionalDefinition?.filter(e=>e.dimensionName!==s),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const o=e.multidimensionalDefinition.filter(e=>e.dimensionName===s),a=null!=t.start?t.start.getTime():null,l=null!=t.end?t.end.getTime():null,u=null==a||null==l||a===l,p=u?[a||l]:[[a,l]],c=this.version>=10.8;if(o.length)o.forEach(e=>{e.dimensionName===s&&(c?(e.dimensionName=null,e.isSlice=!1,e.values=[]):(e.isSlice=u,e.values=p))});else if(!c){const t=e.multidimensionalDefinition.filter(e=>null!=e.variableName&&null==e.dimensionName);t.length?t.forEach(e=>{e.dimensionName=s,e.isSlice=u,e.values=p}):e.multidimensionalDefinition.push(new P.A({variableName:"",dimensionName:s,isSlice:u,values:p}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return null==e?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(e=>!(!e.variableName&&!e.dimensionName)),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this.sourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQuery)throw new a.A("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=null!=e?(0,x.PZ)(Ut.A,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}_isSupportedRenderer(e){const{rasterInfo:t,rasterFunction:r}=this;return"unique-value"===e.type&&this._hasRasterFunction(r)&&1===t?.bandCount&&["u8","s8"].includes(t.pixelType)||null!=t&&null!=e&&(0,ye.fp)(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){let t=this.sourceJSON;if(!t){const{data:r,ssl:n}=await(0,R.A)(i(this.parsedUrl),{query:this._getQueryParams(),signal:e});t=r,this.sourceJSON=t,n&&(this.url=this.url.replace(/^http:/i,"https:"))}if(t.capabilities?.toLowerCase().split(",").map(e=>e.trim()).indexOf("tilesonly")>-1)throw new a.A("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(t,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:e.fields?.length>0}_isMosaicRuleSupported(e){if(!e)return!1;const t=this._isMosaicDataset(e),r=e.currentVersion>=10.71&&e.hasMultidimensions&&!(e.fields?.length>1);return t||r}_isVectorFieldResampleFunction(e){if(null==e)return!1;const{functionName:t,functionArguments:r}=e,i="resample"===t?.toLowerCase(),n=r?.ResampleType||r?.resampleType;return i&&(7===n||10===n)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){const t=this._isPicture(),{rasterInfo:r}=this;if(!t&&!this.pixelFilter||this._isVectorDataSet()){const t=this.mosaicRule?.multidimensionalDefinition?.[0].variableName,i=(0,ye.I8)({variableName:t,rasterFunctionName:this.rasterFunction?.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&r.bandCount>=3){const e=i?.bandIds??(0,ye.ci)(r);!e||3===r.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}e||(e=i?.renderer??(0,ye.PD)(r,{bandIds:this.bandIds,variableName:this.rasterFunction?null:t}));const n=(0,ye.$P)(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=n,this.symbolizer.rasterInfo=r):this.symbolizer=new ge.A({rendererJSON:n,rasterInfo:r}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:null!=e.pixelBlock?e.pixelBlock.clone():null}}_getQueryParams(e){null!=e?.renderingRule&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:r}=this;return{raster:t,viewId:r,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e?.query,...this.customParameters}}}_decodePixelBlock(e,t,r){return this._rasterJobHandler?this._rasterJobHandler.decode({data:e,options:t}):(0,ce.D)(e,t,r)}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;if(this.loaded)return t;if(t&&this.version>=10.3){if(1===t.length&&"none"===t[0].name.toLowerCase())return t;const r=await(0,R.A)(i(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e});return r.data?.rasterFunctionInfos}return null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:r,returnImageBitmap:n,signal:s}=e;if(r&&this._canRequestImageElement(t.format)){const r=`${i(this.parsedUrl)}/exportImage`,{data:o}=await(0,R.A)(r,{responseType:n?"blob":"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...e.imageServiceParameters}),signal:s});return o instanceof Blob?{imageBitmap:await(0,se.m)(o,r,s),params:t}:{imageOrCanvasElement:o,params:t}}const o=this._initJobHandler(),l=(0,R.A)(i(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:s}),u=(await Promise.all([l,o]))[0].data,p=t.format||"jpgpng";let c=p;if("bsq"!==c&&"bip"!==c&&(c=(0,ce.g)(u)),!c)throw new a.A("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(u)));const m={signal:s},d="gif"===p||"bmp"===p||p.includes("png")&&("png"===c||"jpg"===c)?(0,ce.D)(u,{useCanvas:!0,...t},m):this._decodePixelBlock(u,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:p},m);return{pixelData:{pixelBlock:await d,extent:t.extent},params:t}}_generateRasterInfo(e,t){return this.generateRasterInfo(e,t).catch(()=>null)}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this.defaultMosaicRule?.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let t=(0,pe.fy)(e,{multidimensionalSubset:this.multidimensionalSubset});if(null!=t&&t.length>0){this.mosaicRule=this.mosaicRule||new ee.A;const e=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&"none"!==this.rasterFunction.functionName?.toLowerCase()&&t.forEach(e=>e.variableName=""),t=t.filter(e=>{let{variableName:t,dimensionName:r}=e;return t&&"*"!==t||r}),!e?.length&&t.length&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){t=t||{};const r=e.value,{templateRRFunctionNames:i,showNoDataRecords:n,returnDomainValues:s,templateFields:o}=t,a=e.processedValues;let l=e.catalogItems?.features,u=e.properties?.Values?.map(e=>e.replaceAll(/ /gi,", "))||[];const p=this.objectIdField||"ObjectId",c="string"==typeof r&&r.toLowerCase().includes("nodata"),m=[];if(r&&!l&&(!c||n)){const e={};e[p]=0,u=[r],l=[new w.A({geometry:this.fullExtent,attributes:e})],this.multidimensionalInfo&&"raster-dataset"===this.sourceType&&(0,le.eS)(this.rasterFields,e,t.effectiveMultidimensionalDefinition)}if(!l)return[];this._updateResponseFieldNames(l,o),c&&!n&&(l=[]);const{itemPixelValue:d,servicePixelValue:y}=le.F_,g=this.rasterFields.some(e=>e.name===d),h=this.graphicOrigin;for(let f=0;f<l.length;f++){const e=l[f];if(null!=r){const t=u[f],s=this.rasterFunction&&a&&a.length>0&&i&&i.length>0&&i.includes(this.rasterFunction.functionName)?a[i.indexOf(this.rasterFunction.functionName)]:r;if("nodata"===t.toLowerCase()&&!n)continue;g&&(e.attributes[d]=t),e.attributes[y]=s,this._updateFeatureWithMagDirValues(e,t);const o=this.fields&&this.fields.length>0;let l=this.rasterFunction&&null!=this.serviceRasterInfo.attributeTable?o?t:r:s;this.rasterFunction||(l=o?t:r),this._updateFeatureWithRasterAttributeTableValues(e,l)}if(e.sourceLayer=e.layer=this,e.origin=h,s&&this._updateFeatureWithDomainValues(e),i&&a&&i.length===a.length)for(let t=0;t<i.length;t++){const r=`${le.F_.servicePixelValue}.${i[t]}`;e.attributes[r]=a[t]}m.push(l[f])}return m}_processMultidimensionalIntersection(e,t,r){const{multidimensionalSubset:i}=this;if(!i)return{isOutSide:!1,timeExtent:t,mosaicRule:r=this._combineMosaicRuleWithTimeExtent(r,t)};if(i){const{isOutside:r,intersection:n}=(0,pe.Rp)(i,{geometry:e,timeExtent:t});if(r)return{isOutSide:!0,timeExtent:null,mosaicRule:null};null!=n?.timeExtent&&(t=n.timeExtent)}if(r=this._combineMosaicRuleWithTimeExtent(r,t),r?.multidimensionalDefinition){const{isOutside:e}=(0,pe.Rp)(i,{multidimensionalDefinition:r.multidimensionalDefinition});if(e)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:t,mosaicRule:r}}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(null==r)return;const{features:i,fields:n}=r,s=n.map(e=>e.name).find(e=>"value"===e.toLowerCase());if(!s)return;const o=i.filter(e=>e.attributes[s]===(null!=t?parseInt(t,10):null));o&&o[0]&&n.forEach(t=>{const r=le.ER+t.name;e.attributes[r]=o[0].attributes[t.name]})}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const r=t.split(/,\s*/).map(e=>parseFloat(e)),i=r.map(e=>[e]),n=r.map(e=>({minValue:e,maxValue:e,noDataValue:null})),s=new ae.A({height:1,width:1,pixelType:"f32",pixels:i,statistics:n});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:s,extent:new F.A(0,0,0,0,this.spatialReference)});const o="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[s.pixels[0][0],s.pixels[1][0]]:(0,de.Lu)([s.pixels[0][0],s.pixels[1][0]]);e.attributes[le.F_.magnitude]=o[0],e.attributes[le.F_.direction]=o[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter(e=>e.domain&&"coded-value"===e.domain.type);null!=t&&t.forEach(t=>{const r=e.attributes[t.name];if(null!=r){const i=t.domain.codedValues.find(e=>e.code===r);i&&(e.attributes[t.name]=i.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;null!=r&&e.forEach(e=>{if(e?.attributes)for(const i of t){const t=r.get(i)?.name;t&&t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t])}})}_getRenderingRuleString(e){if(e){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRasterFunction(e){return null!=e?.functionName&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replaceAll(/ /gi,"_");return t.has(r)?t.get(r):e}_isRFTJson(e){return e?.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType}_applyMosaicAndRenderingRules(e){const{raster:t,mosaicRule:r,rasterFunction:i}=this;i&&null==e.rasterFunction&&(e.rasterFunction=i),r&&null==e.mosaicRule&&(e.mosaicRule=r),t&&null==e.raster&&(e.raster=t)}async _updateCurrentRasterInfo(e){if(this.renderer||this.symbolizer){const t=await this._generateRasterInfo(this.rasterFunction,{signal:e});t&&(this.rasterInfo=t)}}_applyMosaicRule(e){const{raster:t,mosaicRule:r}=this;r&&null==e.mosaicRule&&(e.mosaicRule=r),t&&null==e.raster&&(e.raster=t)}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(e=>e.trim()):["image","catalog"],{currentVersion:r,maxRecordCount:i}=e,n=t.includes("image"),s="esriImageServiceDataTypeElevation"===e.serviceDataType,o=!(!e.spatialReference&&!e.extent?.spatialReference),a=t.includes("edit"),l=t.includes("mensuration")&&o,u=null==e.mensurationCapabilities?[]:e.mensurationCapabilities.toLowerCase().split(",").map(e=>e.trim()),p=l&&u.includes("basic"),c=this._isMosaicDataset(e)&&t.includes("catalog"),m=t.includes("download"),d=r>=10.7&&s||r>=11.4&&(s||l&&u.includes("3d")),y=c&&e.fields&&e.fields.length>0,g=y&&e.supportsAdvancedQueries?e.advancedQueryCapabilities:void 0;return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:n,supportsExportImage:n,supportsIdentify:n,supportsImageToMap:r>=11.2&&c,supportsImageToMapMultiray:r>=11.2&&c,supportsMapToImage:r>=11.2&&c,supportsFindImages:r>=11.2&&c,supportsGetImageUrl:r>=11.3&&m,supportsMeasure:l,supportsMeasureFromImage:r>=11.2,supportsDownload:m,supportsQuery:y,supportsGetSamples:r>=10.2&&n,supportsProject:r>=10.3&&n,supportsComputeStatisticsHistograms:r>=10.4&&n,supportsQueryBoundary:r>=10.6&&n,supportsCalculateVolume:d,supportsComputePixelLocation:r>=10.7&&c,supportsComputeAngles:r>=10.91,supportsQueryGPSInfo:r>=11.2&&c,supportsAdd:a,supportsDelete:a,supportsEditing:a,supportsUpdate:a,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryBins:!1,supportsQueryPivot:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:i,maxRecordCountFactor:void 0,maxUniqueIDCount:void 0,supportsStatistics:!!g?.supportsStatistics,supportsOrderBy:!!g?.supportsOrderBy,supportsDistinct:!!g?.supportsDistinct,supportsPagination:!!g?.supportsPagination,supportsPaginationOnAggregatedQueries:!!g?.supportsPaginationOnAggregatedQueries,supportsStandardizedQueriesOnly:!!g?.useStandardizedQueries,supportsPercentileStatistics:!!g?.supportsPercentileStatistics,supportsCentroid:!!g?.supportsReturningGeometryCentroid,supportsCentroidOnDegeneratedQuantizedGeometry:!1,supportsCurrentUser:!1,supportsDegeneratedQuantizedGeometry:!1,supportsDistance:!!g?.supportsQueryWithDistance,supportsExtent:!!g?.supportsReturningQueryExtent,supportsGeometryProperties:!!g?.supportsReturningGeometryProperties,supportsHavingClause:!!g?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsReturnMesh:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:g?.supportsSqlExpression??!!g,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!g?.supportsDefaultSR,supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0,supportsTrueCurve:!1},mensuration:{supportsDistanceAndAngle:p,supportsAreaAndPerimeter:p,supportsPointOrCentroid:p,supportsHeightFromBaseAndTop:l&&u.includes("base-top height"),supportsHeightFromBaseAndTopShadow:l&&u.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:l&&u.includes("top-top shadow height"),supports3D:l&&u.includes("3d")}}}};function i(e){return e?.path??""}return(0,n.Cg)([(0,c.MZ)({clonable:!1})],r.prototype,"_functionRasterInfos",void 0),(0,n.Cg)([(0,c.MZ)({readOnly:!0})],r.prototype,"_serviceSupportsMosaicRule",void 0),(0,n.Cg)([(0,M.w)("_serviceSupportsMosaicRule",["currentVersion","fields"])],r.prototype,"readServiceSupportsMosaicRule",null),(0,n.Cg)([(0,c.MZ)({readOnly:!0})],r.prototype,"_rasterFunctionNamesIndex",null),(0,n.Cg)([(0,c.MZ)()],r.prototype,"adjustAspectRatio",void 0),(0,n.Cg)([(0,c.MZ)({type:[x.jz],json:{write:!0}})],r.prototype,"bandIds",void 0),(0,n.Cg)([(0,M.w)("bandIds")],r.prototype,"readBandIds",null),(0,n.Cg)([(0,c.MZ)({readOnly:!0,json:{read:!1}})],r.prototype,"capabilities",void 0),(0,n.Cg)([(0,M.w)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],r.prototype,"readCapabilities",null),(0,n.Cg)([(0,c.MZ)({type:Number})],r.prototype,"compressionQuality",void 0),(0,n.Cg)([(0,d.K)("compressionQuality")],r.prototype,"writeCompressionQuality",null),(0,n.Cg)([(0,c.MZ)({type:Number})],r.prototype,"compressionTolerance",void 0),(0,n.Cg)([(0,d.K)("compressionTolerance")],r.prototype,"writeCompressionTolerance",null),(0,n.Cg)([(0,c.MZ)({json:{read:{source:"copyrightText"}}})],r.prototype,"copyright",void 0),(0,n.Cg)([(0,c.MZ)({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],r.prototype,"defaultMosaicRule",void 0),(0,n.Cg)([(0,M.w)("defaultMosaicRule",["defaultMosaicMethod"])],r.prototype,"readDefaultMosaicRule",null),(0,n.Cg)([(0,c.MZ)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],r.prototype,"definitionExpression",void 0),(0,n.Cg)([(0,c.MZ)({readOnly:!0,constructOnly:!0})],r.prototype,"exportImageServiceParameters",void 0),(0,n.Cg)([(0,c.MZ)()],r.prototype,"rasterInfo",void 0),(0,n.Cg)([(0,c.MZ)({readOnly:!0,type:[ie.A]})],r.prototype,"fields",void 0),(0,n.Cg)([(0,c.MZ)({readOnly:!0})],r.prototype,"fieldsIndex",null),(0,n.Cg)([(0,c.MZ)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff","bip","bsq"],json:{write:!0}})],r.prototype,"format",null),(0,n.Cg)([(0,M.w)("service","format",["serviceDataType"])],r.prototype,"readFormat",null),(0,n.Cg)([(0,c.MZ)({type:F.A})],r.prototype,"fullExtent",void 0),(0,n.Cg)([(0,c.MZ)({readOnly:!0})],r.prototype,"hasMultidimensions",void 0),(0,n.Cg)([(0,c.MZ)({json:{read:{source:"maxImageHeight"}}})],r.prototype,"imageMaxHeight",void 0),(0,n.Cg)([(0,c.MZ)({json:{read:{source:"maxImageWidth"}}})],r.prototype,"imageMaxWidth",void 0),(0,n.Cg)([(0,c.MZ)({type:String,json:{type:te.SZ.jsonValues,read:te.SZ.read,write:te.SZ.write}})],r.prototype,"interpolation",void 0),(0,n.Cg)([(0,c.MZ)()],r.prototype,"minScale",void 0),(0,n.Cg)([(0,M.w)("service","minScale")],r.prototype,"readMinScale",null),(0,n.Cg)([(0,c.MZ)()],r.prototype,"maxScale",void 0),(0,n.Cg)([(0,M.w)("service","maxScale")],r.prototype,"readMaxScale",null),(0,n.Cg)([(0,c.MZ)({type:ee.A})],r.prototype,"mosaicRule",null),(0,n.Cg)([(0,M.w)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],r.prototype,"readMosaicRule",null),(0,n.Cg)([(0,d.K)("mosaicRule")],r.prototype,"writeMosaicRule",null),(0,n.Cg)([(0,c.MZ)()],r.prototype,"multidimensionalInfo",void 0),(0,n.Cg)([(0,c.MZ)({type:oe.A,json:{write:!0}})],r.prototype,"multidimensionalSubset",void 0),(0,n.Cg)([(0,c.MZ)({json:{type:x.jz}})],r.prototype,"noData",void 0),(0,n.Cg)([(0,d.K)("noData")],r.prototype,"writeNoData",null),(0,n.Cg)([(0,c.MZ)({type:String,json:{type:te.hm.jsonValues,read:te.hm.read,write:te.hm.write}})],r.prototype,"noDataInterpretation",void 0),(0,n.Cg)([(0,c.MZ)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],r.prototype,"objectIdField",void 0),(0,n.Cg)([(0,M.w)("objectIdField")],r.prototype,"readObjectIdField",null),(0,n.Cg)([(0,c.MZ)({readOnly:!0})],r.prototype,"geometryType",void 0),(0,n.Cg)([(0,c.MZ)({})],r.prototype,"typeIdField",void 0),(0,n.Cg)([(0,c.MZ)({})],r.prototype,"types",void 0),(0,n.Cg)([(0,c.MZ)({readOnly:!0})],r.prototype,"parsedUrl",null),(0,n.Cg)([(0,c.MZ)({type:Function})],r.prototype,"pixelFilter",void 0),(0,n.Cg)([(0,c.MZ)()],r.prototype,"raster",void 0),(0,n.Cg)([(0,c.MZ)({readOnly:!0})],r.prototype,"sourceType",void 0),(0,n.Cg)([(0,M.w)("sourceType",["serviceSourceType","fields"])],r.prototype,"readSourceType",null),(0,n.Cg)([(0,c.MZ)()],r.prototype,"viewId",void 0),(0,n.Cg)([(0,c.MZ)()],r.prototype,"renderer",null),(0,n.Cg)([(0,c.MZ)({types:he.uy,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:he.Gj,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],r.prototype,"internalRenderer",null),(0,n.Cg)([(0,M.w)("internalRenderer")],r.prototype,"readRenderer",null),(0,n.Cg)([(0,d.K)("internalRenderer")],r.prototype,"writeRenderer",null),(0,n.Cg)([(0,c.MZ)({clonable:!1})],r.prototype,"symbolizer",void 0),(0,n.Cg)([(0,c.MZ)(T.ke)],r.prototype,"opacity",void 0),(0,n.Cg)([(0,c.MZ)({readOnly:!0})],r.prototype,"rasterFields",null),(0,n.Cg)([(0,c.MZ)({constructOnly:!0})],r.prototype,"rasterFunctionInfos",void 0),(0,n.Cg)([(0,c.MZ)({type:j.A,json:{name:"renderingRule"}})],r.prototype,"rasterFunction",null),(0,n.Cg)([(0,M.w)("rasterFunction",["renderingRule","rasterFunctionInfos"])],r.prototype,"readRasterFunction",null),(0,n.Cg)([(0,c.MZ)({readOnly:!0})],r.prototype,"serviceDataType",void 0),(0,n.Cg)([(0,c.MZ)({readOnly:!0,type:D.A})],r.prototype,"spatialReference",void 0),(0,n.Cg)([(0,M.w)("spatialReference",["spatialReference","extent"])],r.prototype,"readSpatialReference",null),(0,n.Cg)([(0,c.MZ)({type:te.e8.apiValues,json:{read:te.e8.read,type:te.e8.jsonValues}})],r.prototype,"pixelType",void 0),(0,n.Cg)([(0,d.K)("pixelType")],r.prototype,"writePixelType",null),(0,n.Cg)([(0,c.MZ)({constructOnly:!0,type:ue.A})],r.prototype,"serviceRasterInfo",void 0),(0,n.Cg)([(0,c.MZ)()],r.prototype,"sourceJSON",void 0),(0,n.Cg)([(0,c.MZ)(T.OZ)],r.prototype,"url",void 0),(0,n.Cg)([(0,c.MZ)({readOnly:!0})],r.prototype,"version",void 0),(0,n.Cg)([(0,M.w)("version",["currentVersion","fields","timeInfo"])],r.prototype,"readVersion",null),r=(0,n.Cg)([(0,m.$)("esri.layers.mixins.ArcGISImageService")],r),r};var Ht=r(19502),Kt=r(65624),Wt=r(31362),Yt=r(11270),Xt=r(94729),er=r(84008),tr=r(8350),rr=r(21617),ir=r(5682),nr=r(78817),sr=r(38278),or=r(12482),ar=r(30973),lr=r(731);let ur=class extends((0,Kt.dM)((0,nr.e)((0,ir.j)((0,Yt.q)((0,Xt.A)((0,tr.H)(Qt((0,er.G)((0,rr.J)((0,Wt.d)((0,Ht.b)((0,u.P)((0,o.OU)(v.A)))))))))))))){constructor(){super(...arguments),this.graphicOrigin=new f(this),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.type="imagery",this._debouncedSaveOperations=(0,p.sg)(async(e,t,i)=>{const{save:n,saveAs:s}=await r.e(964).then(r.bind(r,20964));switch(e){case 0:return n(this,t);case 1:return s(this,i,t)}})}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(p.QP).then(()=>this._fetchService(t))),Promise.resolve(this)}set elevationInfo(e){"relative-to-scene"!==e?.mode&&this._set("elevationInfo",e),this._validateElevationInfo(e)}get legendEnabled(){return!this._isPreviewLayer&&(this._get("legendEnabled")??!0)}set legendEnabled(e){this._set("legendEnabled",e)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(e){this._set("listMode",e)}writeOperationalLayerType(e,t,r){const i="vector-field"===this.renderer?.type;t[r]=i?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){return!(!this.raster||!this.url?.toLowerCase().includes("/rasterrendering/imageserver"))}createPopupTemplate(e){const{rasterFields:t}=this,r=new Set,i=le.F_.itemPixelValue.toLowerCase(),n="raster-dataset"===this.sourceType,s=le.Oo.toLowerCase(),o=`${le.F_.servicePixelValue.toLowerCase()}.`;for(const u of t){const e=u.name.toLowerCase();e===i||e.startsWith(o)||n&&e.startsWith(s)||r.add(u.name)}const a=(0,ar.tn)({fields:t,title:this.title},{...e,visibleFieldNames:r}),{rasterInfo:l}=this;return a?.fieldInfos&&l&&(0,le.h4)(a.fieldInfos,l),a}queryFeatures(e,t){return this.queryRasters(e,t).then(e=>{if(e?.features)for(const t of e.features)t.layer=t.sourceLayer=this,t.origin=this.graphicOrigin;return e})}queryFeatureCount(e,t){return this.queryRasterCount(e,t)}redraw(){this.emit("redraw")}async save(e){return this._debouncedSaveOperations(0,e)}async saveAs(e,t){return this._debouncedSaveOperations(1,t,e)}serviceSupportsSpatialReference(e){return(0,sr.D)(this,e)}write(e,t){if(!this._isPreviewLayer)return super.write(e,t);if(t?.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new a.A("layer:unsupported",`Imagery preview layer (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}_validateElevationInfo(e){(0,or.XF)(l.A.getLogger(this),(0,or.$7)("Imagery layers","relative-to-scene",e)),(0,or.XF)(l.A.getLogger(this),(0,or.tW)("Imagery layers",e))}};(0,n.Cg)([(0,c.MZ)({type:lr.A,value:null,json:{name:"layerDefinition.elevationInfo",write:!0,origins:{"portal-item":{read:!1,write:!1},"web-map":{read:!1,write:!1}}}})],ur.prototype,"elevationInfo",null),(0,n.Cg)([(0,c.MZ)({readOnly:!0,clonable:!1})],ur.prototype,"graphicOrigin",void 0),(0,n.Cg)([(0,c.MZ)(T.fV)],ur.prototype,"legendEnabled",null),(0,n.Cg)([(0,c.MZ)({type:["show","hide"]})],ur.prototype,"listMode",null),(0,n.Cg)([(0,c.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],ur.prototype,"isReference",void 0),(0,n.Cg)([(0,c.MZ)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],ur.prototype,"operationalLayerType",void 0),(0,n.Cg)([(0,d.K)("web-map","operationalLayerType")],ur.prototype,"writeOperationalLayerType",null),(0,n.Cg)([(0,c.MZ)(T.M6)],ur.prototype,"popupEnabled",void 0),(0,n.Cg)([(0,c.MZ)({type:s.A,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],ur.prototype,"popupTemplate",void 0),(0,n.Cg)([(0,c.MZ)({readOnly:!0})],ur.prototype,"defaultPopupTemplate",null),(0,n.Cg)([(0,c.MZ)(T.PY)],ur.prototype,"screenSizePerspectiveEnabled",void 0),(0,n.Cg)([(0,c.MZ)({readOnly:!0,json:{read:!1}})],ur.prototype,"type",void 0),(0,n.Cg)([(0,c.MZ)({readOnly:!0})],ur.prototype,"_isPreviewLayer",null),ur=(0,n.Cg)([(0,m.$)("esri.layers.ImageryLayer")],ur);const pr=ur},56002:(e,t,r)=>{function i(e){let t,r,i=[],n=!1;return function(){for(var s=arguments.length,o=new Array(s),a=0;a<s;a++)o[a]=arguments[a];return n&&t===this&&function(e,t){if(e.length!==t.length)return!1;for(let r=0;r<e.length;++r)if(e[r]!==t[r])return!1;return!0}(o,i)||(r=e.apply(this,o),t=this,i=o,n=!0),r}}r.d(t,{B:()=>i})},75146:(e,t,r)=>{r.d(t,{A:()=>i});class i{constructor(){this.globalIdFieldName=null,this.geohashFieldName=null,this.geometryProperties=null,this.geometryType=null,this.spatialReference=null,this.hasZ=!1,this.hasM=!1,this.features=[],this.fields=[],this.transform=null,this.exceededTransferLimit=!1,this.uniqueIdField=null,this.queryGeometryType=null,this.queryGeometry=null}weakClone(){const e=new i;return e.globalIdFieldName=this.globalIdFieldName,e.geohashFieldName=this.geohashFieldName,e.geometryProperties=this.geometryProperties,e.geometryType=this.geometryType,e.spatialReference=this.spatialReference,e.hasZ=this.hasZ,e.hasM=this.hasM,e.features=this.features,e.fields=this.fields,e.transform=this.transform,e.exceededTransferLimit=this.exceededTransferLimit,e.uniqueIdField=this.uniqueIdField,e.queryGeometry=this.queryGeometry,e.queryGeometryType=this.queryGeometryType,e}}},78238:(e,t,r)=>{function i(e){const t={};for(const r in e){if("declaredClass"===r)continue;const n=e[r];if(null!=n&&"function"!=typeof n)if(Array.isArray(n)){t[r]=[];for(let e=0;e<n.length;e++)t[r][e]=i(n[e])}else"object"==typeof n?n.toJSON&&(t[r]=JSON.stringify(n)):t[r]=n}return t}r.d(t,{z:()=>i})},90321:(e,t,r)=>{function i(e,t){return e?t?4:3:t?3:2}function n(e,t,r,n){if(!t?.lengths.length)return null;e.lengths.length&&(e.lengths.length=0),e.coords.length&&(e.coords.length=0);const a=e.coords,l=[],u=r?[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY]:[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY],{lengths:p,coords:c}=t,m=i(r,n);let d=0;for(const i of p){const e=s(u,c,d,i,r,n);e&&l.push(e),d+=i*m}if(l.sort((e,t)=>{let i=e[2]-t[2];return 0===i&&r&&(i=e[4]-t[4]),i}),l.length){let e=6*l[0][2];a[0]=l[0][0]/e,a[1]=l[0][1]/e,r&&(e=6*l[0][4],a[2]=0!==e?l[0][3]/e:0),(a[0]<u[0]||a[0]>u[1]||a[1]<u[2]||a[1]>u[3]||r&&(a[2]<u[4]||a[2]>u[5]))&&(a.length=0)}if(!a.length){const e=t.lengths[0]?o(c,0,p[0],r,n):null;if(!e)return null;a[0]=e[0],a[1]=e[1],r&&e.length>2&&(a[2]=e[2])}return e}function s(e,t,r,n,s,o){const a=i(s,o);let l=r,u=r+a,p=0,c=0,m=0,d=0,y=0;for(let i=0,h=n-1;i<h;i++,l+=a,u+=a){const r=t[l],i=t[l+1],n=t[l+2],o=t[u],a=t[u+1],g=t[u+2];let h=r*a-o*i;d+=h,p+=(r+o)*h,c+=(i+a)*h,s&&(h=r*g-o*n,m+=(n+g)*h,y+=h),r<e[0]&&(e[0]=r),r>e[1]&&(e[1]=r),i<e[2]&&(e[2]=i),i>e[3]&&(e[3]=i),s&&(n<e[4]&&(e[4]=n),n>e[5]&&(e[5]=n))}if(d>0&&(d*=-1),y>0&&(y*=-1),!d)return null;const g=[p,c,.5*d];return s&&(g[3]=m,g[4]=.5*y),g}function o(e,t,r,n,s){const o=i(n,s);let c=t,m=t+o,d=0,y=0,g=0,h=0;for(let i=0,f=r-1;i<f;i++,c+=o,m+=o){const t=e[c],r=e[c+1],i=e[c+2],s=e[m],o=e[m+1],f=e[m+2],v=n?l(t,r,i,s,o,f):a(t,r,s,o);if(v)if(d+=v,n){const e=p(t,r,i,s,o,f);y+=v*e[0],g+=v*e[1],h+=v*e[2]}else{const e=u(t,r,s,o);y+=v*e[0],g+=v*e[1]}}return d>0?n?[y/d,g/d,h/d]:[y/d,g/d]:r>0?n?[e[t],e[t+1],e[t+2]]:[e[t],e[t+1]]:null}function a(e,t,r,i){const n=r-e,s=i-t;return Math.sqrt(n*n+s*s)}function l(e,t,r,i,n,s){const o=i-e,a=n-t,l=s-r;return Math.sqrt(o*o+a*a+l*l)}function u(e,t,r,i){return[e+.5*(r-e),t+.5*(i-t)]}function p(e,t,r,i,n,s){return[e+.5*(i-e),t+.5*(n-t),r+.5*(s-r)]}r.d(t,{Q:()=>n})}}]);
//# sourceMappingURL=4687.b22f0750.chunk.js.map