"use strict";(self.webpackChunkn2_trees=self.webpackChunkn2_trees||[]).push([[7897],{12001:(e,t,r)=>{r.d(t,{A:()=>p});var s=r(6326),i=r(42553),n=r(46053),d=(r(81806),r(76460),r(47249),r(28379)),o=r(87990),a=r(15018);let p=class extends i.o{constructor(e){super(e),this.moment=null,this.exceededTransferLimit=!1,this.serviceEdits=null}readServiceEdits(e,t){return(0,a.Z)(e)}};(0,s.Cg)([(0,n.MZ)({type:Date})],p.prototype,"moment",void 0),(0,s.Cg)([(0,n.MZ)({type:Boolean})],p.prototype,"exceededTransferLimit",void 0),(0,s.Cg)([(0,n.MZ)({type:[Object]})],p.prototype,"serviceEdits",void 0),(0,s.Cg)([(0,d.w)("serviceEdits")],p.prototype,"readServiceEdits",null),p=(0,s.Cg)([(0,o.$)("esri.rest.networks.unitIdentifiers.support.EditUnitIdentifiersResult")],p)},15018:(e,t,r)=>{r.d(t,{Z:()=>n});var s=r(13312),i=r(38911);function n(e){return e.map(e=>{const t=e.editedFeatures,r=s.A.fromJSON(t?.spatialReference);return t?{layerId:e.id,editedFeatures:(0,i.pX)(t,r)}:null}).filter(e=>null!==e)}},87897:(e,t,r)=>{r.r(t),r.d(t,{insertGap:()=>d});var s=r(3825),i=r(54994),n=r(12001);async function d(e,t,r){const d=(0,i.Dl)(e),o={...t.toJSON(),f:"json"},a=(0,i.lF)({...d.query,...o}),p=(0,i.jV)(a,{...r,method:"post"}),u=`${d.path}/unitIdentifiers/insertGap`,{data:l}=await(0,s.A)(u,p);return n.A.fromJSON(l)}}}]);
//# sourceMappingURL=7897.daccc185.chunk.js.map