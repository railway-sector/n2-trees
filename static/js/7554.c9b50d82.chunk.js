"use strict";(self.webpackChunkn2_trees=self.webpackChunkn2_trees||[]).push([[7554],{67554:(e,t,i)=>{i.d(t,{default:()=>g});var r=i(6326),s=i(50076),n=i(42553),o=i(68134),l=i(46053),a=(i(81806),i(76460),i(47249),i(87990)),c=i(86476),u=i(61979),d=i(83475),h=i(50623),m=i(35298);let b=class extends n.o{constructor(e){super(e),this._circuitTable=null,this._circuitSectionTable=null,this._subcircuitTable=null,this.telecomDomainNetwork=null,this.utilityNetwork=null}initialize(){this.addHandles([(0,o.wB)(()=>[this.gdbVersion,this.historicMoment],()=>{this._setLayerVersionAndMoment(this._circuitTable),this._setLayerVersionAndMoment(this._circuitSectionTable),this._setLayerVersionAndMoment(this._subcircuitTable)})])}get _circuitTableUrl(){if(null==this.telecomDomainNetwork)return null;const e=this.telecomDomainNetwork.circuitSources?.find(e=>"esriUNFCUTCircuit"===e.utilityNetworkFeatureClassUsageType)?.layerId??null;return null==e?null:`${this.featureServiceUrl}/${e}`}get _circuitSectionTableUrl(){if(null==this.telecomDomainNetwork)return null;const e=this.telecomDomainNetwork.circuitSources?.find(e=>"esriUNFCUTCircuitSection"===e.utilityNetworkFeatureClassUsageType)?.layerId??null;return null==e?null:`${this.featureServiceUrl}/${e}`}get _subcircuitTableUrl(){if(null==this.telecomDomainNetwork)return null;const e=this.telecomDomainNetwork.circuitSources?.find(e=>"esriUNFCUTSubcircuit"===e.utilityNetworkFeatureClassUsageType)?.layerId??null;return null==e?null:`${this.featureServiceUrl}/${e}`}get networkServiceUrl(){return this.utilityNetwork?.networkServiceUrl??null}get featureServiceUrl(){return this.utilityNetwork?.featureServiceUrl??null}get gdbVersion(){return this.utilityNetwork?.gdbVersion??null}get historicMoment(){return this.utilityNetwork?.historicMoment??null}get telecomDomainNetworkName(){return this.telecomDomainNetwork?.domainNetworkName??null}get circuitTable(){if(null!=this._circuitTable)return this._circuitTable;if(null==this._circuitTableUrl)throw new s.A("circuit-manager:missing-circuit-table-url","Unable to load the circuit table; cannot get layer url from `telecomDomainNetwork.","Ensure `telecomDomainNetwork` was provided to the circuit manager.");return this._circuitTable=new c.default({url:this._circuitTableUrl,gdbVersion:this.gdbVersion,historicMoment:this.historicMoment}),this._circuitTable}get circuitSectionTable(){if(null!=this._circuitSectionTable)return this._circuitSectionTable;if(null==this._circuitSectionTableUrl)throw new s.A("circuit-manager:missing-circuit-section-table-url","Unable to load the circuit section table; cannot get layer url from `telecomDomainNetwork.","Ensure `telecomDomainNetwork` was provided to the circuit manager.");return this._circuitSectionTable=new c.default({url:this._circuitSectionTableUrl,gdbVersion:this.gdbVersion,historicMoment:this.historicMoment}),this._circuitSectionTable}get subcircuitTable(){if(null!=this._subcircuitTable)return this._subcircuitTable;if(null==this._subcircuitTableUrl)throw new s.A("circuit-manager:missing-subcircuit-table-url","Unable to load the subcircuit table; cannot get layer url from `telecomDomainNetwork.","Ensure `telecomDomainNetwork` was provided to the circuit manager.");return this._subcircuitTable=new c.default({url:this._subcircuitTableUrl,gdbVersion:this.gdbVersion,historicMoment:this.historicMoment}),this._subcircuitTable}async loadCircuitTable(){return this.circuitTable.load()}async loadCircuitSectionTable(){return this.circuitSectionTable.load()}async loadSubcircuitTable(){return this.subcircuitTable.load()}getCircuit(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return new h.A({circuitManager:this,name:e,sections:t?new Map:null})}async create(e){const[{createCircuit:t},{default:r}]=await Promise.all([Promise.all([i.e(8911),i.e(7743)]).then(i.bind(i,77743)),i.e(5305).then(i.bind(i,35305))]),s=r.from({circuit:e,domainNetworkName:this.telecomDomainNetworkName});(0,m.w5)(this.featureServiceUrl,this.gdbVersion||null)?(s.sessionId=m.TA,await(0,m.ZJ)(this.featureServiceUrl,this.gdbVersion,!0)):s.sessionId=null,s.gdbVersion=this.gdbVersion;const n=(0,u.Zk)(this.featureServiceUrl,null,this.gdbVersion,!1),o=await t(this.networkServiceUrl,s);e.circuitManager=this,n.resolve({edits:null,addedFeatures:[],updatedFeatures:[],deletedFeatures:[],addedAttachments:[],updatedAttachments:[],deletedAttachments:[],exceededTransferLimit:o.exceededTransferLimit,historicMoment:o.moment,editedFeatures:o.serviceEdits||void 0})}async alter(e){if(null==e.globalId)throw new s.A("circuit-manager:alter-without-globalid","A circuit being altered must have a globalId","To ensure the circuit has a globalId, query the circuit first");const[{alterCircuit:t},{default:r}]=await Promise.all([Promise.all([i.e(8911),i.e(6305)]).then(i.bind(i,86305)),i.e(5305).then(i.bind(i,35305))]),n=r.from({circuit:e,domainNetworkName:this.telecomDomainNetworkName});(0,m.w5)(this.featureServiceUrl,this.gdbVersion||null)?(n.sessionId=m.TA,await(0,m.ZJ)(this.featureServiceUrl,this.gdbVersion,!0)):n.sessionId=null,n.gdbVersion=this.gdbVersion;const o=(0,u.Zk)(this.featureServiceUrl,null,this.gdbVersion,!1),l=await t(this.networkServiceUrl,n);e.circuitManager=this,o.resolve({edits:null,addedFeatures:[],updatedFeatures:[],deletedFeatures:[],addedAttachments:[],updatedAttachments:[],deletedAttachments:[],exceededTransferLimit:l.exceededTransferLimit,historicMoment:l.moment,editedFeatures:l.serviceEdits||void 0})}async delete(e){const[{deleteCircuits:t},{default:r}]=await Promise.all([Promise.all([i.e(8911),i.e(5681)]).then(i.bind(i,25681)),i.e(1313).then(i.bind(i,61313))]),s=r.from({circuits:e,domainNetworkName:this.telecomDomainNetworkName});(0,m.w5)(this.featureServiceUrl,this.gdbVersion||null)?(s.sessionId=m.TA,await(0,m.ZJ)(this.featureServiceUrl,this.gdbVersion,!0)):s.sessionId=null,s.gdbVersion=this.gdbVersion;const n=(0,u.Zk)(this.featureServiceUrl,null,this.gdbVersion,!1),o=await t(this.networkServiceUrl,s);n.resolve({edits:null,addedFeatures:[],updatedFeatures:[],deletedFeatures:[],addedAttachments:[],updatedAttachments:[],deletedAttachments:[],exceededTransferLimit:o.exceededTransferLimit,historicMoment:o.moment,editedFeatures:o.serviceEdits||void 0})}async export(e){const[{exportCircuits:t},{default:r}]=await Promise.all([Promise.all([i.e(8911),i.e(9278)]).then(i.bind(i,19278)),i.e(4868).then(i.bind(i,84868))]),s=r.from(e);(0,m.w5)(this.featureServiceUrl,this.gdbVersion||null)?(s.sessionId=m.TA,await(0,m.ZJ)(this.featureServiceUrl,this.gdbVersion,!0)):s.sessionId=null,s.domainNetworkName=this.telecomDomainNetworkName,s.gdbVersion=this.gdbVersion,s.moment=this.historicMoment;const n=(0,u.Zk)(this.featureServiceUrl,null,this.gdbVersion,!1),o=await t(this.networkServiceUrl,s);return n.resolve({edits:null,addedFeatures:[],updatedFeatures:[],deletedFeatures:[],addedAttachments:[],updatedAttachments:[],deletedAttachments:[],exceededTransferLimit:o.exceededTransferLimit,historicMoment:o.moment,editedFeatures:o.serviceEdits||void 0}),o.circuits}async verify(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const[{verifyCircuits:r},{default:s}]=await Promise.all([Promise.all([i.e(8911),i.e(1512)]).then(i.bind(i,41512)),i.e(691).then(i.bind(i,80691))]),n=s.from({circuits:e,synthesizeGeometries:t,domainNetworkName:this.telecomDomainNetworkName});(0,m.w5)(this.featureServiceUrl,this.gdbVersion||null)?(n.sessionId=m.TA,await(0,m.ZJ)(this.featureServiceUrl,this.gdbVersion,!0)):n.sessionId=null,n.gdbVersion=this.gdbVersion;const o=(0,u.Zk)(this.featureServiceUrl,null,this.gdbVersion,!1),l=await r(this.networkServiceUrl,n);return o.resolve({edits:null,addedFeatures:[],updatedFeatures:[],deletedFeatures:[],addedAttachments:[],updatedAttachments:[],deletedAttachments:[],exceededTransferLimit:l.exceededTransferLimit,historicMoment:l.moment,editedFeatures:l.serviceEdits||void 0}),l.circuits}async queryCircuits(e){const[{queryCircuits:t},{default:r}]=await Promise.all([i.e(2171).then(i.bind(i,74552)),i.e(8708).then(i.bind(i,98708))]),s=Array.isArray(e)?{circuits:e}:e,n=r.from(s);(0,m.w5)(this.featureServiceUrl,this.gdbVersion||null)?n.sessionId=m.TA:n.sessionId=null,n.domainNetworkName=this.telecomDomainNetworkName,n.resultTypes=["circuit"],n.gdbVersion=this.gdbVersion,n.moment=this.historicMoment;const o=await t(this.networkServiceUrl,n);return o.circuits?.forEach(e=>e.circuitManager=this),o.circuits||[]}async queryCircuitNames(e){const[{queryCircuits:t},{default:r}]=await Promise.all([i.e(2171).then(i.bind(i,74552)),i.e(8708).then(i.bind(i,98708))]),s=r.from(e);return(0,m.w5)(this.featureServiceUrl,this.gdbVersion||null)?s.sessionId=m.TA:s.sessionId=null,s.domainNetworkName=this.telecomDomainNetworkName,s.resultTypes=["name"],s.gdbVersion=this.gdbVersion,s.moment=this.historicMoment,(await t(this.networkServiceUrl,s)).circuitNames||[]}_setLayerVersionAndMoment(e){null!=e&&(e.gdbVersion!==this.gdbVersion&&(e.gdbVersion=this.gdbVersion),e.historicMoment!==this.historicMoment&&(e.historicMoment=this.historicMoment))}};(0,r.Cg)([(0,l.MZ)()],b.prototype,"_circuitTable",void 0),(0,r.Cg)([(0,l.MZ)()],b.prototype,"_circuitSectionTable",void 0),(0,r.Cg)([(0,l.MZ)()],b.prototype,"_subcircuitTable",void 0),(0,r.Cg)([(0,l.MZ)({constructOnly:!0})],b.prototype,"telecomDomainNetwork",void 0),(0,r.Cg)([(0,l.MZ)({type:d.default,constructOnly:!0})],b.prototype,"utilityNetwork",void 0),(0,r.Cg)([(0,l.MZ)()],b.prototype,"networkServiceUrl",null),(0,r.Cg)([(0,l.MZ)()],b.prototype,"featureServiceUrl",null),(0,r.Cg)([(0,l.MZ)()],b.prototype,"gdbVersion",null),(0,r.Cg)([(0,l.MZ)()],b.prototype,"historicMoment",null),(0,r.Cg)([(0,l.MZ)()],b.prototype,"telecomDomainNetworkName",null),(0,r.Cg)([(0,l.MZ)()],b.prototype,"circuitTable",null),(0,r.Cg)([(0,l.MZ)()],b.prototype,"circuitSectionTable",null),(0,r.Cg)([(0,l.MZ)()],b.prototype,"subcircuitTable",null),b=(0,r.Cg)([(0,a.$)("esri.networks.CircuitManager")],b);const g=b}}]);
//# sourceMappingURL=7554.c9b50d82.chunk.js.map