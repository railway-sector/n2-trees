"use strict";(self.webpackChunkn2_trees=self.webpackChunkn2_trees||[]).push([[3092],{8141:(t,e,n)=>{n.d(e,{z:()=>i});class i{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;this.minValue=t,this.maxValue=e,this.noDataValue=n}}},46533:(t,e,n)=>{n.d(e,{CW:()=>u,DE:()=>p,S1:()=>m,pH:()=>w});var i=n(81806),l=n(76460),s=n(15941),o=n(50346),r=n(47249),a=n(76797),h=n(80963);const c=()=>l.A.getLogger("esri.views.2d.engine.flow.dataUtils"),f=10;async function u(t,e,n,l){const s=performance.now(),a=p(e,n),h=performance.now(),u=m(e,a,n.width,n.height),d=performance.now(),g=function(t,e){const n=new r.A,i=t.reduce((t,e)=>t+e.vertices.length,0),l=new Float32Array(4*i),s=new Array(t.length);let o=0,a=0;for(const{vertices:r}of t){const t=o;for(const e of r)l[4*o]=e.x,l[4*o+1]=e.y,l[4*o+2]=e.t,l[4*o+3]=e.speed,o++;s[a++]={startVertex:t,numberOfVertices:r.length,totalTime:r[r.length-1].t,timeSeed:e?n.getFloat():0}}return{lineVertices:l,lineDescriptors:s}}(u,!0),x=performance.now(),w="Streamlines"===t?function(t,e){const n=9,{lineVertices:i,lineDescriptors:l}=t;let s=0,o=0;for(const p of l)s+=2*p.numberOfVertices,o+=6*(p.numberOfVertices-1);const r=new Float32Array(s*n),a=new Uint32Array(o);let h=0,c=0;function f(){a[c++]=h-2,a[c++]=h,a[c++]=h-1,a[c++]=h,a[c++]=h+1,a[c++]=h-1}function u(t,e,i,l,s,o,a,c){const f=h*n;let u=0;r[f+u++]=t,r[f+u++]=e,r[f+u++]=1,r[f+u++]=i,r[f+u++]=o,r[f+u++]=a,r[f+u++]=l/2,r[f+u++]=s/2,r[f+u++]=c,h++,r[f+u++]=t,r[f+u++]=e,r[f+u++]=-1,r[f+u++]=i,r[f+u++]=o,r[f+u++]=a,r[f+u++]=-l/2,r[f+u++]=-s/2,r[f+u++]=c,h++}for(const p of l){const{totalTime:t,timeSeed:n}=p;let l=null,s=null,o=null,r=null,a=null,h=null;for(let c=0;c<p.numberOfVertices;c++){const d=i[4*(p.startVertex+c)],g=i[4*(p.startVertex+c)+1],m=i[4*(p.startVertex+c)+2],x=i[4*(p.startVertex+c)+3];let w=null,y=null,k=null,A=null;if(c>0){w=d-l,y=g-s;const i=Math.sqrt(w*w+y*y);if(w/=i,y/=i,c>1){let t=w+a,n=y+h;const i=Math.sqrt(t*t+n*n);t/=i,n/=i;const l=Math.min(1/(t*w+n*y),e);t*=l,n*=l,k=-n,A=t}else k=-y,A=w;null!==k&&null!==A&&(u(l,s,o,k,A,t,n,x),f())}l=d,s=g,o=m,a=w,h=y,r=x}u(l,s,o,-h,a,t,n,r)}return{vertexData:r,indexData:a}}(g,f):function(t){const e=16,n=1,i=2,{lineVertices:l,lineDescriptors:s}=t;let o=0,r=0;for(const F of s){const t=F.numberOfVertices-1;o+=4*t*2,r+=6*t*2}const a=new Float32Array(o*e),h=new Uint32Array(r);let c,f,u,p,d,g,m,x,w,y,k,A,M,v,b=0,U=0;function P(){h[U++]=b-8,h[U++]=b-7,h[U++]=b-6,h[U++]=b-7,h[U++]=b-5,h[U++]=b-6,h[U++]=b-4,h[U++]=b-3,h[U++]=b-2,h[U++]=b-3,h[U++]=b-1,h[U++]=b-2}function I(t,l,s,o,r,h,c,f,u,p,d,g,m,x){const w=b*e;let y=0;for(const e of[n,i])for(const n of[1,2,3,4])a[w+y++]=t,a[w+y++]=l,a[w+y++]=s,a[w+y++]=o,a[w+y++]=c,a[w+y++]=f,a[w+y++]=u,a[w+y++]=p,a[w+y++]=e,a[w+y++]=n,a[w+y++]=m,a[w+y++]=x,a[w+y++]=r/2,a[w+y++]=h/2,a[w+y++]=d/2,a[w+y++]=g/2,b++}function T(t,e){let n=w+k,i=y+A;const l=Math.sqrt(n*n+i*i);n/=l,i/=l;const s=w*n+y*i;n/=s,i/=s;let o=k+M,r=A+v;const a=Math.sqrt(o*o+r*r);o/=a,r/=a;const h=k*o+A*r;o/=h,r/=h,I(c,f,u,p,-i,n,d,g,m,x,-r,o,t,e),P()}function B(t,e,n,i,l,s){if(w=k,y=A,k=M,A=v,null==w&&null==y&&(w=k,y=A),null!=d&&null!=g){M=t-d,v=e-g;const n=Math.sqrt(M*M+v*v);M/=n,v/=n}null!=w&&null!=y&&T(l,s),c=d,f=g,u=m,p=x,d=t,g=e,m=n,x=i}function C(t,e){w=k,y=A,k=M,A=v,null==w&&null==y&&(w=k,y=A),null!=w&&null!=y&&T(t,e)}for(const F of s){c=null,f=null,u=null,p=null,d=null,g=null,m=null,x=null,w=null,y=null,k=null,A=null,M=null,v=null;const{totalTime:t,timeSeed:e}=F;for(let n=0;n<F.numberOfVertices;n++)B(l[4*(F.startVertex+n)],l[4*(F.startVertex+n)+1],l[4*(F.startVertex+n)+2],l[4*(F.startVertex+n)+3],t,e);C(t,e)}return{vertexData:a,indexData:h}}(g),y=performance.now();return(0,i.A)("esri-2d-profiler")&&(c().info("I.1","_createFlowFieldFromData (ms)",Math.round(h-s)),c().info("I.2","_getStreamlines (ms)",Math.round(d-h)),c().info("I.3","createAnimatedLinesData (ms)",Math.round(x-d)),c().info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(y-x)),c().info("I.5","createFlowMesh (ms)",Math.round(y-s)),c().info("I.6","Mesh size (bytes)",w.vertexData.buffer.byteLength+w.indexData.buffer.byteLength)),await Promise.resolve(),(0,o.Te)(l),w}function p(t,e){const n=function(t,e,n,i){if(0===i)return t;const l=Math.round(3*i),s=new Array(2*l+1);let o=0;for(let h=-l;h<=l;h++){const t=Math.exp(-h*h/(i*i));s[h+l]=t,o+=t}for(let h=-l;h<=l;h++)s[h+l]/=o;const r=new Float32Array(t.length);for(let h=0;h<n;h++)for(let n=0;n<e;n++){let i=0,o=0;for(let r=-l;r<=l;r++){if(n+r<0||n+r>=e)continue;const a=s[r+l];i+=a*t[2*(h*e+(n+r))],o+=a*t[2*(h*e+(n+r))+1]}r[2*(h*e+n)]=i,r[2*(h*e+n)+1]=o}const a=new Float32Array(t.length);for(let h=0;h<e;h++)for(let t=0;t<n;t++){let i=0,o=0;for(let a=-l;a<=l;a++){if(t+a<0||t+a>=n)continue;const c=s[a+l];i+=c*r[2*((t+a)*e+h)],o+=c*r[2*((t+a)*e+h)+1]}a[2*(t*e+h)]=i,a[2*(t*e+h)+1]=o}return a}(e.data,e.width,e.height,t.smoothing);return t.interpolate?(t,i)=>{const l=Math.floor(t),s=Math.floor(i);if(l<0||l>=e.width)return[0,0];if(s<0||s>=e.height)return[0,0];const o=t-l,r=i-s,a=l,h=s,c=l<e.width-1?l+1:l,f=s<e.height-1?s+1:s,u=n[2*(h*e.width+a)],p=n[2*(h*e.width+c)],d=n[2*(f*e.width+a)],g=n[2*(f*e.width+c)],m=n[2*(h*e.width+a)+1],x=n[2*(h*e.width+c)+1];return[(u*(1-r)+d*r)*(1-o)+(p*(1-r)+g*r)*o,(m*(1-r)+n[2*(f*e.width+a)+1]*r)*(1-o)+(x*(1-r)+n[2*(f*e.width+c)+1]*r)*o]}:(t,i)=>{const l=Math.round(t),s=Math.round(i);return l<0||l>=e.width||s<0||s>=e.height?[0,0]:[n[2*(s*e.width+l)],n[2*(s*e.width+l)+1]]}}function d(t,e,n,i,l,o,r,a){const h=[],{raster:c,width:f,height:u,resolutionFactor:p}=a;let d=i,g=l,m=0,[x,w]=n(d,g);x*=e.velocityScale,w*=e.velocityScale;const y=Math.sqrt(x*x+w*w);let k,A;h.push({x:d,y:g,t:m,speed:y});for(let M=0;M<e.verticesPerLine;M++){let[i,l]=n(d,g);i*=e.velocityScale,l*=e.velocityScale;const a=Math.sqrt(i*i+l*l);if(a<e.minSpeedThreshold)return h;const x=t*i/a,w=t*l/a;if(d+=x*e.segmentLength,g+=w*e.segmentLength,e.wrapAround&&(d=(0,s.OS)(d,o[0])),m+=t*e.segmentLength/a,Math.acos(x*k+w*A)>e.maxTurnAngle)return h;if(e.collisions){let t=Math.round(d*p);const n=Math.round(g*p);if(e.wrapAround&&(t=(0,s.OS)(t,f)),t<0||t>f-1||n<0||n>u-1)return h;const i=c[n*f+t];if(-1!==i&&i!==r)return h;c[n*f+t]=r}h.push({x:d,y:g,t:m,speed:a}),k=x,A=w}return h}function g(t,e,n,i,l,s,o,r){const a=Math.round((.2+.6*o.getFloat())*t.verticesPerLine),h=t.verticesPerLine-a,c=d(-1,{...t,verticesPerLine:h},e,n,i,l,s,r),f=d(1,{...t,verticesPerLine:a},e,n,i,l,s,r),u=c.reverse();return u.splice(-1,1),u.concat(f)}function m(t,e,n,i){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{positions:[]};if(t.density<=0)return[];const{positions:s}=l,o=[],a=new r.A,h=1/Math.max(t.lineCollisionWidth,1),c=Math.round(n*h),f=Math.round(i*h),u=new Int32Array(c*f);for(let r=0;r<u.length;r++)u[r]=-1;const p={raster:u,width:c,height:f,resolutionFactor:h},m={},x=t.lineSpacing/Math.sqrt(t.density),w=Math.floor(i/x),y=Math.floor(n/x);for(let r=0;r<w;r++){const t=r*x;for(let e=0;e<y;e++){const n=e*x;m[`${e}-${r}`]={x:n,y:t,positions:[]}}}for(const{x:r,y:d}of s){const t=m[`${Math.floor(r/x)}-${Math.floor(d/x)}`];t&&t.positions.push([r,d])}const k=[];for(const r in m){const t=m[r];if(0===t.positions.length)k.push({x:t.x+x/2,y:t.y+x/2,sort:.66+.33*a.getFloat(),stage:0});else{const[e]=t.positions.splice(0,1);k.push({x:e[0],y:e[1],sort:.33*a.getFloat(),stage:1});for(const[n,i]of t.positions)k.push({x:n,y:i,sort:.33+.33*a.getFloat(),stage:2})}}k.sort((t,e)=>t.sort-e.sort);for(const{x:r,y:A,stage:M}of k){const l=t.onlyForwardTracing?d(1,t,e,r,A,[n,i],o.length,p):g(t,e,r,A,[n,i],o.length,a,p);l.length<2||o.push({stage:M,vertices:l})}return o}function x(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e.width,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.height,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const r=e.pixels,a=n*i,h=new Float32Array(2*a),c=e.width,f=(t,e)=>t+l+(e+o)*c,u=(t,e)=>t+e*n;let p;if(null!=e.mask)if(n!==e.width||i!==e.height||0!==l||0!==o){p=new Uint8Array(2*a);const t=e.mask;for(let e=0;e<i;++e)for(let i=0;i<n;++i){const n=f(i,e),l=u(i,e);p[2*l]=t[2*n],p[2*l+1]=t[2*n+1]}}else p=e.mask;else p=new Uint8Array(2*a),p.fill(255);if("vector-uv"===t)for(let s=0;s<i;++s)for(let t=0;t<n;++t){const e=f(t,s),n=u(t,s);h[2*n]=r[0][e],h[2*n+1]=-r[1][e]}else if("vector-magdir"===t){const{cos:t,sin:e}=Math;for(let l=0;l<i;++l)for(let i=0;i<n;++i){const n=f(i,l),o=u(i,l),a=r[0][n],c=(0,s.kU)(r[1][n]),p=t(c-Math.PI/2),d=e(c-Math.PI/2);h[2*o]=p*a,h[2*o+1]=d*a}}return{data:h,mask:p,width:n,height:i}}async function w(t,e,n,l,s,o){const r=performance.now(),f=(0,h.Vp)(e.spatialReference);if(!f){const a=await y(t,e,n,l,s,o);return(0,i.A)("esri-2d-profiler")&&c().info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-r)),(0,i.A)("esri-2d-profiler")&&c().info("I.9","Number of parts",1),a}const[u,p]=f.valid,d=p-u,g=Math.ceil(e.width/d),m=e.width/g,x=Math.round(n/g);let w=e.xmin;const k=[],A=performance.now();for(let i=0;i<g;i++){const n=new a.A({xmin:w,xmax:w+m,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});k.push(y(t,n,x,l,s,o)),w+=m}const M=await Promise.all(k);if((0,i.A)("esri-2d-profiler")&&c().info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-A)),(0,i.A)("esri-2d-profiler")&&c().info("I.9","Number of parts",M.length),1===M.length)return(0,i.A)("esri-2d-profiler")&&c().info("I.10","loadImagery, general exit without stitching back (ms)",Math.round(performance.now()-r)),M[0];const v={data:new Float32Array(n*l*2),mask:new Uint8Array(n*l),width:n,height:l};let b=0;for(const i of M){for(let t=0;t<i.height;t++)for(let e=0;e<i.width;e++)b+e>=n||(v.data[2*(t*n+b+e)]=i.data[2*(t*i.width+e)],v.data[2*(t*n+b+e)+1]=i.data[2*(t*i.width+e)+1],v.mask[t*n+b+e]=i.mask[t*i.width+e]);b+=i.width}return(0,i.A)("esri-2d-profiler")&&c().info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-r)),v}async function y(t,e,n,i,l,s){const o={requestProjectedLocalDirections:!0,signal:s};if(null!=l&&(o.timeExtent=l),"imagery"===t.type){await t.load({signal:s});const l=await t.internalFetchImage(e,n,i,o);return null==l?.pixelData?.pixelBlock?{data:new Float32Array(n*i*2),mask:new Uint8Array(n*i),width:n,height:i}:x(t.rasterInfo.dataType,l.pixelData.pixelBlock)}await t.load({signal:s});const r=await t.fetchPixels(e,n,i,o);return null==r?.pixelBlock?{data:new Float32Array(n*i*2),mask:new Uint8Array(n*i),width:n,height:i}:x(t.serviceRasterInfo.dataType,r.pixelBlock)}},52494:(t,e,n)=>{n.d(e,{$Q:()=>S,$i:()=>E,AB:()=>a,Ew:()=>x,Hx:()=>g,J$:()=>_,L:()=>N,LY:()=>b,QF:()=>R,UK:()=>p,Wt:()=>v,Wy:()=>h,XU:()=>M,_F:()=>d,bL:()=>m,dK:()=>A,eH:()=>u,et:()=>o,lD:()=>D,qL:()=>f,z$:()=>I,z7:()=>P,zg:()=>c});var i=n(15941),l=n(66486),s=n(52297);const o=9,r="PixelID";function a(t){return null!=t&&t.pixels?.length>0}function h(t){if(!t?.length||t.some(t=>!a(t)))return null;if(1===t.length)return t[0]?.clone()??null;const e=t,{width:n,height:i,pixelType:s}=e[0];if(e.some(t=>t.width!==n||t.height!==i))return null;const o=e.map(t=>{let{mask:e}=t;return e}).filter(t=>null!=t);let r=null;o.length&&(r=new Uint8Array(n*i),r.set(o[0]),o.length>1&&k(o.slice(1),r));const h=[];e.forEach(t=>{let{pixels:e}=t;return h.push(...e)});const c=e.map(t=>{let{statistics:e}=t;return e}).filter(t=>t?.length),f=[];return c.forEach(t=>f.push(...t)),new l.A({pixelType:s,width:n,height:i,mask:r,pixels:h,statistics:f.length?f:null})}function c(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const n=e.sort((t,e)=>t[0]-e[0]),i=n[0][0]<0?n[0][0]:0,l=Math.max(256,n[n.length-1][0]-i+1),s=new Uint8Array(4*l),o=[],r=5===n[0].length;if(l>65536)return n.forEach(t=>{o[t[0]-i]=r?t.slice(1):t.slice(1).concat([255])}),{indexed2DColormap:o,offset:i,alphaSpecified:r};if(t.fillUnspecified){let t=n[0];for(let e=t[0]-i,o=0;e<l;e++)s[4*e]=t[1],s[4*e+1]=t[2],s[4*e+2]=t[3],s[4*e+3]=r?t[4]:255,e===t[0]-i&&(t=o===n.length-1?t:n[++o])}else for(let a=0;a<n.length;a++){const t=n[a],e=4*(t[0]-i);s[e]=t[1],s[e+1]=t[2],s[e+2]=t[3],s[e+3]=r?t[4]:255}return{indexedColormap:s,offset:i,alphaSpecified:r}}function f(t,e){if(!a(t))return t;if(!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const n=t.clone(),i=n.pixels;let l=n.mask;const s=n.width*n.height;if(1!==i.length)return t;const{indexedColormap:o,indexed2DColormap:r,offset:h,alphaSpecified:c}=e,f=i[0],u=new Uint8Array(f.length),p=new Uint8Array(f.length),d=new Uint8Array(f.length);let g,m=0;if(o){const t=o.length-1;if(null!=l)for(let e=0;e<s;e++)l[e]&&(m=4*(f[e]-h),m<h||m>t?l[e]=0:(u[e]=o[m],p[e]=o[m+1],d[e]=o[m+2],l[e]=o[m+3]));else{l=new Uint8Array(s);for(let e=0;e<s;e++)m=4*(f[e]-h),m<h||m>t?l[e]=0:(u[e]=o[m],p[e]=o[m+1],d[e]=o[m+2],l[e]=o[m+3]);n.mask=l}}else if(r)if(null!=l)for(let a=0;a<s;a++)l[a]&&(g=r[f[a]],u[a]=g[0],p[a]=g[1],d[a]=g[2],l[a]=g[3]);else{l=new Uint8Array(s);for(let t=0;t<s;t++)g=r[f[t]],u[t]=g[0],p[t]=g[1],d[t]=g[2],l[t]=g[3];n.mask=l}return n.pixels=[u,p,d],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=c,n}function u(t,e){if(!a(t))return null;const{pixels:n,mask:i}=t,s=n.length;let o=e.lut;const{offset:r}=e;o&&1===o[0].length&&(o=n.map(()=>o));const h=[],c=e.outputPixelType||"u8";for(let l=0;l<s;l++){const t=p(n[l],i,o[l],r||0,c);h.push(t)}const f=new l.A({width:t.width,height:t.height,pixels:h,mask:i,pixelType:c});return f.updateStatistics(),f}function p(t,e,n,i,s){const o=t.length,r=l.A.createEmptyBand(s,o);if(e)for(let l=0;l<o;l++)e[l]&&(r[l]=n[t[l]-i]);else for(let l=0;l<o;l++)r[l]=n[t[l]-i];return r}function d(t,e,n){if(!a(t))return;const{width:i,height:l,pixels:s,mask:o}=t,r=i*l,h=new Uint8Array(r);for(let a=1;a<=n.length;a++){const{bandId:t,ranges:e}=n[a-1],i=s[t];if(!i)continue;const l=1===e.length,[c,f]=e[0];for(let n=0;n<r;n++)if(!o||o[n]){const t=i[n];if(l)t>=c&&t<=f&&(h[n]=a);else for(let i=0;i<e.length;i++){const[l,s]=e[i];if(t>=l&&t<=s){h[n]=a;break}}}}const{pixels:c}=e;1===c.length&&(c[1]=c[0].slice(),c[2]=c[0].slice());const f=n.map(t=>t.color);if(e.mask){const t=e.mask;for(let e=0;e<r;e++)if(t[e]){t[e]=255;const n=h[e];if(n){const i=f[n-1];c[0][e]=i[0],c[1][e]=i[1],c[2][e]=i[2],t[e]=i[3]}}}else{const t=new Uint8Array(r).fill(255);for(let e=0;e<r;e++){const n=h[e];if(n){const i=f[n-1];c[0][e]=i[0],c[1][e]=i[1],c[2][e]=i[2],t[e]=i[3]}}e.mask=t}e.maskIsAlpha=!0}function g(t,e){if(!a(t))return null;const n=t.clone(),{pixels:i}=n,l=n.width*n.height,s=e.length,o=Math.floor(s/2),r=e[Math.floor(o)],h=i[0],c=new Uint8Array(l),f=new Uint8Array(l),u=new Uint8Array(l);let p=n.mask;const d=4===e[0].mappedColor.length;p||(p=new Uint8Array(l),p.fill(d?255:1),n.mask=p);for(let a=0;a<l;a++)if(p[a]){const t=h[a];let n=!1,i=o,l=r,d=0,g=s-1;for(;g-d>1;){if(t===l.value){n=!0;break}t>l.value?d=i:g=i,i=Math.floor((d+g)/2),l=e[Math.floor(i)]}n||(t===e[d].value?(l=e[d],n=!0):t===e[g].value?(l=e[g],n=!0):t<e[d].value?n=!1:t>e[d].value&&(t<e[g].value?(l=e[d],n=!0):g===s-1?n=!1:(l=e[g],n=!0))),n?(c[a]=l.mappedColor[0],f[a]=l.mappedColor[1],u[a]=l.mappedColor[2],p[a]=l.mappedColor[3]):c[a]=f[a]=u[a]=p[a]=0}return n.pixels=[c,f,u],n.mask=p,n.pixelType="u8",n.maskIsAlpha=d,n}function m(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const l=1e-5,s=new Float32Array(3*o),r=e.length;for(let a=0;a<o;a++)s[3*a]=t[2*a]??i.pq-1,s[3*a+1]=t[2*a+1]??i.pq,s[3*a+2]=e[a]??0,a<r&&(a>0&&(s[3*a]-=l),t[2*a+1]!==t[2*a]&&(a<r-1||!n)&&(s[3*a+1]-=l));return s}function x(t,e){if(!a(t))return null;const{width:n,height:i}=t,{inputRanges:o,outputValues:r,outputPixelType:h,noDataRanges:c,allowUnmatched:f,replacementValue:u,isLastInputRangeInclusive:p}=e,d=t.pixels[0],g=l.A.createEmptyBand(h,d.length),m=t.mask,x=new Uint8Array(n*i);m?x.set(m):x.fill(255);const w=t.pixelType.startsWith("f")?1e-6:0,y=o.map(t=>t-w);y[0]=o[0],y[y.length-1]=o[o.length-1]+(p?1e-6:0);const k=o.length/2,[A,M]=(0,s.hP)(h);for(let l=0;l<i;l++)for(let t=0;t<n;t++){const e=l*n+t;if(x[e]){const t=d[e];let n=!1;for(let i=k-1;i>=0;i--)if(t===o[2*i]||t>y[2*i]&&t<y[2*i+1]){g[e]=r[i],n=!0;break}n||(f?g[e]=t>M?M:t<A?A:u??t:x[e]=0)}}const v=c?.length;if(v)for(let l=0;l<i;l++)for(let t=0;t<n;t++){const e=l*n+t;if(!m||m[e]){const t=d[e];for(let n=0;n<v;n+=2)if(t>=c[n]&&t<=c[n+1]){g[e]=0,x[e]=0;break}}}return new l.A({width:n,height:i,pixelType:h,pixels:[g],mask:x})}function w(t,e,n,i){const l=null!=n&&n.length>=2?new Set(n):null,s=1===n?.length?n[0]:null,o=!!e?.length;for(let r=0;r<t.length;r++)if(i[r]){const n=t[r];if(o){let t=!1;for(let i=0;i<e.length;i+=2)if(n>=e[i]&&n<=e[i+1]){t=!0;break}t||(i[r]=0)}i[r]&&(n===s||l?.has(n))&&(i[r]=0)}}function y(t,e){const n=t[0].length;for(let i=0;i<n;i++)if(e[i]){let n=!1;for(let e=0;e<t.length;e++)if(t[e][i]){n=!0;break}n||(e[i]=0)}}function k(t,e){const n=t[0].length;for(let i=0;i<n;i++)if(e[i]){let n=!1;for(let e=0;e<t.length;e++)if(0===t[e][i]){n=!0;break}n&&(e[i]=0)}}function A(t,e){if(!a(t))return null;const{width:n,height:i,pixels:s}=t,o=n*i,r=new Uint8Array(o);t.mask?r.set(t.mask):r.fill(255);const h=s.length,{includedRanges:c,noDataValues:f,outputPixelType:u,matchAll:d,lookups:g}=e;if(g){const t=[];for(let e=0;e<h;e++){const n=g[e],i=p(s[e],r,n.lut,n.offset||0,"u8");t.push(i)}1===t.length?r.set(t[0]):d?y(t,r):k(t,r)}else if(d){const t=[];for(let e=0;e<h;e++){const n=new Uint8Array(o);n.set(r),w(s[e],c?.slice(2*e,2*e+2),f?.[e],n),t.push(n)}1===t.length?r.set(t[0]):y(t,r)}else for(let l=0;l<h;l++)w(s[l],c?.slice(2*l,2*l+2),f?.[l],r);return new l.A({width:n,height:i,pixelType:u,pixels:s,mask:r})}function M(t){const{srcPixelType:e,inputRanges:n,outputValues:i,allowUnmatched:o,noDataRanges:r,isLastInputRangeInclusive:a,outputPixelType:h}=t;if("u8"!==e&&"s8"!==e&&"u16"!==e&&"s16"!==e)return null;const c=e.includes("16")?65536:256,f=e.includes("s")?-c/2:0,u=l.A.createEmptyBand(h,c),p=new Uint8Array(c);o&&p.fill(255);const[d,g]=(0,s.hP)(h);if(n?.length&&i?.length){const t=1e-6,e=n.map(e=>e-t);e[0]=n[0],a&&(e[e.length-1]=n[n.length-1]);for(let l=0;l<e.length;l++){const t=i[l]>g?g:i[l]<d?d:i[l],s=Math.ceil(e[2*l]-f),o=n[2*l+1]===n[2*l]?s:Math.floor(e[2*l+1]-f);for(let e=s;e<=o;e++)u[e]=t,p[e]=255}}if(r?.length)for(let l=0;l<r.length;l++){const t=Math.ceil(r[2*l]-f),e=Math.floor(r[2*l+1]-f);for(let n=t;n<=e;n++)p[n]=0}return{lut:u,offset:f,mask:p}}function v(t,e,n){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const i=t.includes("16")?65536:256,l=t.includes("s")?-i/2:0,s=new Uint8Array(i);if(e)for(let o=0;o<e.length;o++){const t=Math.ceil(e[2*o]-l),n=Math.floor(e[2*o+1]-l);for(let e=t;e<=n;e++)s[e]=255}else s.fill(255);if(n)for(let o=0;o<n.length;o++)s[n[o]-l]=0;return{lut:s,offset:l}}function b(t,e){if(!t||0===t.length)return null;const n=t.find(t=>t.pixelBlock);if(null==n?.pixelBlock)return null;const i=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,l=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,s=.01*Math.min(i,l),o=t.sort((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>s?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>s?t.extent.xmin-e.extent.xmin:0),r=Math.min.apply(null,o.map(t=>t.extent.xmin)),a=Math.min.apply(null,o.map(t=>t.extent.ymin)),h=Math.max.apply(null,o.map(t=>t.extent.xmax)),c=Math.max.apply(null,o.map(t=>t.extent.ymax)),f={x:Math.round((e.xmin-r)/i),y:Math.round((c-e.ymax)/l)},u={width:Math.round((h-r)/i),height:Math.round((c-a)/l)},p={width:Math.round((e.xmax-e.xmin)/i),height:Math.round((e.ymax-e.ymin)/l)};return Math.round(u.width/n.pixelBlock.width)*Math.round(u.height/n.pixelBlock.height)!==o.length||f.x<0||f.y<0||u.width<p.width||u.height<p.height?null:{extent:e,pixelBlock:P(o.map(t=>t.pixelBlock),u,{clipOffset:f,clipSize:p})}}function U(t,e,n,i,l,s){const{width:o,height:r}=n.block,{x:a,y:h}=n.offset,{width:c,height:f}=n.mosaic,u=function(t,e,n,i,l,s,o,r){return{xmin:l<=n*t?0:l<n*t+t?l-n*t:t,ymin:s<=i*e?0:s<i*e+e?s-i*e:e,xmax:l+o<=n*t?0:l+o<n*t+t?l+o-n*t:t,ymax:s+r<=i*e?0:s+r<i*e+e?s+r-i*e:e}}(o,r,i,l,a,h,c,f);let p=0,d=0;if(s){const t=s.hasGCSSShiftTransform?360:s.halfWorldWidth??0,e=o*s.resolutionX,n=s.startX+i*e;n<t&&n+e>t?d=s.rightPadding:n>=t&&(p=s.leftMargin-s.rightPadding,d=0)}if(u.xmax-=d,"number"!=typeof e)for(let g=u.ymin;g<u.ymax;g++){const n=(l*r+g-h)*c+(i*o-a)+p,s=g*o;for(let i=u.xmin;i<u.xmax;i++)t[n+i]=e[s+i]}else for(let g=u.ymin;g<u.ymax;g++){const n=(l*r+g-h)*c+(i*o-a)+p;for(let i=u.xmin;i<u.xmax;i++)t[n+i]=e}}function P(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const{clipOffset:i,clipSize:s,alignmentInfo:o,blockWidths:r}=n;if(r)return function(t,e,n){const i=t.find(t=>null!=t);if(null==i)return null;const s=t.some(t=>null==t||!!t.mask),{width:o,height:r}=e,h=s?new Uint8Array(o*r):null,{blockWidths:c}=n,f=[],u=i.getPlaneCount(),p=l.A.getPixelArrayConstructor(i.pixelType);if(s)for(let l=0,w=0;l<t.length;w+=c[l],l++){const e=t[l];if(!a(e))continue;const n=e.mask;for(let t=0;t<r;t++)for(let i=0;i<c[l];i++)h[t*o+i+w]=null==n?255:n[t*e.width+i]}const d=t.some(t=>t?.bandMasks&&t.bandMasks.length>1),g=d?[]:void 0,m=o*r;for(let l=0;l<u;l++){const e=new p(m),n=d?new Uint8Array(m):void 0;for(let i=0,s=0;i<t.length;s+=c[i],i++){const h=t[i];if(!a(h))continue;const f=h.pixels[l];if(null!=f){for(let t=0;t<r;t++)for(let n=0;n<c[i];n++)e[t*o+n+s]=f[t*h.width+n];if(n){const t=h.bandMasks?.[l]??h.mask;for(let e=0;e<r;e++)for(let l=0;l<c[i];l++)n[e*o+l+s]=t?t[e*h.width+l]:255}}}f.push(e),g&&n&&g.push(n)}const x=new l.A({width:o,height:r,mask:h,bandMasks:g,pixels:f,pixelType:i.pixelType});return x.updateStatistics(),x}(t,e,{blockWidths:r});const h=t.find(t=>a(t));if(null==h)return null;const c=s?s.width:e.width,f=s?s.height:e.height,u=h.width,p=h.height,d=e.width/u,g=e.height/p,m={offset:i||{x:0,y:0},mosaic:s||e,block:{width:u,height:p}},x=h.pixelType,w=l.A.getPixelArrayConstructor(x),y=h.pixels.length,k=[];let A,M;for(let l=0;l<y;l++){M=new w(c*f);for(let e=0;e<g;e++)for(let n=0;n<d;n++){const i=t[e*d+n];a(i)&&(A=i.pixels[l],U(M,A,m,n,e,o))}k.push(M)}const v=t.some(t=>null==t||null!=t.mask&&t.mask.length>0),b=t.some(t=>t?.bandMasks&&t.bandMasks.length>1),P=v?new Uint8Array(c*f):void 0,I=b?[]:void 0;if(P){for(let e=0;e<g;e++)for(let n=0;n<d;n++){const i=t[e*d+n],l=null!=i?i.mask:null;U(P,null!=l?l:i?255:0,m,n,e,o)}if(I)for(let e=0;e<y;e++){const n=new Uint8Array(c*f);for(let i=0;i<g;i++)for(let l=0;l<d;l++){const s=t[i*d+l],r=s?.bandMasks?.[e]??s?.mask;U(n,null!=r?r:s?255:0,m,l,i,o)}I.push(n)}}const T=new l.A({width:c,height:f,pixels:k,pixelType:x,bandMasks:I,mask:P});return T.updateStatistics(),T}function I(t,e,n){if(!a(t))return null;const{width:i,height:l}=t,s=e.x,o=e.y,r=n.width+s,h=n.height+o;if(s<0||o<0||r>i||h>l)return t;if(0===s&&0===o&&r===i&&h===l)return t;t.mask||(t.mask=new Uint8Array(i*l));const c=t.mask;for(let a=0;a<l;a++){const t=a*i;for(let e=0;e<i;e++)c[t+e]=a<o||a>=h||e<s||e>=r?0:1}return t.updateStatistics(),t}function T(t){if(!a(t))return null;const e=t.clone(),{width:n,height:i,pixels:l}=t,s=l[0],o=e.pixels[0],r=t.mask;for(let a=2;a<i-1;a++){const t=new Map;for(let i=a-2;i<a+2;i++)for(let e=0;e<4;e++){const l=i*n+e;F(t,s[l],r?r[l]:1)}o[a*n]=B(t),o[a*n+1]=o[a*n+2]=o[a*n];let e=3;for(;e<n-1;e++){let i=(a-2)*n+e+1;F(t,s[i],r?r[i]:1),i=(a-1)*n+e+1,F(t,s[i],r?r[i]:1),i=a*n+e+1,F(t,s[i],r?r[i]:1),i=(a+1)*n+e+1,F(t,s[i],r?r[i]:1),i=(a-2)*n+e-3,C(t,s[i],r?r[i]:1),i=(a-1)*n+e-3,C(t,s[i],r?r[i]:1),i=a*n+e-3,C(t,s[i],r?r[i]:1),i=(a+1)*n+e-3,C(t,s[i],r?r[i]:1),o[a*n+e]=B(t)}o[a*n+e+1]=o[a*n+e]}for(let a=0;a<n;a++)o[a]=o[n+a]=o[2*n+a],o[(i-1)*n+a]=o[(i-2)*n+a];return e.updateStatistics(),e}function B(t){if(0===t.size)return 0;let e=0,n=-1,i=0;const l=t.keys();let s=l.next();for(;!s.done;)i=t.get(s.value),i>e&&(n=s.value,e=i),s=l.next();return n}function C(t,e,n){if(0===n)return;const i=t.get(e);1===i?t.delete(e):t.set(e,i-1)}function F(t,e,n){0!==n&&t.set(e,t.has(e)?t.get(e)+1:1)}function S(t,e,n){let{x:i,y:s}=e;const{width:o,height:r}=n;if(0===i&&0===s&&r===t.height&&o===t.width)return t;const{width:h,height:c}=t,f=Math.max(0,s),u=Math.max(0,i),p=Math.min(i+o,h),d=Math.min(s+r,c);if(p<0||d<0||!a(t))return null;i=Math.max(0,-i),s=Math.max(0,-s);const{pixels:g}=t,m=o*r,x=g.length,w=[];for(let a=0;a<x;a++){const e=g[a],n=l.A.createEmptyBand(t.pixelType,m);for(let t=f;t<d;t++){const l=t*h;let r=(t+s-f)*o+i;for(let t=u;t<p;t++)n[r++]=e[l+t]}w.push(n)}const y=new Uint8Array(m),k=t.mask;for(let l=f;l<d;l++){const t=l*h;let e=(l+s-f)*o+i;for(let n=u;n<p;n++)y[e++]=k?k[t+n]:1}const A=new l.A({width:n.width,height:n.height,pixelType:t.pixelType,pixels:w,mask:y});return A.updateStatistics(),A}function V(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(!a(t))return null;const{pixels:n,width:i,height:s,mask:o,pixelType:r}=t,h=[],c=Math.round(i/2),f=Math.round(s/2),u=s-1,p=i-1;for(let a=0;a<n.length;a++){const t=n[a],o=l.A.createEmptyBand(r,c*f);let d=0;for(let n=0;n<s;n+=2)for(let l=0;l<i;l+=2){const s=t[n*i+l];if(e){const e=l===p?s:t[n*i+l+1],r=n===u?s:t[n*i+l+i],a=l===p?r:n===u?e:t[n*i+l+i+1];o[d++]=(s+e+r+a)/4}else o[d++]=s}h.push(o)}let d=null;if(null!=o){d=new Uint8Array(c*f);let t=0;for(let n=0;n<s;n+=2)for(let l=0;l<i;l+=2){const s=o[n*i+l];if(e){const e=l===p?s:o[n*i+l+1],r=n===u?s:o[n*i+l+i],a=l===p?r:n===u?e:o[n*i+l+i+1];d[t++]=s*e*r*a?1:0}else d[t++]=s}}return new l.A({width:c,height:f,pixelType:r,pixels:h,mask:d})}function D(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];if(!a(t))return null;const{width:l,height:s}=e;let{width:o,height:r}=t;const h=new Map,c={x:0,y:0},f=1+n;let u=t;for(let a=0;a<f;a++){const t=Math.ceil(o/l),n=Math.ceil(r/s);for(let i=0;i<n;i++){c.y=i*s;for(let n=0;n<t;n++){c.x=n*l;const t=S(u,c,e);h.set(`${a}/${i}/${n}`,t)}}a<f-1&&(u=V(u,i)),o=Math.round(o/2),r=Math.round(r/2)}return h}function _(t){const{pixelBlock:e,tileSize:n,level:i,row:l,col:s,useBilinear:o}=t;if(!a(e))return null;const{width:r,height:h}=n,c=2**i,f=c*r,u=c*h;let p=S(e,{y:l*u,x:s*f},{width:f,height:u});if(!p)return null;for(let a=i;a>0;a--)p=V(p,o);return p}function L(t,e,n,i){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;const{width:s,height:o}=t,{width:r,height:a}=e,h=i.cols,c=i.rows,f=Math.ceil(r/h-.1/h),u=Math.ceil(a/c-.1/c);let p,d,g,m,x,w,y;const k=f*h,A=k*u*c,M=new Float32Array(A),v=new Float32Array(A),b=new Uint32Array(A),U=new Uint32Array(A);let P,I,T=0;for(let B=0;B<u;B++)for(let t=0;t<f;t++){p=12*(B*f+t),d=n[p],g=n[p+1],m=n[p+2],x=n[p+3],w=n[p+4],y=n[p+5];for(let e=0;e<c;e++){T=(B*c+e)*k+t*h,I=(e+.5)/c;for(let t=0;t<e;t++)P=(t+.5)/h,M[T+t]=(d*P+g*I+m)*s+l,v[T+t]=(x*P+w*I+y)*o+l,b[T+t]=Math.floor(M[T+t]),U[T+t]=Math.floor(v[T+t])}p+=6,d=n[p],g=n[p+1],m=n[p+2],x=n[p+3],w=n[p+4],y=n[p+5];for(let e=0;e<c;e++){T=(B*c+e)*k+t*h,I=(e+.5)/c;for(let t=e;t<h;t++)P=(t+.5)/h,M[T+t]=(d*P+g*I+m)*s+l,v[T+t]=(x*P+w*I+y)*o+l,b[T+t]=Math.floor(M[T+t]),U[T+t]=Math.floor(v[T+t])}}return{offsets_x:M,offsets_y:v,offsets_xi:b,offsets_yi:U,gridWidth:k}}function R(t,e){const{coefficients:n,spacing:i}=e,{offsets_x:l,offsets_y:s,gridWidth:o}=L(t,t,n,{rows:i[0],cols:i[1]}),{width:r,height:a}=t,h=new Float32Array(r*a),c=180/Math.PI;for(let f=0;f<a;f++)for(let t=0;t<r;t++){const e=f*o+t,n=0===f?e:e-o,i=f===a-1?e:e+o,u=l[n]-l[i],p=s[i]-s[n];if(isNaN(u)||isNaN(p))h[f*r+t]=90;else{let e=Math.atan2(p,u)*c;e=(360+e)%360,h[f*r+t]=e}}return h}function E(t,e,n,i){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"nearest";if(!a(t))return null;"majority"===s&&(t=T(t));const{pixels:o,mask:r,bandMasks:h,pixelType:c}=t,f=t.width,u=t.height,p=l.A.getPixelArrayConstructor(c),d=o.length,{width:g,height:m}=e;let x=!1;for(let l=0;l<n.length;l+=3)-1===n[l]&&-1===n[l+1]&&-1===n[l+2]&&(x=!0);const{offsets_x:w,offsets_y:y,offsets_xi:k,offsets_yi:A,gridWidth:M}=L({width:f,height:u},e,n,i,"majority"===s?.5:0);let v;const b=(t,e,n,i)=>{const l=t instanceof Float32Array||t instanceof Float64Array?0:.5;for(let s=0;s<m;s++){v=s*M;for(let o=0;o<g;o++){if(w[v]<0||y[v]<0)t[s*g+o]=0;else if(i)t[s*g+o]=e[k[v]+A[v]*f];else{const i=Math.floor(w[v]),r=Math.floor(y[v]),a=Math.ceil(w[v]),h=Math.ceil(y[v]),c=w[v]-i,u=y[v]-r;if(!n||n[i+r*f]&&n[a+r*f]&&n[i+h*f]&&n[a+h*f]){const n=(1-c)*e[i+r*f]+c*e[a+r*f],p=(1-c)*e[i+h*f]+c*e[a+h*f];t[s*g+o]=(1-u)*n+u*p+l}else t[s*g+o]=e[k[v]+A[v]*f]}v++}}},U=[];let P;const I=h?.length===d,B=[];for(let l=0;l<d;l++){if(I){const t=new Uint8Array(g*m);b(t,h[l],h[l],!0),B.push(t)}P=new p(g*m),b(P,o[l],I?h[l]:r,"nearest"===s||"majority"===s),U.push(P)}const C=new l.A({width:g,height:m,pixelType:c,pixels:U,bandMasks:I?B:void 0});if(null!=r)C.mask=new Uint8Array(g*m),b(C.mask,r,r,!0);else if(x){C.mask=new Uint8Array(g*m);for(let t=0;t<g*m;t++)C.mask[t]=w[t]<0||y[t]<0?0:1}return C.updateStatistics(),C}function N(t){const{pixelBlock:e,extent:n,fieldNames:i,skipFactor:l,skipSpatialReference:s=!1,pixelIdOffset:o=0}=t,a=[],{width:h,height:c,pixels:f,mask:u}=e,p=t.imageRowSize??h,d=n.width/h,g=n.height/c,m=f.length,x=Math.floor(l/2),{xmin:w,ymax:y}=n,k=s?void 0:n.spatialReference.toJSON();for(let A=x;A<c;A+=l)for(let t=x;t<h;t+=l){const e=A*h+t;if(!u||u[e]){const n={x:w+(t+.5)*d,y:y-(A+.5)*g,spatialReference:k},l={[r]:o+A*p+t};for(let t=0;t<m;t++)l[i[t+1]]=f[t][e];a.push({geometry:n,attributes:l})}}return a}},66486:(t,e,n)=>{n.d(e,{A:()=>d});var i,l=n(6326),s=n(50076),o=n(42553),r=n(53084),a=n(76460),h=n(46053),c=n(21403),f=n(87990),u=n(8141),p=n(52297);let d=i=class extends o.o{static createEmptyBand(t,e){return new(i.getPixelArrayConstructor(t))(e)}static combineBandMasks(t){if(t.length<2)return t[0];const e=t[0].length,n=new Uint8Array(e).fill(255);for(let i=0;i<t.length;i++){const l=t[i];for(let t=0;t<e;t++)l[t]||(n[t]=0)}return n}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){return this.pixels?.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new s.A("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics??new u.z)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map(t=>function(t,e){let n=1/0,i=-1/0;const l=t.length;let s,o=0;if(null!=e)for(s=0;s<l;s++)e[s]&&(o=t[s],n=o<n?o:n,i=o>i?o:i);else for(s=0;s<l;s++)o=t[s],n=o<n?o:n,i=o>i?o:i;return new u.z(n,i)}(t,this.mask));const t=this.mask;let e=0;if(null!=t)for(let n=0;n<t.length;n++)t[n]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||"f64"===t||"f32"===t||!this.pixels)return;const[e,n]=(0,p.hP)(t),l=this.pixels,s=this.width*this.height,o=l.length;let r,a,h;const c=[];for(let f=0;f<o;f++){h=i.createEmptyBand(t,s),r=l[f];for(let t=0;t<s;t++)a=r[t],h[t]=a>n?n:a<e?e:a;c.push(h)}this.pixels=c,this.pixelType=t}extractBands(t){const{pixels:e,statistics:n}=this;if(null==t||0===t.length||!e||0===e.length)return this;const l=e.length,s=t.some(t=>t>=e.length),o=l===t.length&&!t.some((t,e)=>t!==e);if(s||o)return this;const r=this.bandMasks?.length===l?t.map(t=>this.bandMasks[t]):void 0;let{mask:a,validPixelCount:h}=this;const{width:c,height:f}=this;return r?.length&&(a=i.combineBandMasks(r),h=a.filter(t=>!!t).length),new i({pixelType:this.pixelType,width:c,height:f,mask:a,bandMasks:r,validPixelCount:h,maskIsAlpha:this.maskIsAlpha,pixels:t.map(t=>e[t]),statistics:n&&t.map(t=>n[t])})}clone(){const t=new i({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount,premultiplyAlpha:this.premultiplyAlpha,depthCount:this.depthCount});let e;null!=this.mask&&(t.mask=new Uint8Array(this.mask)),this.noDataValues&&(t.noDataValues=[...this.noDataValues]),this.bandMasks&&(t.bandMasks=this.bandMasks.map(t=>new Uint8Array(t)));const n=i.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const i=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=i?this.pixels[e].slice():new n(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=(0,r.o8)(this.statistics[e]);return t}getTransferableObject(){const{pixels:t,bandMasks:e,mask:n}=this;this.pixels=[],this.bandMasks=void 0,this.mask=void 0;const i=this.toJSON();this.pixels=t,this.bandMasks=e,this.mask=n,i.pixels=t?[...t]:t,i.bandMasks=e?[...e]:e,i.mask=n;const l=[];return[...t??[],n,...e??[]].filter(t=>null!=t&&ArrayBuffer.isView(t)).forEach(t=>{t&&!l.includes(t.buffer)&&l.push(t.buffer)}),{pixelBlock:i,transferList:l}}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:n,premultiplyAlpha:i,pixels:l}=this;if(!t||!l?.length)return void a.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let s,o,r,h;s=o=r=l[0],l.length>=3?(o=l[1],r=l[2]):2===l.length&&(o=l[1]);const c=new Uint32Array(t),f=this.width*this.height;if(s.length===f)if(null!=e&&e.length===f)if(n)for(h=0;h<f;h++){const t=e[h];if(t){const e=t/255;c[h]=i?t<<24|r[h]*e<<16|o[h]*e<<8|s[h]*e:t<<24|r[h]<<16|o[h]<<8|s[h]}}else for(h=0;h<f;h++)e[h]&&(c[h]=255<<24|r[h]<<16|o[h]<<8|s[h]);else for(h=0;h<f;h++)c[h]=255<<24|r[h]<<16|o[h]<<8|s[h];else a.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:n,statistics:i}=this;if(!t||!e?.length)return void a.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const l=this.pixelType;let s=1,o=0,r=1;if(i&&i.length>0){for(const t of i)if(null!=t.minValue&&(o=Math.min(o,t.minValue)),null!=t.maxValue&&null!=t.minValue){const e=t.maxValue-t.minValue;r=Math.max(r,e)}s=255/r}else{let t=255;"s8"===l?(o=-128,t=127):"u16"===l?t=65535:"s16"===l?(o=-32768,t=32767):"u32"===l?t=4294967295:"s32"===l?(o=-2147483648,t=2147483647):"f32"===l?(o=-34e38,t=34e38):"f64"===l&&(o=-Number.MAX_VALUE,t=Number.MAX_VALUE),s=255/(t-o)}const h=new Uint32Array(t),c=this.width*this.height;let f,u,p,d,g;if(f=u=p=e[0],f.length!==c)return a.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(u=e[1],e.length>=3&&(p=e[2]),null!=n&&n.length===c)for(d=0;d<c;d++)n[d]&&(h[d]=255<<24|(p[d]-o)*s<<16|(u[d]-o)*s<<8|(f[d]-o)*s);else for(d=0;d<c;d++)h[d]=255<<24|(p[d]-o)*s<<16|(u[d]-o)*s<<8|(f[d]-o)*s;else if(null!=n&&n.length===c)for(d=0;d<c;d++)g=(f[d]-o)*s,n[d]&&(h[d]=255<<24|g<<16|g<<8|g);else for(d=0;d<c;d++)g=(f[d]-o)*s,h[d]=255<<24|g<<16|g<<8|g}_fillFrom32Bit(t){const{pixels:e,mask:n}=this;if(!t||!e?.length)return a.A.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let i,l,s,o;i=l=s=e[0],e.length>=3?(l=e[1],s=e[2]):2===e.length&&(l=e[1]);const r=this.width*this.height;if(i.length!==r)return a.A.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let h=0;if(null!=n&&n.length===r)for(o=0;o<r;o++)t[h++]=i[o],t[h++]=l[o],t[h++]=s[o],t[h++]=1&n[o];else for(o=0;o<r;o++)t[h++]=i[o],t[h++]=l[o],t[h++]=s[o],t[h++]=1}};(0,l.Cg)([(0,h.MZ)({json:{write:!0}})],d.prototype,"width",void 0),(0,l.Cg)([(0,h.MZ)({json:{write:!0}})],d.prototype,"height",void 0),(0,l.Cg)([(0,h.MZ)({json:{write:!0}})],d.prototype,"pixelType",void 0),(0,l.Cg)([(0,c.w)("pixelType")],d.prototype,"castPixelType",null),(0,l.Cg)([(0,h.MZ)({json:{write:!0}})],d.prototype,"validPixelCount",void 0),(0,l.Cg)([(0,h.MZ)({json:{write:!0}})],d.prototype,"mask",void 0),(0,l.Cg)([(0,h.MZ)({json:{write:!0}})],d.prototype,"maskIsAlpha",void 0),(0,l.Cg)([(0,h.MZ)({json:{write:!0}})],d.prototype,"pixels",void 0),(0,l.Cg)([(0,h.MZ)()],d.prototype,"premultiplyAlpha",void 0),(0,l.Cg)([(0,h.MZ)({json:{write:!0}})],d.prototype,"statistics",void 0),(0,l.Cg)([(0,h.MZ)({json:{write:!0}})],d.prototype,"depthCount",void 0),(0,l.Cg)([(0,h.MZ)({json:{write:!0}})],d.prototype,"noDataValues",void 0),(0,l.Cg)([(0,h.MZ)({json:{write:!0}})],d.prototype,"bandMasks",void 0),d=i=(0,l.Cg)([(0,f.$)("esri.layers.support.PixelBlock")],d)},99846:(t,e,n)=>{n.d(e,{$Q:()=>x,FI:()=>g,KL:()=>c,Lu:()=>u,MD:()=>h,Rn:()=>m,Ud:()=>T,Wu:()=>C,Y2:()=>d,gf:()=>B});var i=n(45802),l=n(66486),s=n(52494);const o=new Map;o.set("meter-per-second",1),o.set("kilometer-per-hour",.277778),o.set("knots",.514444),o.set("feet-per-second",.3048),o.set("mile-per-hour",.44704);const r=180/Math.PI,a=5,h=new i.J({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function c(t,e){return o.get(t)/o.get(e)||1}function f(t){return(450-t)%360}function u(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"geographic";const[n,i]=t,l=Math.sqrt(n*n+i*i);let s=Math.atan2(i,n)*r;return s=(360+s)%360,"geographic"===e&&(s=f(s)),[l,s]}function p(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"geographic",n=t[1];"geographic"===e&&(n=f(n)),n%=360;const i=t[0];return[i*Math.cos(n/r),i*Math.sin(n/r)]}function d(t,e,n){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"geographic";if(!(0,s.AB)(t)||null==n)return t;const l="vector-magdir"===e?t.clone():g(t,e),o=l.pixels[1];for(let s=0;s<o.length;s++)o[s]="geographic"===i?(o[s]+n[s]+270)%360:(o[s]+360-n[s])%360;return"vector-magdir"===e?l:g(l,"vector-magdir")}function g(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"geographic",i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;if(!(0,s.AB)(t))return t;const{pixels:o,width:r,height:a}=t,h=r*a,c=o[0],f=o[1],d=t.pixelType.startsWith("f")?t.pixelType:"f32",g=l.A.createEmptyBand(d,h),m=l.A.createEmptyBand(d,h);let x=0;for(let l=0;l<a;l++)for(let t=0;t<r;t++)"vector-uv"===e?([g[x],m[x]]=u([c[x],f[x]],n),g[x]*=i):([g[x],m[x]]=p([c[x],f[x]],n),g[x]*=i,m[x]*=i),x++;const w=new l.A({pixelType:d,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[g,m]});return w.updateStatistics(),w}function m(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;if(1===n||!(0,s.AB)(t))return t;const i=t.clone(),{pixels:l,width:o,height:r}=i,a=l[0],h=l[1];let c=0;for(let s=0;s<r;s++)for(let t=0;t<o;t++)"vector-uv"===e?(a[c]*=n,h[c]*=n):a[c]*=n,c++;return i.updateStatistics(),i}function x(t,e,n,i,l){if(null==l||!l.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/i),height:Math.round(n/i),resolution:t.width/e};const s=l.xmin,o=l.ymax,r=(t.xmax-t.xmin)/e*i,a=(t.ymax-t.ymin)/n*i,h=(r+a)/2;return t.xmin=s+Math.floor((t.xmin-s)/r)*r,t.xmax=s+Math.ceil((t.xmax-s)/r)*r,t.ymin=o+Math.floor((t.ymin-o)/a)*a,t.ymax=o+Math.ceil((t.ymax-o)/a)*a,{extent:t,width:Math.round(t.width/r),height:Math.round(t.height/a),resolution:h}}const w=y(0,0,0);function y(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Math.PI,i=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];i&&(n=(2*Math.PI-n)%(2*Math.PI));const l=i?-1:1,s=13*l,o=-7*l,r=-2*l,a=-16*l,h=21.75,[c,f]=A(0,e+s,n,h),[u,p]=A(t-5.5,e+o,n,h),[d,g]=A(t+5.5,e+o,n,h),[m,x]=A(t-1.5,e+r,n,h),[w,y]=A(t+1.5,e+r,n,h),[k,M]=A(t-1.5,e+a,n,h),[v,b]=A(t+1.5,e+a,n,h);return[c,f,u,p,m,x,w,y,d,g,k,M,v,b]}function k(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Math.PI,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];n&&(e=(2*Math.PI-e)%(2*Math.PI));const i=n?-1:1,l=5*i,s=20*i,o=25*i,r=45,h=2*i,c=n?1:-1,f=5*c;let[u,p]=[0+f,0-s],[d,g]=[u+2*c,p],[m,x]=[d-0*c,g+h],[w,y]=[0-f,0-o],[k,M]=[w+0*c,y-h],v=Math.ceil(t/a),b=Math.floor(v/10);v-=8*b;const U=[],P=[];for(let a=0;a<v/2;a++,b--){b<=0&&v%2==1&&a===(v-1)/2&&(w=0,k=w+0*c,y=(y+p)/2,M=y-h);const[t,n]=A(w,y,e,r);if(b>0){const[i,l]=A(d,y,e,r),[s,o]=A(u,p,e,r);U.push(i),U.push(l),U.push(t),U.push(n),U.push(s),U.push(o)}else{const[i,l]=A(d,g,e,r),[s,o]=A(m,x,e,r),[a,h]=A(k,M,e,r);P.push(t),P.push(n),P.push(a),P.push(h),P.push(s),P.push(o),P.push(i),P.push(l)}y+=l,p+=l,g+=l,x+=l,M+=l}const[I,T]=A(0+f,0+s,e,r),B=7*c,[C,F]=A(0+B,0+s,e,r),[S,V]=A(0+f,0-o,e,r),[D,_]=A(0+B,0-o,e,r);return{pennants:U,barbs:P,shaft:[I,T,C,F,S,V,D,_]}}function A(t,e,n){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;const l=Math.sqrt(t*t+e*e)/i,s=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[l,(2*Math.PI+s-n)%(2*Math.PI)]}const M=[0,1,3,6,10,16,21,27,33,40,47,55,63],v=[0,.5,1,1.5,2],b=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function U(t,e,n,i){const l=c(i||"knots",n);let s;for(s=1;s<e.length;s++)if(s===e.length-1){if(t<e[s]*l)break}else if(t<=e[s]*l)break;return Math.min(s-1,e.length-2)}function P(t,e,n,i,l){let s=0;switch(e){case"beaufort_kn":s=U(t,M,"knots",n);break;case"beaufort_km":s=U(t,M,"kilometer-per-hour",n);break;case"beaufort_ft":s=U(t,M,"feet-per-second",n);break;case"beaufort_m":s=U(t,M,"meter-per-second",n);break;case"classified_arrow":s=U(t,l??[],i,n);break;case"ocean_current_m":s=U(t,v,"meter-per-second",n);break;case"ocean_current_kn":s=U(t,b,"knots",n)}return s}const I=[];function T(t,e){let n=0,i=0;const{width:l,height:s,mask:o}=t,r=t.pixels[0],f=[],u=[],p=c(h.fromJSON(e.inputUnit),"knots"),d="wind_speed"===e.style?a:Number.MAX_VALUE;for(let a=0;a<s;a++)for(let t=0;t<l;t++){const e=r[a*l+t]*p;if((!o||o[a*l+t])&&e<d){for(let i=0;i<4;i++)f[n++]=(t+.5)/l,f[n++]=(a+.5)/s,f[n++]=i<2?-.5:.5,f[n++]=i%2==0?-.5:.5,f[n++]=0,f[n++]=e;const o=4*(n/24-1);u[i++]=o,u[i++]=o+1,u[i++]=o+2,u[i++]=o+1,u[i++]=o+2,u[i++]=o+3}}return{vertexData:new Float32Array(f),indexData:new Uint32Array(u)}}function B(t,e){return"simple_scalar"===e.style?T(t,e):"wind_speed"===e.style?function(t,e){if(0===I.length)for(let a=0;a<30;a++)I.push(k(5*a,0,!e.invertDirection));const n=c(h.fromJSON(e.inputUnit),"knots"),{width:i,height:l,mask:s}=t,o=t.pixels[0],r=t.pixels[1],f=[],u=[];let p=0,d=0;for(let h=0;h<l;h++)for(let t=0;t<i;t++){const e=h*i+t,c=o[e]*n;if((!s||s[h*i+t])&&c>=a){const n=(r[e]+360)%360/180*Math.PI,{pennants:s,barbs:o,shaft:a}=I[Math.min(Math.floor(c/5),29)];if(s.length+o.length===0)continue;let g=f.length/6;const m=(t+.5)/i,x=(h+.5)/l;for(let t=0;t<s.length;t+=2)f[p++]=m,f[p++]=x,f[p++]=s[t],f[p++]=s[t+1]+n,f[p++]=0,f[p++]=c;for(let t=0;t<o.length;t+=2)f[p++]=m,f[p++]=x,f[p++]=o[t],f[p++]=o[t+1]+n,f[p++]=0,f[p++]=c;for(let t=0;t<a.length;t+=2)f[p++]=m,f[p++]=x,f[p++]=a[t],f[p++]=a[t+1]+n,f[p++]=0,f[p++]=c;for(let t=0;t<s.length/6;t++)u[d++]=g,u[d++]=g+1,u[d++]=g+2,g+=3;for(let t=0;t<o.length/8;t++)u[d++]=g,u[d++]=g+1,u[d++]=g+2,u[d++]=g+1,u[d++]=g+2,u[d++]=g+3,g+=4;u[d++]=g+0,u[d++]=g+1,u[d++]=g+2,u[d++]=g+1,u[d++]=g+3,u[d++]=g+2,g+=4}}return{vertexData:new Float32Array(f),indexData:new Uint32Array(u)}}(t,e):function(t,e){const{style:n,inputUnit:i,outputUnit:l,breakValues:s}=e,o=h.fromJSON(i),r=h.fromJSON(l);let a=0,c=0;const{width:f,height:u,mask:p}=t,d=t.pixels[0],g=t.pixels[1],m=null!=p?p.filter(t=>t>0).length:f*u,x=new Float32Array(42*m),k=new Uint32Array(15*m),A=e.invertDirection?y(0,0,0,!1):w;for(let h=0;h<u;h++)for(let t=0;t<f;t++){const e=h*f+t;if(!p||p[h*f+t]){const i=(g[e]+360)%360/180*Math.PI,l=P(d[e],n,o,r,s);for(let n=0;n<A.length;n+=2)x[a++]=(t+.5)/f,x[a++]=(h+.5)/u,x[a++]=A[n],x[a++]=A[n+1]+i,x[a++]=l,x[a++]=d[e];const p=7*(a/42-1);k[c++]=p,k[c++]=p+1,k[c++]=p+2,k[c++]=p+0,k[c++]=p+4,k[c++]=p+3,k[c++]=p+0,k[c++]=p+2,k[c++]=p+3,k[c++]=p+2,k[c++]=p+5,k[c++]=p+3,k[c++]=p+5,k[c++]=p+6,k[c++]=p+3}}return{vertexData:x,indexData:k}}(t,e)}function C(t,e,n){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[0,0],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const{width:o,height:r,mask:a}=t,[h,c]=t.pixels,[f,d]=i,g=Math.round((o-f)/n),m=Math.round((r-d)/n),x=g*m,w=new Float32Array(x),y=new Float32Array(x),k=new Uint8Array(x),A="vector-uv"===e;for(let l=0;l<m;l++)for(let t=0;t<g;t++){let e=0;const i=l*g+t,m=Math.max(0,l*n+d),x=Math.max(0,t*n+f),M=Math.min(r,m+n),v=Math.min(o,x+n);for(let t=m;t<M;t++)for(let n=x;n<v;n++){const l=t*o+n;if(!a||a[l]){e++;const t=A?[h[l],c[l]]:[h[l],(360+c[l])%360],[n,s]=A?t:p(t);w[i]+=n,y[i]+=s}}if(e>=(M-m)*(v-x)*(1-s)){k[i]=1;const[t,n]=u([w[i]/e,y[i]/e]);w[i]=t,y[i]=n}else k[i]=0,w[i]=0,y[i]=0}const M=new l.A({width:g,height:m,pixels:[w,y],mask:k});return M.updateStatistics(),M}}}]);
//# sourceMappingURL=3092.a0ddf105.chunk.js.map