{"version":3,"file":"static/js/7161.9feb1597.chunk.js","mappings":"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","sources":["../node_modules/src/.internal/charts/xy/axes/AxisTick.ts","../node_modules/src/.internal/charts/xy/axes/Grid.ts","../node_modules/src/.internal/charts/xy/axes/AxisLabel.ts","../node_modules/src/.internal/charts/xy/axes/AxisRenderer.ts","../node_modules/src/.internal/charts/xy/axes/AxisRendererX.ts","../node_modules/src/.internal/charts/xy/axes/AxisRendererY.ts","../node_modules/src/.internal/charts/xy/axes/Axis.ts","../node_modules/src/.internal/charts/xy/axes/ValueAxis.ts","../node_modules/src/.internal/charts/xy/axes/CategoryAxis.ts","../node_modules/src/.internal/charts/xy/series/XYSeries.ts","../node_modules/src/.internal/charts/xy/series/BaseColumnSeries.ts","../node_modules/src/.internal/charts/xy/series/ColumnSeries.ts","../node_modules/d3-shape/src/array.js","../node_modules/d3-shape/src/curve/linear.js","../node_modules/d3-shape/src/point.js","../node_modules/d3-shape/src/line.js","../node_modules/d3-shape/src/area.js","../node_modules/src/.internal/charts/xy/series/LineSeries.ts","../node_modules/src/.internal/charts/xy/XYChartDefaultTheme.ts","../node_modules/src/.internal/charts/xy/XYChart.ts","../node_modules/src/.internal/charts/xy/XYCursor.ts","../node_modules/src/.internal/core/render/Button.ts"],"sourcesContent":["import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n","import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n","import type { Sprite, ISpritePointerEvent } from \"../../../core/render/Sprite\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\n\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\n\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Re-enable display of skipped grid lines due to lack of space and as per\n\t * the `minGridDistance` setting. Not recommended for CategoryAxis with a lot of data items.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Minor_grid} for more info\n\t * @since 5.6.0\n\t */\n\tminorGridEnabled?: boolean;\n\n\t/**\n\t * Enable labels on minor grid. If you enable labels, grid will be enabled automatically.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Enabling_minor_grid_labels} for more info\n\t * @since 5.6.0\n\t */\n\tminorLabelsEnabled?: boolean;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t *\n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t *\n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n\n\t/**\n\t * Sensitivity of panning. The higher the number, the more sensitive it is.\n\t *\n\t * @default 1\n\t */\n\tpanSensitivity?: number;\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t));\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t));\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t));\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t));\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\t/**\n\t * A thumb Graphics to be used for panning the axis (the one which shows under the labels when hovered)\n\t */\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\t\tif (this.isDirty(\"minGridDistance\")) {\n\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\tthis.axis.markDirtySize();\n\t\t\t})\n\t\t}\n\t}\n\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: ISpritePointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(event.point);\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: ISpritePointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: ISpritePointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(event.point);\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2 * this.get(\"panSensitivity\", 1);\n\t\t\tthis.axis.zoom(downStart - extra, downEnd + extra, 0);\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start);\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\tif (!chart.inPlot(point)) {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\n\nimport { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, isMeasured: false, themeTags: [\"axis\", \"x\", \"thumb\", \"zoomgrip\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\tconst ghostLabel = axis.ghostLabel;\n\t\tif (ghostLabel) {\n\t\t\tghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\t\t\tghostLabel.set(\"x\", -1000);\n\t\t}\n\n\t\tconst opposite = \"opposite\"\n\t\tconst inside = \"inside\";\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel?._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start) * this._lc\n\n\t\tposition += this._ls;\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\tconst x = axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0);\n\t\taxis.gridContainer.set(\"x\", x);\n\t\taxis.topGridContainer.set(\"x\", x);\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"width\") == null) {\n\t\t\taxis.set(\"width\", p100);\n\t\t};\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = -1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = 1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"y\", previousSprite.y() + previousSprite.height() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"y\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n\t\t\tconst limit = 10000;\n\n\t\t\tx0 = Math.max(-limit, x0);\n\t\t\tx1 = Math.min(limit, x1);\n\t\t\t*/\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\n\nimport { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tprotected _downY?: number;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\", \"zoomgrip\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point1.y - point2.y) / this.height();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\tconst ghostLabel = axis.ghostLabel;\n\t\tif (ghostLabel) {\n\t\t\tghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\t\t\tghostLabel.set(\"y\", -1000);\n\t\t}\n\n\t\tconst thumb = this.thumb;\n\t\tconst opposite = \"opposite\";\n\t\tconst inside = \"inside\";\n\t\tconst chart = this.chart;\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis, 0);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.leftAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel?._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tconst w = axis.labelsContainer.width();\n\n\t\tif (chart) {\n\t\t\tif (this.get(opposite)) {\n\t\t\t\tthumb.set(\"centerX\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthumb.set(\"centerX\", w);\n\t\t\t}\n\t\t}\n\n\t\tthumb.setPrivate(\"width\", w);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\taxis.set(\"layout\", horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\tconst y = axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height());\n\t\taxis.gridContainer.set(\"y\", y);\n\t\taxis.topGridContainer.set(\"y\", y);\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = 1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = -1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"x\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//y0 = Math.max(0, y0);\n\t\t\t//y1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start) * this._lc\n\n\t\tposition += this._ls;\n\n\t\treturn position;\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * Set this to `false` to prevent axis from being zoomed.\n\t */\n\tzoomable?: boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n\n\t/**\n\t * Specifies how axis fill should be drawn (if fill rule allows it).\n\t *\n\t * @since 5.14.0\n\t */\n\tminorAxisFillsEnabled?: boolean;\n\n\t/**\n\t * If set to `false`, the axis will not be zoomed out when the chart's zoom\n\t * out button is pressed, and vice versa when axis is zoomed, it will not\n\t * trigger the button to appear.\n\t *\n\t * @default true\n\t * @since 5.14.0\n\t */\n\tzoomOut?: boolean;\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Saves position to which tooltip points.\n\t */\n\ttooltipPosition?: number;\n\n\t/**\n\t * Width in pixels between grid lines (read-only).\n\t * \n\t * It might not be exact, as [[DateAxis]] can have grids at irregular\n\t * intervals.\n\t * \n\t * Could be used to detect when size changes and to adjust labels for them\n\t * not to overlap.\n\t */\n\tcellWidth?: number;\n\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * Array of minor data items.\n\t */\n\tpublic minorDataItems: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\tpublic _skipSync: boolean = false;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\n\t */\n\tpublic ghostLabel?: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\tpublic _seriesValuesDirty = false;\n\n\tpublic _seriesAdded = false;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tpublic _bullets: { [index: string]: AxisBullet } = {};\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (dataItem) => {\n\t\t\t\t\tdataItem.dispose();\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis.disposeDataItem(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value, [\"range\"]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis._createGhostLabel();\n\t}\n\n\tprotected _createGhostLabel() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tghostLabel.adapters.disable(\"text\");\n\t\tghostLabel.setAll({ opacity: 0, tooltipText: undefined, tooltipHTML: undefined, interactive: false });\n\t\tghostLabel.events.disable();\n\t\tthis.ghostLabel = ghostLabel;\n\t}\n\n\tprotected _updateFinals(_start: number, _end: number) {\n\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number, priority?: \"start\" | \"end\"): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\t\tif (this.get(\"zoomable\", true)) {\n\n\t\t\tthis._updateFinals(start, end);\n\n\t\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\t\t\t\tlet sAnimation = this._sAnimation;\n\t\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\t\tif (start > end) {\n\t\t\t\t\t[start, end] = [end, start];\n\t\t\t\t}\n\n\t\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\t\tif (start < - maxDeviation) {\n\t\t\t\t\tstart = -maxDeviation;\n\t\t\t\t}\n\n\t\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\t}\n\n\t\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\t\t\t\tlet maxZoomFactorReal = maxZoomFactor;\n\n\t\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t\t}\n\n\t\t\t\tif (!priority) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\n\t\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\t\tif (start < this.get(\"start\", 0)) {\n\t\t\t\t\t\tpriority = \"start\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpriority = \"end\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\t\tif (end > this.get(\"end\", 1)) {\n\t\t\t\t\t\tpriority = \"end\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpriority = \"start\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet minZoomCount = this.get(\"minZoomCount\", 0);\n\t\t\t\tconst dataItems = this.dataItems;\n\n\t\t\t\tif (dataItems && dataItems.length < minZoomCount) {\n\t\t\t\t\tminZoomCount = dataItems.length;\n\t\t\t\t}\n\n\t\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\", Infinity);\n\n\t\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\t\tmaxZoomFactor = maxZoomFactorReal / minZoomCount;\n\t\t\t\t}\n\n\t\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\t\tminZoomFactor = maxZoomFactorReal / maxZoomCount;\n\t\t\t\t}\n\n\t\t\t\t// need one more\n\t\t\t\tif (start > end) {\n\t\t\t\t\t[start, end] = [end, start];\n\t\t\t\t}\n\n\t\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\t\tif (priority === \"start\") {\n\t\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t\t// add to the end\n\t\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t\t//unless end is > 0\n\t\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t\t//end = 1;\n\t\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// most likely we are dragging right, so we modify left\n\t\t\t\telse {\n\t\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t\t// add to the end\n\t\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// remove from start\n\t\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t\t//start = 0;\n\t\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\n\t\t\t\tif (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\n\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\tchart._handleAxisSelection(this, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (duration > 0) {\n\t\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\t\t\t\t\tlet sAnimation, eAnimation;\n\t\t\t\t\tif (this.get(\"start\") != start) {\n\t\t\t\t\t\tsAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\t\t}\n\t\t\t\t\tif (this.get(\"end\") != end) {\n\t\t\t\t\t\teAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\t\tif (sAnimation) {\n\t\t\t\t\t\treturn sAnimation;\n\t\t\t\t\t}\n\t\t\t\t\telse if (eAnimation) {\n\t\t\t\t\t\treturn eAnimation;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.set(\"start\", start);\n\t\t\t\t\tthis.set(\"end\", end);\n\t\t\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\t\t\tthis.markDirtyKey(\"start\");\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._sAnimation) {\n\t\t\t\t\tthis._sAnimation.stop();\n\t\t\t\t}\n\t\t\t\tif (this._eAnimation) {\n\t\t\t\t\tthis._eAnimation.stop();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number, exactLocation?: boolean): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number, exactLocation?: boolean): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis._bullets = {};\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (ghostLabel) {\n\t\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\t\tghostLabel.set(\"visible\", true);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tghostLabel.set(\"visible\", false);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart._updateCursor();\n\t\t\t}\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleFHDataItem(dataItem, true);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleFHDataItem(dataItem, false);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\tpublic _toggleFHDataItem(dataItem: DataItem<IAxisDataItem>, forceHidden: boolean) {\n\t\tconst fh = \"forceHidden\";\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.set(fh, forceHidden);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.set(fh, forceHidden);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.set(fh, forceHidden);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.set(fh, forceHidden);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.set(fh, forceHidden);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tconst v = \"visible\";\n\t\tif (label) {\n\t\t\tlabel.setPrivate(v, visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(v, visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(v, visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(v, visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(v, visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>, minor?: boolean) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tlet m = \"minor\";\n\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (!label) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet themeTags = label.get(\"themeTags\");\n\t\t\tlet remove = false;\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (remove) {\n\t\t\t\tlabel.parent?.children.removeValue(label);\n\t\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t\t\tlabel.dispose();\n\t\t\t\trenderer.labels.removeValue(label);\n\t\t\t}\n\t\t}\n\n\t\tconst grid = dataItem.get(\"grid\");\n\n\t\tif (!grid) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet themeTags = grid.get(\"themeTags\");\n\t\t\tlet remove = false;\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (remove) {\n\t\t\t\tgrid.parent?.children.removeValue(grid);\n\t\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t\t\tgrid.dispose();\n\t\t\t\trenderer.grid.removeValue(grid);\n\t\t\t}\n\t\t}\n\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (!tick) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet remove = false;\n\t\t\tlet themeTags = tick.get(\"themeTags\");\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (remove) {\n\t\t\t\ttick.parent?.children.removeValue(tick);\n\t\t\t\trenderer.makeTick(dataItem, tags);\n\t\t\t\ttick.dispose();\n\t\t\t\trenderer.ticks.removeValue(tick);\n\t\t\t}\n\t\t}\n\n\t\tif (!minor && !dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\t\telse if (minor && !dataItem.get(\"axisFill\") && this.get(\"minorAxisFillsEnabled\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t\tchart.axisHeadersContainer.markDirtySize();\n\t\t}\n\n\t\tthis.get(\"renderer\")._updatePositions();\n\n\t\tthis._seriesAdded = false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t\tconst bullet = dataItem.get(\"bullet\");\n\n\t\tif (bullet) {\n\t\t\tbullet.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tthis.setPrivate(\"cellWidth\", this.getCellWidthPosition() * this.get(\"renderer\").axisLength());\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (ghostLabel) {\n\t\t\tif (!ghostLabel.isHidden()) {\n\t\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\t\tconst gWidth = Math.ceil(bounds.right - bounds.left);\n\t\t\t\tlet text = ghostLabel.get(\"text\");\n\t\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\t\tconst w = Math.ceil(bounds.right - bounds.left);\n\n\t\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\t\ttext = label.text._getText();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tghostLabel.set(\"text\", text);\n\t\t\t}\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\t\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\t/**\n\t * Can be called when axis zoom changes and you need to update tooltip\n\t * position.\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!, this.get(\"tooltipLocation\"));\n\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\n\t\t\t\t\t\tseries._settings.tooltipDataItem = dataItem;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\n\t\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", dataItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t}\n\n\t\t\tthis.setPrivateRaw(\"tooltipPosition\", position);\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (!$type.isNaN(position)) {\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\", 0) || position > this.get(\"end\", 1)) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position        Position\n\t * @param   adjustPosition  Adjust position\n\t * @return                  Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number, adjustPosition?: boolean): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\tpublic _handleSeriesRemoved() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Converts relative position of the axis to a global position taking current\n\t * zoom into account (opposite to what `toAxisPosition` does).\n\t *\n\t * @since 5.4.2\n\t * @param position Position\n\t * @return Global position\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toGlobalPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number, location?: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn 0.05;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract nextPosition(_count?: number): number\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * In case `min` and/or `max` is not set, the axis will fix its scale to\n\t * precise lowest and highest values available through all of the series\n\t * attached to it.\n\t *\n\t * This effectively locks the axis from auto-zooming itself when chart\n\t * is zoomed in.\n\t *\n\t * If you need to zoom to actual low/high values within currently visible\n\t * scope, use `strictMinMaxSelection` instead.\n\t *\n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * Force axis to auto-zoom to exact lowest and highest values from attached\n\t * series' data items within currently visible range.\n\t * \n\t * This is a good feature when your series is plotted from derivative values,\n\t * like `valueYChangeSelection` as it helps to avoid frequent jumping of\n\t * series to adjusted min and max of the axis.\n\t * \n\t * This will not work if strictMinMax is set to true (the axis will not zoom at all in this case).\n\t * \n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @since 5.1.11\n\t */\n\tstrictMinMaxSelection?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis tooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n\t/**\n\t * If set to `false`, the axis won't be auto-zoomed to a selection (this\n\t * works only if the other axis is a `DateAxis` or a `CategoryAxis`).\n\t * \n\t * IMPORTANT: This setting will be ignored if both X and Y axes are\n\t * a `ValueAxis`.\n\t *\n\t * @since 5.2.20\n\t * @default true\n\t */\n\tautoZoom?: boolean;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tlabelEndValue?: number;\n\n\t/**\n\t * If set to `true` the values fo this data item will be factored in when\n\t * calculating scale of the [[ValueAxis]]. Useful for axis ranges.\n\t * \n\t * @since 5.1.4\n\t */\n\taffectsMinMax?: boolean;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Calculated current minimum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmin?: number;\n\n\t/**\n\t * Calculated current maximum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmax?: number;\n\n\t/**\n\t * A minimum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `min` is reflecting current intermediate value, whereas `minFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tminFinal?: number;\n\n\t/**\n\t * A maximum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `max` is reflecting current intermediate value, whereas `maxFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tmaxFinal?: number;\n\n\t/**\n\t * Calculated minimum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMin?: number;\n\n\t/**\n\t * Calculated maximum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMax?: number;\n\n\t/**\n\t * A target minimum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMin` is reflecting current intermediate value,\n\t * whereas `selectionMinFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMinFinal?: number;\n\n\t/**\n\t * A target maximum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMax` is reflecting current intermediate value,\n\t * whereas `selectionMaxFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMaxFinal?: number;\n\n\t/**\n\t * When selection step changes, it might change during axis zoom animation.\n\t *\n\t * `selectionStepFinal` will show what step will be when animation is\n\t * finished.\n\t * \n\t * @readonly\n\t */\n\tselectionStepFinal?: number;\n\n\t/**\n\t * Value step between grid lines.\n\t * \n\t * @readonly\n\t */\n\tstep?: number;\n\n\t/**\n\t * Decimal places used when formatting axis labels.\n\t * \n\t * @readonly\n\t */\n\tstepDecimalPlaces?: number;\n\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _dseHandled = false;\n\tprotected _deltaMinMax: number = 1;\n\tpublic _minReal: number | undefined;\n\tpublic _maxReal: number | undefined;\n\n\tprotected _minRealLog: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\tprotected _minLogAdjusted: number = 1;\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tthis.addTag(\"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\tlet someDirty = false;\n\t\tif (this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tsomeDirty = true;\n\t\t\tthis.ghostLabel?.set(\"text\", \"\");\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || someDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\n\t\tthis._handleSizeDirty();\n\n\t\tif (this._dirtySelectionExtremes && !this._isPanning && this.get(\"autoZoom\", true)) {\n\t\t\tconst chart = this.chart;\n\t\t\tlet getMM = false;\n\t\t\t// #1563\n\t\t\tif (chart) {\n\t\t\t\tconst letter = this.get(\"renderer\").getPrivate(\"letter\");\n\t\t\t\tif (letter == \"Y\") {\n\t\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.className != \"ValueAxis\") {\n\t\t\t\t\t\t\tgetMM = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse if (letter == \"X\") {\n\t\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.className != \"ValueAxis\") {\n\t\t\t\t\t\t\tgetMM = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (getMM) {\n\t\t\t\tthis._getSelectionMinMax();\n\t\t\t}\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _handleSizeDirty() {\n\t\tif (this._sizeDirty && !this._dseHandled) {\n\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\tthis._dseHandled = true;\n\n\t\t\tif (this.getPrivate(\"selectionMinFinal\") != this.getPrivate(\"selectionMin\") || this.getPrivate(\"selectionMaxFinal\") != this.getPrivate(\"selectionMax\")) {\n\t\t\t\tthis._dirtySelectionExtremes = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _clearDirty(): void {\n\t\tsuper._clearDirty();\n\t\tthis._dseHandled = false;\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet differencePower = 1;\n\t\t\tlet minLog: number = min;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = this._minLogAdjusted;\n\n\t\t\t\tif (value < selectionMin) {\n\t\t\t\t\twhile (value < selectionMin) {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tminLog = value;\n\n\t\t\t\tif (minLog <= 0) {\n\t\t\t\t\tlet minRealLog = this._minRealLog;\n\t\t\t\t\tif (!$type.isNumber(minRealLog)) {\n\t\t\t\t\t\tminRealLog = 1;\n\t\t\t\t\t}\n\t\t\t\t\tminLog = Math.pow(10, Math.log(minRealLog) * Math.LOG10E);\n\n\t\t\t\t\tif (step < 1) {\n\t\t\t\t\t\tif ($type.isNumber(this._minRealLog)) {\n\t\t\t\t\t\t\tminLog = this._minRealLog;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tminLog = Math.pow(10, -50);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdifferencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\n\n\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E - 50);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/// minor grid\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t\tconst stepAdjusted = Math.round(step / stepPower);\n\n\t\t\tlet minorGridCount = 2;\n\n\t\t\tif ($math.round(stepAdjusted / 5, 10) % 1 == 0) {\n\t\t\t\tminorGridCount = 5;\n\t\t\t}\n\n\t\t\tif ($math.round(stepAdjusted / 10, 10) % 1 == 0) {\n\t\t\t\tminorGridCount = 10;\n\t\t\t}\n\n\t\t\tlet minorStep = step / minorGridCount;\n\n\t\t\t// end of minor grid\n\t\t\tlet i = 0;\n\t\t\tlet m = 0;\n\t\t\tlet previous = -Infinity;\n\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tlet nextValue = value;\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tnextValue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\tnextValue = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 50);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnextValue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// minor grid\n\t\t\t\tif (minorGridEnabled) {\n\t\t\t\t\tlet minorValue = value + minorStep;\n\n\t\t\t\t\tif (logarithmic) {\n\t\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\t\tlet minorMinMaxStep = this._adjustMinMax(value, nextValue, 10);\n\t\t\t\t\t\t\tminorStep = minorMinMaxStep.step;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tminorValue = value + minorStep;\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (minorValue < nextValue - step * 0.00000000001) {\n\t\t\t\t\t\tlet minorDataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\t\t\tif (this.minorDataItems.length < m + 1) {\n\t\t\t\t\t\t\tminorDataItem = new DataItem(this, undefined, {});\n\t\t\t\t\t\t\tthis.minorDataItems.push(minorDataItem);\n\t\t\t\t\t\t\tthis.processDataItem(minorDataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tminorDataItem = this.minorDataItems[m];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._createAssets(minorDataItem, [\"minor\"], true);\n\t\t\t\t\t\tthis._toggleDataItem(minorDataItem, true);\n\t\t\t\t\t\tminorDataItem.setRaw(\"value\", minorValue);\n\n\t\t\t\t\t\tconst minorLabel = minorDataItem.get(\"label\");\n\t\t\t\t\t\tif (minorLabel) {\n\t\t\t\t\t\t\tif (minorLabelsEnabled) {\n\t\t\t\t\t\t\t\tminorLabel.set(\"text\", this._formatText(minorValue));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tminorLabel.setPrivate(\"visible\", false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._prepareDataItem(minorDataItem);\n\t\t\t\t\t\tminorValue += minorStep;\n\t\t\t\t\t\tm++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvalue = nextValue;\n\n\t\t\t\tif (previous == value) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1 && !logarithmic) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\n\t\t\t\t// #103520\n\t\t\t\tif (logarithmic && differencePower <= 2) {\n\t\t\t\t\tif (value - step < step) {\n\t\t\t\t\t\tvalue = step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprevious = value;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t\t}\n\n\t\t\tfor (let j = m; j < this.minorDataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.minorDataItems[j], false);\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tif (endValue == null) {\n\t\t\t\tfillEndPosition = position;\n\t\t\t}\n\t\t}\n\n\t\tlet labelEndPosition = endPosition;\n\n\t\tlet labelEndValue = dataItem.get(\"labelEndValue\");\n\t\tif (labelEndValue != null) {\n\t\t\tlabelEndPosition = this.valueToPosition(labelEndValue);\n\t\t}\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, labelEndPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, labelEndPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\t// do not change to setPrivate, will cause SO\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.startIndex();\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.endIndex();\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tlet totalPercent = value / total * 100;\n\t\t\t\t\t\t\t\t\t\t\tif (total == 0) {\n\t\t\t\t\t\t\t\t\t\t\t\ttotalPercent = 0;\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, totalPercent);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tconst selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\t\tconst outOfSelection = series.getPrivate(\"outOfSelection\");\n\n\t\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tlet minX = series.getPrivate(\"minX\");\n\t\t\t\t\t\t\tlet maxX = series.getPrivate(\"maxX\");\n\n\t\t\t\t\t\t\t// solves #90085\n\t\t\t\t\t\t\tif (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\n\t\t\t\t\t\t\t\tminX = undefined;\n\t\t\t\t\t\t\t\tmaxX = undefined;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", minX);\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", maxX);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\n\t\t\t\t\t\t\tlet minY = series.getPrivate(\"minY\");\n\t\t\t\t\t\t\tlet maxY = series.getPrivate(\"maxY\");\n\n\t\t\t\t\t\t\t// solves #90085\n\t\t\t\t\t\t\tif (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\n\t\t\t\t\t\t\t\tminY = undefined;\n\t\t\t\t\t\t\t\tmaxY = undefined;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", minY);\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", maxY);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.axisRanges.each((range) => {\n\t\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tlet smin = selectionMin;\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tlet d = smin - min;\n\t\t\t\t\tif (d == 0) {\n\t\t\t\t\t\td = this._deltaMinMax;\n\t\t\t\t\t}\n\n\t\t\t\t\tselectionMin = smin - d;\n\t\t\t\t\tselectionMax = smin + d;\n\n\t\t\t\t\tstrictMinMax = true;\n\t\t\t\t}\n\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tlet selectionMinReal = selectionMin;\n\t\t\tlet selectionMaxReal = selectionMax;\n\n\t\t\tlet delta = selectionMax - selectionMin;\n\n\t\t\tselectionMin -= delta * extraMin;\n\t\t\tselectionMax += delta * extraMax;\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tif (minMaxStep.min < min) {\n\t\t\t\t\tminMaxStep.min = min;\n\t\t\t\t}\n\n\t\t\t\tif (minMaxStep.max > max) {\n\t\t\t\t\tminMaxStep.max = max;\n\t\t\t\t}\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionStrictMinMax) {\n\t\t\t\tselectionMin = selectionMinReal - (selectionMaxReal - selectionMinReal) * extraMin;\n\t\t\t\tselectionMax = selectionMaxReal + (selectionMaxReal - selectionMinReal) * extraMax;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = selectionMinReal;\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = selectionMaxReal;\n\t\t\t\t}\n\n\t\t\t\tif (selectionMax - selectionMin <= 0.00000001) {\n\t\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\t\tselectionMax += this._deltaMinMax;\n\t\t\t\t}\n\n\t\t\t\tlet delta = selectionMax - selectionMin;\n\n\t\t\t\tselectionMin -= delta * extraMin;\n\t\t\t\tselectionMax += delta * extraMax;\n\t\t\t}\n\n\t\t\tif (this.get(\"logarithmic\")) {\n\n\t\t\t\tif (selectionMin <= 0) {\n\t\t\t\t\tselectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\n\t\t\t\t}\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t\tif (selectionMax > max) {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet len = Math.min(20, Math.ceil(Math.log(this.getPrivate(\"maxZoomFactor\", 100) + 1) / Math.LN10) + 2);\n\n\t\t\tlet start = $math.round(this.valueToFinalPosition(selectionMin), len);\n\t\t\tlet end = $math.round(this.valueToFinalPosition(selectionMax), len);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (!this.get(\"strictMinMax\")) {\n\t\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\t\textraMin = 0.1;\n\t\t\t\t}\n\t\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\t\textraMax = 0.2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\t\tif (diff <= 0) {\n\t\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\t\tminDiff = diff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.axisRanges.each((range) => {\n\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity || max === -Infinity) {\n\t\t\tthis.setPrivate(\"minFinal\", undefined);\n\t\t\tthis.setPrivate(\"maxFinal\", undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tif (min > max) {\n\t\t\t[min, max] = [max, min];\n\t\t}\n\n\t\tconst initialMin = min;\n\t\tconst initialMax = max;\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tthis._minRealLog = min;\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\t\t\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getDelta(max);\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\t\tlet strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\n\t\tif (strictMinMaxSelection) {\n\t\t\tstrictMinMax = strictMinMaxSelection;\n\t\t}\n\n\t\tlet strict = strictMinMax;\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (strictMinMax) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tlet delta = max - min;\n\t\t\tmin -= delta * extraMin;\n\t\t\tmax += delta * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\t// this is to avoid floating point number error\n\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(max - min)) * Math.LOG10E)) + 5;\n\n\t\tmin = $math.round(min, decCount);\n\t\tmax = $math.round(max, decCount);\n\n\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.max(1, Math.ceil((max - min) / minDiff * this.get(\"maxZoomFactor\", 100))));\n\t\tthis._fixZoomFactor();\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tthis._minLogAdjusted = min;\n\t\t\tmin = this._minReal;\n\t\t\tmax = this._maxReal;\n\n\t\t\tif (min <= 0) {\n\t\t\t\tmin = initialMin * (1 - Math.min(extraMin, 0.99));\n\t\t\t}\n\t\t}\n\n\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\t\t\t\tthis._saveMinMax(min, max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _fixZoomFactor() {\n\t}\n\n\tprotected _getDelta(max: number) {\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tthis._deltaMinMax = power;\n\t}\n\n\tprotected _saveMinMax(_min: number, _max: number) {\n\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\t// round down min\n\t\tif (strictMode) {\n\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t// round up max\n\t\t\tmax = Math.ceil(max / power) * power;\n\t\t}\n\t\telse {\n\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t// round up max\n\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t}\n\n\t\t// don't let min go below 0 if real min is >= 0\n\t\tif (min < 0 && initialMin >= 0) {\n\t\t\tmin = 0;\n\t\t}\n\t\t// don't let max go above 0 if real max is <= 0\n\t\tif (max > 0 && initialMax <= 0) {\n\t\t\tmax = 0;\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t\tif (step == 0) {\n\t\t\t\t\tstep = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\n\t\t// final min and max\n\t\tlet minCount = Math.floor(min / step);\n\n\t\tmin = $math.round(step * minCount, decCount);\n\n\t\tlet maxCount: number;\n\n\t\tif (!strictMode) {\n\t\t\tmaxCount = Math.ceil(max / step);\n\t\t}\n\t\telse {\n\t\t\tmaxCount = Math.floor(max / step);\n\t\t}\n\n\t\tif (maxCount === minCount) {\n\t\t\tmaxCount++;\n\t\t}\n\n\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\tif (max < initialMax) {\n\t\t\tmax = max + step;\n\t\t}\n\n\t\tif (min > initialMin) {\n\t\t\tmin = min - step;\n\t\t}\n\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", this.getPrivate(\"min\", 0));\n\t\tconst max = this.getPrivate(\"maxFinal\", this.getPrivate(\"max\", 1));\n\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\tlet max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\n\t\tlet min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\n\n\t\tif ($type.isNumber(max) && $type.isNumber(min)) {\n\t\t\treturn this.getPrivate(\"step\", 1) / (max - min);\n\t\t}\n\t\treturn 0.05;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic nextPosition(count?: number) {\n\t\tif (count == null) {\n\t\t\tcount = 1;\n\t\t}\n\n\t\tif (this.get(\"renderer\").getPrivate(\"letter\") == \"Y\") {\n\t\t\tcount *= -1;\n\t\t}\n\n\t\tlet value = this.positionToValue(this.getPrivate(\"tooltipPosition\", 0));\n\t\tvalue += this.getPrivate(\"step\", 1) * count;\n\t\tvalue = $math.fitToRange(value, this.getPrivate(\"selectionMin\", 0), this.getPrivate(\"selectionMax\", 1));\n\n\t\treturn this.toGlobalPosition(this.valueToPosition(value));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\n\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport { ValueAxis } from \"./ValueAxis\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * A key to look up in data for an id of the data item.\n\t */\n\tidField?: string;\n\n\t/**\n\t * A key to look up in data for a relative size value of the data item. \n\t */\n\tcellSizeField?: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n\t/**\n\t * A size of the category cell.\n\t *\n\t * NOTE: This value is used only if `cellSizeField` is set on the series.\n\t */\n\tcellSize?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tfinalCellSize?: number;\n\n\t/**\n\t * A unique id of the data item.\n\t */\n\tid?: string;\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\", \"id\", \"cellSize\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _afterDataChange(): void {\n\t\tsuper._afterDataChange();\n\t\tconst len = this.dataItems.length;\n\t\tif (len > 0) {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\t// fix final indexes\t\t\n\t\tthis.setPrivateRaw(\"startIndex\", Math.min(this.getPrivate(\"startIndex\", 0), len));\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(this.getPrivate(\"endIndex\", len), 1));\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\tthis._itemMap = {};\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\t\n\t\tlet indices = this._getIndices(start, end);\n\n\t\tthis.setPrivateRaw(\"startIndex\", indices.startIndex);\n\t\tthis.setPrivateRaw(\"endIndex\", indices.endIndex);\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic adjustZoom(): void {\n\t\tconst len = this.dataItems.length;\n\t\tif (len > 1) {\n\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\", this.dataItems.length);\n\t\t\tlet minZoomCount = this.get(\"minZoomCount\", 1);\n\n\t\t\tlet count = 0;\n\t\t\tlet startIndex = this.getPrivate(\"startIndex\", 0);\n\t\t\tlet endIndex = this.getPrivate(\"endIndex\", 0);\n\n\t\t\tconst sAnimation = this._sAnimation;\n\t\t\tconst eAnimation = this._eAnimation;\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet getIndices = false;\n\t\t\tif (sAnimation && !sAnimation.stopped) {\n\t\t\t\tstart = Number(sAnimation.to);\n\t\t\t\tgetIndices = true;\n\t\t\t}\n\t\t\tlet end = this.get(\"end\", 1);\n\t\t\tif (eAnimation && !eAnimation.stopped) {\n\t\t\t\tend = Number(eAnimation.to);\n\t\t\t\tgetIndices = true;\n\t\t\t}\n\n\t\t\tif (getIndices) {\n\t\t\t\tconst indices = this._getIndices(start, end);\n\t\t\t\tstartIndex = indices.startIndex;\n\t\t\t\tendIndex = indices.endIndex;\n\t\t\t}\n\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tconst dataItem = this.dataItems[i];\n\t\t\t\tcount += dataItem.get(\"finalCellSize\", 1);\n\t\t\t};\n\n\t\t\tif (count <= minZoomCount) {\n\t\t\t\t// need to zoom out\n\t\t\t\tlet c = 0;\n\n\t\t\t\tfor (let i = startIndex; i < len; i++) {\n\t\t\t\t\tconst dataItem = this.dataItems[i];\n\t\t\t\t\tc += dataItem.get(\"finalCellSize\", 1);\n\n\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\tif (c >= minZoomCount) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (c < minZoomCount) {\n\t\t\t\t\t// still not enough, try to extend at the start\n\t\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\t\tconst dataItem = this.dataItems[i];\n\t\t\t\t\t\tc += dataItem.get(\"finalCellSize\", 1);\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tif (c >= minZoomCount) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.zoomToIndexes(startIndex, endIndex);\n\t\t\t}\n\t\t\telse if (count >= maxZoomCount) {\n\t\t\t\tlet c = count;\n\t\t\t\tfor (let i = endIndex - 1; i >= startIndex; i--) {\n\t\t\t\t\tconst dataItem = this.dataItems[i];\n\t\t\t\t\tc -= dataItem.get(\"finalCellSize\", 1);\n\t\t\t\t\tif (c <= maxZoomCount) {\n\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.zoomToIndexes(startIndex, endIndex);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\")!;\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\")!;\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis instanceof ValueAxis) {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfunction findDataItem(\n\t\t\t\t\t\t\tseries: XYSeries,\n\t\t\t\t\t\t\tcategoryAxis: CategoryAxis<any>,\n\t\t\t\t\t\t\tkey: string | undefined,\n\t\t\t\t\t\t\topenKey: string | undefined,\n\t\t\t\t\t\t\tcategory: string,\n\t\t\t\t\t\t\tdirection: \"previous\" | \"next\"\n\t\t\t\t\t\t): DataItem<IXYSeriesDataItem> | undefined {\n\t\t\t\t\t\t\tlet dataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\t\tlet idx = categoryAxis.categoryToIndex(category!);\n\n\t\t\t\t\t\t\twhile (!dataItem && idx >= 0 && idx < categoryAxis.dataItems.length) {\n\t\t\t\t\t\t\t\tlet searchCategory = categoryAxis.dataItems[idx].get(\"category\");\n\t\t\t\t\t\t\t\tif (direction == \"previous\") {\n\t\t\t\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\t\t\t\tlet item = series.dataItems[i];\n\t\t\t\t\t\t\t\t\t\tif (key && item.get(key as any) === searchCategory) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem = item;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (openKey && item.get(openKey as any) === searchCategory) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem = item;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\t\t\t\tlet item = series.dataItems[i];\n\t\t\t\t\t\t\t\t\t\tif (key && item.get(key as any) === searchCategory) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem = item;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (openKey && item.get(openKey as any) === searchCategory) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem = item;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (!dataItem) {\n\t\t\t\t\t\t\t\t\tidx += direction === \"previous\" ? -1 : 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn dataItem;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstartDataItem = findDataItem(series, this, key, openKey, startCategory, \"next\");\n\t\t\t\t\t\tendDataItem = findDataItem(series, this, key, openKey, endCategory, \"previous\");\n\n\t\t\t\t\t\tlet startIndex = 0;\n\t\t\t\t\t\tlet endIndex = series.dataItems.length;\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tstartIndex = series.dataItems.indexOf(startDataItem);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tendIndex = series.dataItems.indexOf(endDataItem) + 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\n\t\t\t\t\t\tlet hasValue = false;\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\n\t\t\t\t\t\t\t$array.each(series.__valueXShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(series.__valueYShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tif (hasValue) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tseries.setPrivate(\"outOfSelection\", !hasValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1);\n\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\tlet count = frequency;\n\t\t\tif (minorGridEnabled) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, count);\n\n\t\t\tf++;\n\t\t}\n\n\t\tif (renderer.get(\"minorGridEnabled\")) {\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tif (i % frequency != 0) {\n\t\t\t\t\tthis._createAssets(dataItem, [\"minor\"], true);\n\t\t\t\t\tthis._toggleDataItem(dataItem, true);\n\t\t\t\t\tthis._prepareDataItem(dataItem, 0, 1);\n\n\t\t\t\t\tif (!minorLabelsEnabled) {\n\t\t\t\t\t\tdataItem.get(\"label\")?.setPrivate(\"visible\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\n\t\t\tif (!$type.isNumber(index)) {\n\t\t\t\tthis._toggleDataItem(dataItem, false);\n\t\t\t\treturn;\t\t\t\t\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number, final?: boolean): number {\n\t\tlet len = this.dataItems.length;\n\t\tlet position = 0;\n\n\t\tif (len == 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (index >= len) {\n\t\t\tindex = len - 1;\n\t\t\tlocation = 1;\n\t\t}\n\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tif (!this.get(\"cellSizeField\")) {\n\t\t\tlen -= startLocation;\n\t\t\tlen -= (1 - endLocation);\n\n\t\t\tposition = (index + location - startLocation) / len;\n\t\t}\n\t\telse {\n\t\t\tlet name: \"finalCellSize\" | \"cellSize\" = final ? \"finalCellSize\" : \"cellSize\";\n\n\t\t\tconst dataItems = this.dataItems;\n\n\t\t\t// Calculate total modified count (sum of cell sizes)\n\t\t\tlet modCount = 0;\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tmodCount += dataItem.get(name, 1);\n\t\t\t});\n\n\t\t\tmodCount -= startLocation * dataItems[0].get(name, 1);\n\t\t\tmodCount -= (1 - endLocation) * dataItems[dataItems.length - 1].get(name, 1);\n\n\t\t\t// Calculate the position based on cell sizes\n\t\t\tlet acc = 0;\n\t\t\tfor (let i = 0; i < index; i++) {\n\t\t\t\tacc += dataItems[i].get(name, 1);\n\t\t\t}\n\t\t\tlet cellSizeAtIndex = dataItems[index].get(name, 1);\n\n\t\t\tposition = (acc + location * cellSizeAtIndex - startLocation * dataItems[0].get(name, 1)) / modCount;\n\t\t}\n\n\t\tif (!final) {\n\t\t\tlet dataItem = this.dataItems[index];\n\t\t\tif (dataItem) {\n\t\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t\t}\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns a position of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Position\n\t */\n\tpublic categoryToPosition(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tposition += (0.5 - location) / this.dataItems.length;\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\tif (len === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Calculate total modified length (sum of cell sizes)\n\t\tif (this.get(\"cellSizeField\")) {\n\t\t\tlet modifiedLen = 0;\n\t\t\tlet cellSizes: number[] = [];\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst cellSize = dataItem.get(\"cellSize\", 1);\n\t\t\t\tcellSizes.push(cellSize);\n\t\t\t\tmodifiedLen += cellSize;\n\t\t\t});\n\t\t\t// Adjust for startLocation and endLocation\n\t\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\t\tlet endLocation = this.get(\"endLocation\", 1);\n\t\t\tmodifiedLen -= startLocation;\n\t\t\tmodifiedLen -= (1 - endLocation);\n\n\t\t\t// Find which cell the position falls into\n\t\t\tlet rel = position * modifiedLen + startLocation;\n\t\t\tlet acc = 0;\n\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\tconst cellSize = cellSizes[i];\n\t\t\t\tif (rel < acc + cellSize) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t\tacc += cellSize;\n\t\t\t}\n\t\t\treturn len - 1;\n\t\t}\n\t\telse {\n\t\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);\n\t\t}\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif (label) {\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _getIndices(start: number, end: number): { startIndex: number, endIndex: number } {\n\t\tlet len = this.dataItems.length;\n\t\tlet startIndex = 0;\n\t\tlet endIndex = len;\n\t\tlet name: \"cellSize\" | \"finalCellSize\" = \"cellSize\";\n\n\t\tif (this.get(\"cellSizeField\")) {\n\t\t\tlet count = 0;\n\t\t\tconst dataItems = this.dataItems;\n\t\t\tif(dataItems.length == 0){\n\t\t\t\treturn { startIndex: 0, endIndex: 0 };\n\t\t\t}\n\n\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\tcount += dataItem.get(name, 1);\n\t\t\t});\n\n\t\t\tcount -= this.get(\"startLocation\", 0) * dataItems[0].get(name, 1);\n\t\t\tcount -= (1 - this.get(\"endLocation\", 1)) * dataItems[dataItems.length - 1].get(name, 1);\n\n\t\t\tlet c = 0;\n\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\tc += this.dataItems[i].get(name, 1);\n\t\t\t\tif (Math.round(c) > Math.round(start * count)) {\n\t\t\t\t\tstartIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let i = startIndex + 1; i < len; i++) {\n\t\t\t\tc += this.dataItems[i].get(name, 1);\n\t\t\t\tif (Math.round(c) >= Math.round(end * count)) {\n\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstartIndex = Math.max(startIndex, 0);\n\t\t\tendIndex = Math.min(endIndex, len);\n\t\t}\n\t\telse {\n\t\t\tstartIndex = Math.max(Math.round(this.get(\"start\", 0) * len), 0);\n\t\t\tendIndex = Math.min(Math.round(this.get(\"end\", 1) * len), len);\n\t\t}\n\n\t\treturn { startIndex, endIndex };\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tif (this.get(\"cellSizeField\")) {\n\t\t\tstart = Math.min(Math.max(start, 0), len);\n\t\t\tend = Math.max(Math.min(end, len), 1);\n\t\t\tthis.setPrivateRaw(\"startIndex\", start);\n\t\t\tthis.setPrivateRaw(\"endIndex\", end);\n\t\t\tthis.zoom(this.indexToPosition(start, 0, true), this.indexToPosition(end, 0, true), duration);\n\t\t}\n\t\telse {\n\t\t\tthis.zoom(start / len, end / len, duration);\n\t\t}\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n\n\t/**\n\t * Returns position span between start and end of a single cell in axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn this._frequency / this.dataItems.length / (this.get(\"end\", 1) - this.get(\"start\", 0));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic nextPosition(count?: number) {\n\t\tif (count == null) {\n\t\t\tcount = 1;\n\t\t}\n\n\t\tif (this.get(\"renderer\").getPrivate(\"letter\") == \"Y\") {\n\t\t\tcount *= -1;\n\t\t}\n\n\t\tconst position = this.getPrivate(\"tooltipPosition\", 0);\n\n\t\tconst index = $math.fitToRange(this.axisPositionToIndex(position) + count, 0, this.dataItems.length - 1);\n\t\treturn this.toGlobalPosition(this.indexToPosition(index));\n\t}\n}\n","import type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\n//import type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport type { IDisposer } from \"../../../core/util/Disposer\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../../core/render/Series\";\nimport { List } from \"../../../core/util/List\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\nexport interface IXYSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Kicks in when axis starts using different data set, e.g. data\n\t * of different granularit on [[DateAxis]].\n\t *\n\t * @since 5.1.1\n\t */\n\tdatasetchanged: {\n\t\tid: string\n\t}\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueX?: number;\n\thighValueXWorking?: number;\n\thighValueXChange?: number;\n\thighValueXChangePercent?: number;\n\thighValueXChangeSelection?: number;\n\thighValueXChangeSelectionPercent?: number;\n\thighValueXChangePrevious?: number;\n\thighValueXChangePreviousPercent?: number;\n\thighValueXWorkingOpen?: number;\n\thighValueXWorkingClose?: number;\n\n\tlowValueY?: number;\n\tlowValueYWorking?: number;\n\tlowValueYChange?: number;\n\tlowValueYChangePercent?: number;\n\tlowValueYChangeSelection?: number;\n\tlowValueYChangeSelectionPercent?: number;\n\tlowValueYChangePrevious?: number;\n\tlowValueYChangePreviousPercent?: number;\n\tlowValueYWorkingOpen?: number;\n\tlowValueYWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n\n\toriginals?: Array<DataItem<IXYSeriesDataItem>>;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * If this is set to `true`, data items will ignore `locationX` setting\n\t * but will place the data point at exact X value.\n\t * \n\t * This works with [[DateAxis]] only.\n\t * \n\t * On a `ColumnSeries`/`CandlestickSeries` this setting will affect bullets\n\t * only.\n\t *\n\t * @default false\n\t * @since 5.13.0\n\t */\n\texactLocationX?: boolean;\n\n\t/**\n\t * If this is set to `true`, data items will ignore `locationX` setting\n\t * but will place the data point at exact Y value.\n\t * \n\t * This works with [[DateAxis]] only.\n\t * \n\t * On a `ColumnSeries`/`CandlestickSeries` this setting will affect bullets\n\t * only.\n\t *\n\t * @default false\n\t * @since 5.13.0\n\t */\n\texactLocationY?: boolean;\n\n\t/**\n\t * If set to `true` series will use selection extremes when calculating\n\t * their min and max values of the axis. Useful for stacked series.\n\t *\n\t * @since 5.10.11\n\t */\n\tuseSelectionExtremes?: boolean;\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t *\n\t * **IMPORTANT:** `xAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t *\n\t * **IMPORTANT:** `yAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * NOTE: for series stack properly, all stacked series must have same number\n\t * of data items with the same timestamp/category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * If set to `true` data items for this series won't be grouped even if\n\t * the `groupData: true` is set on a related [[DateAxis]].\n\t * \n\t * @since 5.0.19\n\t */\n\tgroupDataDisabled?: boolean;\n\n\t/**\n\t * A [[DataItem]] that is being used for current tooltip, e.g. by a chart\n\t * cursor.\n\t *\n\t * @since 5.1.2\n\t */\n\ttooltipDataItem?: DataItem<IXYSeriesDataItem>\n\n\t/**\n\t * If set to `true`, when data is grouped, the `originals` setting of the\n\t * group data items will be populated by the original (source) data items\n\t * that fall into the group.\n\t *\n\t * Please note that if `groupDataCallback` is set, this setting is ignored\n\t * as originals will always be included, regardless of the value.\n\t *\n\t * @since 5.1.11\n\t * @default false\n\t */\n\tgroupDataWithOriginals?: boolean;\n\n\t/**\n\t * A custom function to call when grouping data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Custom_aggregation_functions} for more info\n\t * @since 5.1.11\n\t */\n\tgroupDataCallback?: (dataItem: DataItem<IXYSeriesDataItem>, interval: ITimeInterval) => void;\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n\n\toutOfSelection?: boolean;\n\n\tdoNotUpdateLegend?: boolean;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\tdeclare public _events: IXYSeriesEvents;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tpublic _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\tpublic _bullets: { [index: string]: Sprite } = {};\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\",\n\t\t\"lowValueX\",\n\t\t\"highValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\",\n\t\t\"lowValueY\",\n\t\t\"highValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tpublic __valueXShowFields!: Array<string>;\n\tpublic __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tpublic _posXDp?: IDisposer;\n\tpublic _posYDp?: IDisposer;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\n\n\t\tsuper._afterNew();\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis.onPrivate(\"startIndex\", () => {\n\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\tthis.updateLegendValue();\n\t\t\t})\n\t\t})\n\n\t\tthis.onPrivate(\"endIndex\", () => {\n\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\tthis.updateLegendValue();\n\t\t\t})\n\t\t})\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _onDataClear(): void {\n\t\tsuper._onDataClear();\n\t\t$object.each(this._dataSets, (_key, dataItems) => {\n\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\tdataItem.dispose();\n\t\t\t});\n\t\t\tdataItems.length = 0;\n\t\t});\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxisDataItem.dispose();\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueXShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tthis._bullets = {};\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tif (!xAxis.inited || !yAxis.inited) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\tif (minBulletDistance > 0) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\n\t\t\tlet count = endIndex - startIndex;\n\n\t\t\tif (xAxis == baseAxis) {\n\t\t\t\tif (xAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (yAxis == baseAxis) {\n\t\t\t\tif (yAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\tpublic _fixPosition() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\n\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\tthis.bulletsContainer.set(\"x\", this.x());\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis._bullets = {};\n\n\t\tif (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\") || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\")) {\n\t\t\tthis._updateFields();\n\t\t\tthis._makeFieldNames();\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tif (this.isDirty(\"xAxis\") || this.isDirty(\"yAxis\")) {\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\n\t\tthis._fixPosition();\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tif (!this.get(\"tooltipDataItem\")) {\n\t\t\t\tthis.updateLegendValue(undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"adjustedStartIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._sizeDirty) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this.isPrivateDirty(\"adjustedStartIndex\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\t\t\t\tconst outOfSelection = this.getPrivate(\"outOfSelection\");\n\n\t\t\t\tif (baseAxis === xAxis || !baseAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (baseAxis === yAxis || !baseAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis || !baseAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\" || this.get(\"useSelectionExtremes\")) {\n\t\t\t\t\t\tconst selectionMinY = this.getPrivate(\"selectionMinY\");\n\t\t\t\t\t\tif (selectionMinY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", selectionMinY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxY = this.getPrivate(\"selectionMaxY\");\n\t\t\t\t\t\tif (selectionMaxY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", selectionMaxY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (baseAxis === yAxis || !baseAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\" || this.get(\"useSelectionExtremes\")) {\n\t\t\t\t\t\tconst selectionMinX = this.getPrivate(\"selectionMinX\");\n\t\t\t\t\t\tif (selectionMinX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", selectionMinX);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxX = this.getPrivate(\"selectionMaxX\")\n\t\t\t\t\t\tif (selectionMaxX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", selectionMaxX);\n\t\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tpublic _unstack() {\n\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tpublic _handleRemoved(): void {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\txAxis._handleSeriesRemoved();\n\t\t}\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\tyAxis._handleSeriesRemoved();\n\t\t}\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\n\t\t\t\t\t\t\t\tif (s == len - 1) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, undefined);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tlet exactLocationX = this.get(\"exactLocationX\", false);\n\t\t\tlet exactLocationY = this.get(\"exactLocationY\", false);\n\n\t\t\tlet positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1), exactLocationX);\n\t\t\tlet positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1), exactLocationY);\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tlet x = 0;\n\t\t\tlet y = 0;\n\n\t\t\tlet w = right - left;\n\t\t\tlet h = bottom - top;\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tsprite.setPrivate(\"visible\", !bullet.getPrivate(\"hidden\"));\n\n\t\t\t\tlet field = bullet.get(\"field\");\n\n\t\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\tif (field != undefined) {\n\t\t\t\t\tlet realField: string | undefined;\n\n\t\t\t\t\tif (baseAxis == xAxis) {\n\t\t\t\t\t\tif (field == \"value\") {\n\t\t\t\t\t\t\trealField = this._yField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"open\") {\n\t\t\t\t\t\t\trealField = this._yOpenField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"high\") {\n\t\t\t\t\t\t\trealField = this._yHighField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"low\") {\n\t\t\t\t\t\t\trealField = this._yLowField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (realField) {\n\t\t\t\t\t\t\tpositionY = yAxis.getDataItemPositionY(dataItem, realField as any, 0, this.get(\"vcy\", 1), exactLocationY)\n\n\t\t\t\t\t\t\tpoint = yAxis.get(\"renderer\").positionToPoint(positionY);\n\n\t\t\t\t\t\t\ty = point.y;\n\t\t\t\t\t\t\tx = left + w * locationX;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (field == \"value\") {\n\t\t\t\t\t\t\trealField = this._xField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"open\") {\n\t\t\t\t\t\t\trealField = this._xOpenField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"high\") {\n\t\t\t\t\t\t\trealField = this._xHighField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"low\") {\n\t\t\t\t\t\t\trealField = this._xLowField;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (realField) {\n\t\t\t\t\t\t\tpositionX = xAxis.getDataItemPositionX(dataItem, realField as any, 0, this.get(\"vcx\", 1), exactLocationX);\n\n\t\t\t\t\t\t\tpoint = xAxis.get(\"renderer\").positionToPoint(positionX);\n\n\t\t\t\t\t\t\tx = point.x;\n\t\t\t\t\t\t\ty = bottom - h * locationY;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx = left + w * locationX;\n\t\t\t\t\ty = bottom - h * locationY;\n\t\t\t\t}\n\n\t\t\t\tconst stacked = bullet.get(\"stacked\");\n\t\t\t\tif (stacked) {\n\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\tif (baseAxis == xAxis) {\n\t\t\t\t\t\tlet previousBullet = this._bullets[positionX + \"_\" + positionY];\n\t\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\t\tlet previousBounds = previousBullet.bounds();\n\t\t\t\t\t\t\tlet bounds = sprite.localBounds();\n\t\t\t\t\t\t\tlet yo = y;\n\t\t\t\t\t\t\ty = previousBounds.top;\n\n\t\t\t\t\t\t\tif (stacked == \"down\") {\n\t\t\t\t\t\t\t\ty = previousBounds.bottom - bounds.top;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (stacked == \"auto\") {\n\t\t\t\t\t\t\t\tif (chart) {\n\t\t\t\t\t\t\t\t\tif (yo < chart.plotContainer.height() / 2) {\n\t\t\t\t\t\t\t\t\t\ty = previousBounds.bottom - bounds.top;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\ty += bounds.bottom;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ty += bounds.bottom;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._bullets[positionX + \"_\" + positionY] = sprite;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet previousBullet = this._bullets[positionX + \"_\" + positionY];\n\t\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\t\tlet previousBounds = previousBullet.bounds();\n\t\t\t\t\t\t\tlet bounds = sprite.localBounds();\n\t\t\t\t\t\t\tlet xo = x;\n\t\t\t\t\t\t\tx = previousBounds.right;\n\n\t\t\t\t\t\t\tif (stacked == \"down\") {\n\t\t\t\t\t\t\t\tx = previousBounds.left - bounds.right;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (stacked == \"auto\") {\n\t\t\t\t\t\t\t\tif (chart) {\n\t\t\t\t\t\t\t\t\tif (xo < chart.plotContainer.width() / 2) {\n\t\t\t\t\t\t\t\t\t\tx = previousBounds.left - bounds.right;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tx -= bounds.left;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tx -= bounds.left;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._bullets[positionX + \"_\" + positionY] = sprite;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.setPrivate(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.setPrivate(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tsprite.setAll({ x, y });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\n\t\t\tconst type = \"datasetchanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, id: id });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic resetGrouping() {\n\t\t$object.each(this._dataSets, (_key, dataSet) => {\n\t\t\tif (dataSet != this._mainDataItems) {\n\t\t\t\t$array.each(dataSet, (dataItem) => {\n\t\t\t\t\tdataItem.dispose();\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t\tthis._dataSets = {};\n\t\tthis._dataItems = this.mainDataItems;\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tlet bullets = dataItem.bullets;\n\t\t\tif (bullets) {\n\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\n\t\tthis._selectionProcessed = false; // for totals to be calculated\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tlet hiddenState = this.states.lookup(\"hidden\");\n\t\tif (!hiddenState) {\n\t\t\thiddenState = this.states.create(\"hidden\", {});\n\t\t}\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tif (!value._stackDirty) {\n\t\t\t\t\tvalue._markDirtyStack();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tif (!this.getPrivate(\"doNotUpdateLegend\")) {\n\t\t\tthis.updateLegendMarker(dataItem);\n\t\t\tthis.updateLegendValue(dataItem);\n\t\t}\n\n\t\tconst tooltip = this.get(\"tooltip\");\n\n\t\tconst exactLocationX = this.get(\"exactLocationX\", false);\n\t\tconst exactLocationY = this.get(\"exactLocationY\", false);\n\n\t\tif (tooltip) {\n\t\t\tif (!this.isHidden() && this.get(\"visible\")) {\n\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx, exactLocationX);\n\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy, exactLocationY);\n\n\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\tlet show = true;\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic hideTooltip(): Promise<void> | undefined {\n\t\tconst tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.set(\"tooltipTarget\", this);\n\t\t}\n\t\treturn super.hideTooltip();\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem?: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\t// if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\n\t\tlet max = 999999999;\n\t\tif (y < -max) {\n\t\t\ty = -max;\n\t\t}\n\t\tif (y > max) {\n\t\t\ty = max;\n\t\t}\n\n\t\tif (x < -max) {\n\t\t\tx = -max;\n\t\t}\n\t\tif (x > max) {\n\t\t\tx = max;\n\t\t}\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tprotected _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.get(\"xAxis\")._markDirtyKey(\"start\");\n\t\tthis.get(\"yAxis\")._markDirtyKey(\"start\");\n\t\tthis.resetExtremes();\n\t}\n\n\n\t/**\n\t * Resets cached axis scale values.\n\t */\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n\n\t/**\n\t * A list of series's main (ungrouped) data items.\n\t *\n\t * @return  Data items\n\t */\n\tpublic get mainDataItems(): Array<DataItem<this[\"_dataItemSettings\"]>> {\n\t\treturn this._mainDataItems;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _adjustStartIndex(index: number): number {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tif (baseAxis == xAxis && xAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\tconst baseDuration = xAxis.baseDuration();\n\t\t\tconst minSelection = xAxis.getPrivate(\"selectionMin\", xAxis.getPrivate(\"min\", 0));\n\t\t\tconst dl = baseDuration * this.get(\"locationX\", 0.5);\n\n\t\t\tlet value = -Infinity;\n\n\t\t\twhile (value < minSelection) {\n\t\t\t\tconst dataItem = this.dataItems[index];\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tconst open = dataItem.open;\n\t\t\t\t\tif (open) {\n\t\t\t\t\t\tvalue = open[\"valueX\"];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue = dataItem.get(\"valueX\", 0);\n\t\t\t\t\t}\n\t\t\t\t\tvalue += dl;\n\n\t\t\t\t\tif (value < minSelection) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { IAxisDataItem } from \"../axes/Axis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?: boolean;\n\n\t/**\n\t * If set to `true` will use color of the last visible column for legend\n\t * marker. Otherwise, series `fill`/`stroke` will be used.\n\t *\n\t * @since 5.1.13\n\t */\n\tuseLastColorForLegendMarker?: boolean\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tprotected _columnsUpdated: boolean = false;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst len = this.dataItems.length;\n\t\tconst startIndex = Math.max(0, this.startIndex() - 2);\n\t\tconst endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tthis._createGraphics(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"fillPattern\")) {\n\t\t\tif (columnsTemplate.get(\"fillPattern\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fillPattern\", this.get(\"fillPattern\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.startIndex() - 2);\n\t\t\t\tlet endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\tif (i > 0 && startIndex > 0) {\n\t\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\t\tlet dataItem = this.dataItems[j];\n\t\t\t\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._beforeColumnsDraw();\n\n\t\t\t\tlet axisCase: 0 | 1 | 2 = 0;\n\n\t\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\t\t\t\t\taxisCase = 2;\n\t\t\t\t}\n\t\t\t\telse if (xAxis === baseAxis) {\n\t\t\t\t\taxisCase = 0;\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\taxisCase = 1;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous, axisCase);\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._afterColumnsDraw();\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tthis._columnsUpdated = true;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\t\tif (!this.getPrivate(\"doNotUpdateLegend\")) {\n\t\t\tthis.updateLegendMarker(this.get(\"tooltipDataItem\"));\n\t\t}\n\t\tsuper._updateChildren();\n\t}\n\n\tpublic _afterChanged(): void {\n\t\tsuper._afterChanged();\n\t\tthis._columnsUpdated = false;\n\t}\n\tprotected _beforeColumnsDraw() {\n\n\t}\n\n\tprotected _afterColumnsDraw() {\n\n\t}\n\n\n\tprotected _createGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\t\tif (!graphics) {\n\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tconst ds = markerRectangle.states.lookup(\"default\")!;\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tconst value = graphics!.get(setting, this.get(setting));\n\t\t\t\t\t\tmarkerRectangle.set(setting, value);\n\t\t\t\t\t\tds.set(setting, value);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet graphicsArray: Array<Graphics> | undefined = dataItem.get(\"rangeGraphics\");\n\t\t\tif (graphicsArray) {\n\t\t\t\t$array.each(graphicsArray, (graphics) => {\n\t\t\t\t\tgraphics.dispose();\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tgraphicsArray = [];\n\t\t\tdataItem.setRaw(\"rangeGraphics\", graphicsArray);\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tif (graphicsArray) {\n\t\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\t}\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tconst graphics = dataItem.get(\"graphics\");\n\t\t\tif (graphics) {\n\t\t\t\tgraphics.dispose();\n\t\t\t\tdataItem.set(\"graphics\", undefined);\n\t\t\t}\n\t\t})\n\n\t\treturn super.createAxisRange(axisDataItem);\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>, axisCase: 0 | 1 | 2) {\n\t\tlet graphics = dataItem.get(\"graphics\")!;\n\n\t\t//if (!graphics) {\n\t\t//\tthis._createGraphics(dataItem);\n\t\t//\tgraphics = dataItem.get(\"graphics\")!;\n\t\t//}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tconst exactLocationX = this.get(\"exactLocationX\", false);\n\t\t//const exactLocationY = this.get(\"exactLocationY\", false);\t\t\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\n\t\t\tif (axisCase == 0) {\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx, exactLocationX);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx, exactLocationX);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (axisCase == 1) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx, exactLocationX);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx, exactLocationX);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"), exactLocationX);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (axisCase == 2) {\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b <= yStart) || (t >= yEnd && b > yEnd) || $type.isNaN(l) || $type.isNaN(t)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\n\t\tif (tooltipPoint) {\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (this.get(\"adjustBulletPosition\")) {\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tpublic _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tlet legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (this.get(\"useLastColorForLegendMarker\")) {\n\t\t\tif (!dataItem) {\n\t\t\t\tconst lastDataItem = this.dataItems[this.endIndex() - 1];\n\t\t\t\tif (lastDataItem) {\n\t\t\t\t\tdataItem = lastDataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\tconst ds = markerRectangle.states.lookup(\"default\")!;\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tconst value = graphics.get(setting, this.get(setting));\n\t\t\t\t\t\tmarkerRectangle.set(setting, value);\n\t\t\t\t\t\tds.set(setting, value);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\r\nimport type { Color } from \"../../../core/util/Color\";\r\n\r\nimport { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\nimport { Graphics } from \"../../../core/render/Graphics\";\r\n\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings {\r\n\r\n\t/**\r\n\t * Enables \"turbo mode\" of rendering.\r\n\t * \r\n\t * If enabled, the columsn will be drawn directly on canvas, rather than\r\n\t * each individually, significantly speeding up the rendering. Especially\r\n\t * on column-heavy charts.\r\n\t *\r\n\t * NOTE: this is an experimental feature and may not work in all setups. Some\r\n\t * features might be disabled, too, e.g. pointer events and rounded corners.\r\n\t *\r\n\t * @since 5.14.0\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Turbo_mode} for more info\r\n\t */\r\n\tturboMode?: boolean;\r\n\r\n}\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\t/**\r\n\t * A list of actual columns in a range.\r\n\t */\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\tpublic allColumns: Graphics = this.children.push(Graphics.new(this._root, {}));\r\n\tpublic allColumnsData: Array<{ width: number, height: number, x: number, y: number, lowX0?: number, lowY0?: number, lowX1?: number, lowY1?: number, highX0?: number, highY0?: number, highX1?: number, highY1?: number, stroke?: Color, fill?: Color, strokeWidth: number, strokeOpacity: number, fillOpacity: number }> = [];\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = listTemplate.make();\r\n\t\tif (!this.get(\"turboMode\")) {\r\n\t\t\tthis.mainContainer.children.push(column);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcolumn.virtualParent = this.chart;\r\n\t\t}\r\n\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = this.addDisposer(new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t));\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n\r\n\tprotected _beforeColumnsDraw() {\r\n\t\tthis.allColumnsData = [];\r\n\t}\r\n\r\n\tprotected _afterColumnsDraw() {\r\n\t\tif (this.get(\"turboMode\")) {\r\n\r\n\t\t\tthis.allColumns.set(\"draw\", (display) => {\r\n\t\t\t\tdisplay.clear();\r\n\r\n\t\t\t\t$array.each(this.allColumnsData, (column) => {\r\n\t\t\t\t\tconst w = column.width;\r\n\t\t\t\t\tconst h = column.height;\r\n\t\t\t\t\tconst x = column.x;\r\n\t\t\t\t\tconst y = column.y;\r\n\t\t\t\t\tconst stroke = column.stroke;\r\n\t\t\t\t\tconst fill = column.fill;\r\n\t\t\t\t\tconst strokeWidth = column.strokeWidth;\r\n\t\t\t\t\tconst strokeOpacity = column.strokeOpacity;\r\n\t\t\t\t\tconst fillOpacity = column.fillOpacity;\r\n\r\n\t\t\t\t\tdisplay.beginFill(fill, fillOpacity);\r\n\t\t\t\t\tdisplay.beginPath();\r\n\t\t\t\t\tdisplay.lineStyle(strokeWidth, stroke, strokeOpacity);\r\n\t\t\t\t\tdisplay.drawRect(x, y, w, h);\r\n\t\t\t\t\tdisplay.endStroke();\r\n\t\t\t\t\tdisplay.endFill();\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\r\n\t\tif (this.get(\"turboMode\")) {\r\n\t\t\tconst stroke = graphics.get(\"stroke\");\r\n\t\t\tconst fillOpacity = graphics.get(\"fillOpacity\", 1);\r\n\t\t\tconst strokeOpacity = graphics.get(\"strokeOpacity\", 1);\r\n\t\t\tconst strokWidth = graphics.get(\"strokeWidth\", 1);\r\n\t\t\tconst fill = graphics.get(\"fill\");\r\n\r\n\t\t\tconst ptl = this.getPoint(l, t);\r\n\t\t\tconst pbr = this.getPoint(r, b);\r\n\r\n\t\t\tconst tooltipPoint = dataItem.get(\"point\");\r\n\r\n\t\t\tif (tooltipPoint) {\r\n\t\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\r\n\t\t\t\ttooltipPoint.x = point.x + this._x;\r\n\t\t\t\ttooltipPoint.y = point.y + this._y;\r\n\t\t\t}\r\n\r\n\t\t\tl = ptl.x;\r\n\t\t\tr = pbr.x;\r\n\r\n\t\t\tt = ptl.y;\r\n\t\t\tb = pbr.y;\r\n\r\n\t\t\tdataItem.setRaw(\"left\", l);\r\n\t\t\tdataItem.setRaw(\"right\", r);\r\n\t\t\tdataItem.setRaw(\"top\", t);\r\n\t\t\tdataItem.setRaw(\"bottom\", b);\r\n\r\n\t\t\tthis.allColumnsData.push({ width: r - l, height: b - t, x: l, y: t, stroke: stroke, fill: fill, strokeWidth: strokWidth, strokeOpacity: strokeOpacity, fillOpacity: fillOpacity });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsuper._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\r\n\t\t}\r\n\t}\r\n}\r\n","export var slice = Array.prototype.slice;\n\nexport default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x, y) {\n  var defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null,\n      path = withPath(line);\n\n  x = typeof x === \"function\" ? x : (x === undefined) ? pointX : constant(x);\n  y = typeof y === \"function\" ? y : (y === undefined) ? pointY : constant(y);\n\n  function line(data) {\n    var i,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x0, y0, y1) {\n  var x1 = null,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null,\n      path = withPath(area);\n\n  x0 = typeof x0 === \"function\" ? x0 : (x0 === undefined) ? pointX : constant(+x0);\n  y0 = typeof y0 === \"function\" ? y0 : (y0 === undefined) ? constant(0) : constant(+y0);\n  y1 = typeof y1 === \"function\" ? y1 : (y1 === undefined) ? pointY : constant(+y1);\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","import type { Axis } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport { CurveFactory, line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { color } from \"../../../core/util/Color\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IPointOptions {\n}\n\nexport interface ILineSeriesDataItem extends IXYSeriesDataItem {\n}\n\nexport interface ILineSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * If set to `true` the line will connect over \"gaps\" - categories or time\n\t * intervals with no data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Gaps} for more info\n\t * @default true\n\t */\n\tconnect?: boolean;\n\n\t/**\n\t * If there are more than `autoGapCount` base time intervals (e.g. days) with\n\t * no data, the line will break and will display gap.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Auto_gaps_with_dates} for more info\n\t * @default 1.1\n\t */\n\tautoGapCount?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcurveFactory?: CurveFactory;\n\n\t/**\n\t * Allows simplifying the line with many points.\n\t *\n\t * If set, the series will skip points that are closer than X pixels to each\n\t * other.\n\t *\n\t * With many data points, this allows having smoother, less cluttered lines.\n\t *\n\t * @default 0\n\t * @since 5.2.7\n\t */\n\tminDistance?: number;\n\n\n}\n\nexport interface ILineSeriesPrivate extends IXYSeriesPrivate {\n}\n\n/**\n * Interface representing a [[LineSeries]] axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface ILineSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list template to use when applying line settings to the line segments covered\n\t * by an axis range.\n\t */\n\tstrokes?: ListTemplate<Graphics>;\n\n\t/**\n\t * A list template to use when applying fill settings to the fill segments covered\n\t * by an axis range.\n\t */\n\tfills?: ListTemplate<Graphics>;\n}\n\n/**\n * Used to plot line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\n * @important\n */\nexport class LineSeries extends XYSeries {\n\n\tdeclare public _settings: ILineSeriesSettings;\n\tdeclare public _privateSettings: ILineSeriesPrivate;\n\tdeclare public _dataItemSettings: ILineSeriesDataItem;\n\tdeclare public _axisRangeType: ILineSeriesAxisRange;\n\n\tpublic static className: string = \"LineSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([LineSeries.className]);\n\n\tprotected _endIndex!: number;\n\n\tprotected _strokeGenerator = line();\n\tprotected _fillGenerator = area();\n\n\tprotected _legendStroke?: Graphics;\n\tprotected _legendFill?: Graphics;\n\n\tprotected _afterNew() {\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeStroke(strokes: ListTemplate<Graphics>): Graphics {\n\t\tconst stroke = this.mainContainer.children.push(strokes.make());\n\t\tstrokes.push(stroke);\n\t\treturn stroke;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all line segments in series.\n\t *\n\t * `strokes.template` can be used to set default settings for all line\n\t * segments, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly strokes: ListTemplate<Graphics> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n\t\t}, [this.strokes.template]),\n\t));\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeFill(fills: ListTemplate<Graphics>): Graphics {\n\t\tconst fill = this.mainContainer.children.push(fills.make());\n\t\tfills.push(fill);\n\t\treturn fill;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all segment fills in series.\n\t *\n\t * `fills.template` can be used to set default settings for all segment\n\t * fills, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly fills: ListTemplate<Graphics> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n\t\t}, [this.fills.template]),\n\t));\n\n\t// custom set from data\n\tprotected _fillTemplate: Template<Graphics> | undefined;\n\tprotected _strokeTemplate: Template<Graphics> | undefined;\n\n\tprotected _previousPoint: Array<number> = [0, 0, 0, 0];\n\n\tprotected _dindex = 0;\n\tprotected _sindex = 0;\n\n\tpublic _updateChildren() {\n\n\t\tthis._strokeTemplate = undefined;\n\t\tthis._fillTemplate = undefined;\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tconst stroke = this.get(\"stroke\");\n\t\t\tthis.strokes.template.set(\"stroke\", stroke);\n\t\t\tconst legendStroke = this._legendStroke;\n\t\t\tif (legendStroke) {\n\t\t\t\tlegendStroke.states.lookup(\"default\")!.set(\"stroke\", stroke);\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tthis.fills.template.set(\"fill\", fill);\n\t\t\tconst legendFill = this._legendFill;\n\t\t\tif (legendFill) {\n\t\t\t\tlegendFill.states.lookup(\"default\")!.set(\"fill\", fill);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"fillPattern\")) {\n\t\t\tconst fillPattern = this.get(\"fillPattern\");\n\t\t\tthis.fills.template.set(\"fillPattern\", fillPattern);\n\t\t\tconst legendFill = this._legendFill;\n\t\t\tif (legendFill) {\n\t\t\t\tlegendFill.states.lookup(\"default\")!.set(\"fillPattern\", fillPattern);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"curveFactory\")) {\n\t\t\tconst curveFactory = this.get(\"curveFactory\")!;\n\t\t\tif (curveFactory) {\n\t\t\t\tthis._strokeGenerator.curve(curveFactory);\n\t\t\t\tthis._fillGenerator.curve(curveFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n\n\t\t\t\tthis.fills.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.strokes.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tlet fills = axisRange.fills;\n\t\t\t\t\tif (fills) {\n\t\t\t\t\t\tfills.each((fill) => {\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tlet strokes = axisRange.strokes;\n\t\t\t\t\tif (strokes) {\n\t\t\t\t\t\tstrokes.each((stroke) => {\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet startIndex = this.startIndex();\n\n\t\t\t\tlet strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\t\t\tlet fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\t\t\tlet strokeTemplateFound = true;\n\t\t\t\tlet fillTemplateFound = true;\n\n\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\tstrokeTemplateFound = false;\n\t\t\t\t}\n\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\tfillTemplateFound = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\tlet dataContext = dataItem.dataContext as any;\n\t\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\t\tif (dataContext[strokeTemplateField]) {\n\t\t\t\t\t\t\tstrokeTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\t\tif (dataContext[fillTemplateField]) {\n\t\t\t\t\t\t\tfillTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (hasValues && strokeTemplateFound && fillTemplateFound) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tlet len = this.dataItems.length;\n\t\t\t\tlet endIndex = this.endIndex();\n\n\t\t\t\tif (endIndex < len) {\n\t\t\t\t\tendIndex++;\n\t\t\t\t\tfor (let i = endIndex; i < len; i++) {\n\t\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (hasValues) {\n\t\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\tstartIndex--;\n\t\t\t\t}\n\n\t\t\t\tthis._endIndex = endIndex;\n\n\t\t\t\tthis._clearGraphics();\n\t\t\t\tthis._sindex = 0;\n\t\t\t\tthis._dindex = startIndex;\n\t\t\t\tif (this.dataItems.length == 1) {\n\t\t\t\t\tthis._startSegment(0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// this is done to avoid recursion with a lot of segments\n\t\t\t\t\twhile (this._dindex < endIndex - 1) {\n\t\t\t\t\t\tthis._startSegment(this._dindex);\n\t\t\t\t\t\tthis._sindex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _clearGraphics() {\n\t\tthis.strokes.clear();\n\t\tthis.fills.clear();\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\taxisRange.fills!.clear();\n\t\t\taxisRange.strokes!.clear();\n\t\t})\n\t}\n\n\tprotected _startSegment(dataItemIndex: number) {\n\t\tlet endIndex = this._endIndex;\n\t\tlet currentEndIndex = endIndex;\n\n\t\tconst autoGapCount = this.get(\"autoGapCount\")!;\n\t\tconst connect = this.get(\"connect\");\n\n\t\tconst fill = this.makeFill(this.fills);\n\n\t\tconst fillTemplate = this._fillTemplate;\n\t\tconst originalTemplate = this.fills.template;\n\t\tif (fillTemplate && fillTemplate != originalTemplate) {\n\t\t\tfill.template = fillTemplate;\n\t\t}\n\n\t\tfill.setPrivate(\"visible\", true);\n\n\t\tconst stroke = this.makeStroke(this.strokes);\n\n\t\tconst strokeTemplate = this._strokeTemplate;\n\t\tif (strokeTemplate && strokeTemplate != this.strokes.template) {\n\t\t\tstroke.template = strokeTemplate;\n\t\t}\n\n\t\tstroke.setPrivate(\"visible\", true);\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\t\tlet baseAxis = this.get(\"baseAxis\")!;\n\n\t\tlet vcx = this.get(\"vcx\", 1);\n\t\tlet vcy = this.get(\"vcy\", 1);\n\n\t\tlet xField = this._xField;\n\t\tlet yField = this._yField;\n\n\t\tlet xOpenField = this._xOpenField;\n\t\tlet yOpenField = this._yOpenField;\n\n\t\tconst xOpenFieldValue = this.get(\"openValueXField\");\n\t\tconst yOpenFieldValue = this.get(\"openValueYField\");\n\n\t\tif (!xOpenFieldValue) {\n\t\t\txOpenField = this._xField;\n\t\t}\n\n\t\tif (!yOpenFieldValue) {\n\t\t\tyOpenField = this._yField;\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tconst basePosX = xAxis.basePosition();\n\t\tconst basePosY = yAxis.basePosition();\n\n\t\tlet baseField: string;\n\t\tif (baseAxis === yAxis) {\n\t\t\tbaseField = this._yField;\n\t\t}\n\t\telse {\n\t\t\tbaseField = this._xField;\n\t\t}\n\n\t\tconst segments: Array<Array<Array<number>>> = [];\n\t\tlet points: Array<Array<number>> = [];\n\t\tsegments.push(points);\n\n\t\tconst strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\tconst fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\tlet locationX = this.get(\"locationX\", 0.5);\n\t\tlet locationY = this.get(\"locationY\", 0.5);\n\n\t\tlet openLocationX = this.get(\"openLocationX\", locationX);\n\t\tlet openLocationY = this.get(\"openLocationY\", locationY);\n\n\t\tconst minDistance = this.get(\"minDistance\", 0);\n\n\t\tlet i: number;\n\n\t\tlet fillVisible = this.fills.template.get(\"visible\");\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tfillVisible = true;\n\t\t}\n\n\t\tlet getOpen = false;\n\t\tif (stacked || xOpenFieldValue || yOpenFieldValue) {\n\t\t\tgetOpen = true;\n\t\t}\n\n\t\tconst o = {\n\t\t\tpoints, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY, minDistance\n\t\t}\n\n\n\t\tlet rangeStrokeTemplate = this._strokeTemplate;\n\t\tlet rangeFillTemplate = this._fillTemplate;\n\n\t\tfor (i = dataItemIndex; i < currentEndIndex; i++) {\n\t\t\tthis._dindex = i;\n\t\t\tconst dataItem = this._dataItems[i];\n\n\t\t\tlet valueX = dataItem.get(xField as any);\n\t\t\tlet valueY = dataItem.get(yField as any);\n\n\t\t\tif (valueX == null || valueY == null) {\n\t\t\t\tif (!connect) {\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tsegments.push(points);\n\t\t\t\t\to.points = points;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getPoints(dataItem, o);\n\t\t\t}\n\n\t\t\tif (strokeTemplateField) {\n\t\t\t\tlet strokeTemplate = (dataItem.dataContext as any)[strokeTemplateField]\n\t\t\t\tif (strokeTemplate) {\n\t\t\t\t\tif (!(strokeTemplate instanceof Template)) {\n\t\t\t\t\t\tstrokeTemplate = Template.new(strokeTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._strokeTemplate = strokeTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\trangeStrokeTemplate = strokeTemplate;\n\t\t\t\t\t\tstroke.template = strokeTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillTemplateField) {\n\t\t\t\tlet fillTemplate = (dataItem.dataContext as any)[fillTemplateField]\n\t\t\t\tif (fillTemplate) {\n\t\t\t\t\tif (!(fillTemplate instanceof Template)) {\n\t\t\t\t\t\tfillTemplate = Template.new(fillTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fillTemplate = fillTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\trangeFillTemplate = fillTemplate;\n\t\t\t\t\t\tfill.template = fillTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!connect) {\n\t\t\t\tlet nextItem = this.dataItems[i + 1];\n\t\t\t\tif (nextItem) {\n\t\t\t\t\tif (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n\t\t\t\t\t\tpoints = [];\n\t\t\t\t\t\tsegments.push(points);\n\t\t\t\t\t\to.points = points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\n\t\tif (i === endIndex) {\n\t\t\tthis._endLine(points, segments[0][0]);\n\t\t}\n\n\t\tif (stroke) {\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t}\n\n\t\tif (fill) {\n\t\t\tthis._drawFill(fill, segments);\n\t\t}\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tconst container = axisRange.container;\n\t\t\tconst fills = axisRange.fills!;\n\t\t\tconst fill = this.makeFill(fills);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(fill);\n\t\t\t}\n\n\t\t\tfill.setPrivate(\"visible\", true);\n\t\t\tthis._drawFill(fill, segments);\n\n\t\t\tconst strokes = axisRange.strokes!;\n\t\t\tconst stroke = this.makeStroke(strokes);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(stroke);\n\t\t\t}\n\n\t\t\tif (rangeStrokeTemplate && rangeStrokeTemplate != this.strokes.template) {\n\t\t\t\tstroke.template = rangeStrokeTemplate;\n\t\t\t}\n\n\t\t\tif (rangeFillTemplate && rangeFillTemplate != this.fills.template) {\n\t\t\t\tfill.template = rangeFillTemplate;\n\t\t\t}\n\n\t\t\tstroke.setPrivate(\"visible\", true);\n\t\t\tthis._drawStroke(stroke, segments);\n\n\t\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t})\n\t}\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number, minDistance: number }) {\n\t\tlet points = o.points;\n\n\t\tlet itemLocationX = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY = dataItem.get(\"locationY\", o.locationY);\n\n\t\tconst exactLocationX = this.get(\"exactLocationX\", false);\n\t\tconst exactLocationY = this.get(\"exactLocationY\", false);\n\n\t\tlet xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx, exactLocationX);\n\t\tlet yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy, exactLocationY);\n\n\t\tif (this._shouldInclude(xPos)) {\n\n\t\t\tconst iPoint = this.getPoint(xPos, yPos);\n\t\t\tconst point = [iPoint.x, iPoint.y];\n\n\t\t\tiPoint.x += this._x;\n\t\t\tiPoint.y += this._y;\n\n\t\t\tdataItem.set(\"point\", iPoint);\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xPos0: number = xPos;\n\t\t\t\tlet yPos0: number = yPos;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"), exactLocationX);\n\t\t\t\t\t\t\t\tif ($type.isNaN(xPos0)) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx, exactLocationX);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"), exactLocationY);\n\t\t\t\t\t\t\t\tif ($type.isNaN(yPos0)) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy, exactLocationY);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx, exactLocationX);\n\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy, exactLocationY);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint = this.getPoint(xPos0, yPos0);\n\n\t\t\t\tpoint[2] = closeIPoint.x;\n\t\t\t\tpoint[3] = closeIPoint.y;\n\t\t\t}\n\n\t\t\tif (o.minDistance > 0) {\n\t\t\t\tconst p0 = point[0];\n\t\t\t\tconst p1 = point[1];\n\t\t\t\tconst p2 = point[2];\n\t\t\t\tconst p3 = point[3];\n\n\t\t\t\tconst prev = this._previousPoint;\n\n\t\t\t\tconst pp0 = prev[0];\n\t\t\t\tconst pp1 = prev[1];\n\t\t\t\tconst pp2 = prev[2];\n\t\t\t\tconst pp3 = prev[3];\n\n\t\t\t\tif (Math.hypot(p0 - pp0, p1 - pp1) > o.minDistance || (p2 && p3 && Math.hypot(p2 - pp2, p3 - pp3) > o.minDistance)) {\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t\tthis._previousPoint = point;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpoints.push(point);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _endLine(_points: Array<Array<number>>, _firstPoint: Array<number>) {\n\n\t}\n\n\tprotected _drawStroke(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._strokeGenerator.context(display as any);\n\t\t\t\t\tthis._strokeGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _drawFill(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._fillGenerator.context(display as any);\n\t\t\t\t\tthis._fillGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.fills = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.fills!.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\n\t\t\t}, [this.fills.template, axisRange.fills!.template]),\n\t\t);\n\n\t\taxisRange.strokes = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.strokes!.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\n\t\t\t}, [this.strokes.template, axisRange.strokes!.template])\n\t\t);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\t\t\tconst marker = legendDataItem.get(\"marker\");\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\tif (markerRectangle) {\n\t\t\t\tmarkerRectangle.setPrivate(\"visible\", false);\n\t\t\t}\n\n\t\t\tmarker.set(\"background\", Rectangle.new(marker._root, { fillOpacity: 0, fill: color(0x000000) }))\n\n\t\t\tconst legendStroke = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"], interactive: false\n\t\t\t}, [this.strokes.template]));\n\n\t\t\tthis._legendStroke = legendStroke;\n\n\t\t\tconst legendFill = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n\t\t\t}, [this.fills.template]));\n\n\t\t\tthis._legendFill = legendFill;\n\n\t\t\tconst disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n\t\t\tlegendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\tlegendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\n\t\t\tif (this.bullets.length > 0) {\n\t\t\t\tconst bulletFunction = this.bullets.getIndex(0);\n\t\t\t\tif (bulletFunction) {\n\t\t\t\t\tconst bullet = bulletFunction(marker._root, this, new DataItem(this, { legend: true }, {}));\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite instanceof Graphics) {\n\t\t\t\t\t\t\tsprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sprite) {\n\n\t\t\t\t\t\t\tsprite.setAll({\n\t\t\t\t\t\t\t\ttooltipText: undefined,\n\t\t\t\t\t\t\t\ttooltipHTML: undefined,\n\t\t\t\t\t\t\t\tfocusable: undefined,\n\t\t\t\t\t\t\t\tfocusableGroup: undefined,\n\t\t\t\t\t\t\t\tariaLabel: undefined\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tmarker.children.push(sprite);\n\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\n\t\t\t\t\t\t\tmarker.events.on(\"boundschanged\", () => {\n\t\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true,\r\n\t\t\tpinchZoomX: false,\r\n\t\t\tpinchZoomY: false\r\n\t\t});\r\n\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tlegendLabelText: \"{name}\"\r\n\t\t})\r\n\r\n\t\tr(\"Rectangle\", [\"plotbackground\", \"xy\", \"background\"]).setAll({\r\n\t\t\tfill: Color.fromHex(0x000000),\r\n\t\t\tfillOpacity: 0\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"minor\"]).setAll({\r\n\t\t\tfontSize: \"0.6em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 30,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\",\r\n\t\t\tmoveThreshold: 1\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tforceInactive: true,\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\trole: \"slider\",\r\n\t\t\t\tariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tforceInactive: true,\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\trole: \"slider\",\r\n\t\t\t\tariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tzoomOut: true,\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"header\", \"background\"]).setAll({\r\n\t\t\tcrisp: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\", \"zoomgrip\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\", \"zoomgrip\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\", \"zoomgrip\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t\tcrisp: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"minor\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.07,\r\n\t\t\t\tcrisp: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst tooltipDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n\t\t\t\"second\": language.translate(\"_date_second_full\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute_full\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour_full\"),\r\n\t\t\t\"day\": language.translate(\"_date_day_full\"),\r\n\t\t\t\"week\": language.translate(\"_date_week_full\"),\r\n\t\t\t\"month\": language.translate(\"_date_month_full\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\t\t\tmaxZoomFactor: null,\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tskipFirstMinor: true,\r\n\t\t\tweekLabelLocation: 0,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\t\t\ttooltipDateFormats: tooltipDateFormats,\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\t\t\t\t\tconst gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\r\n\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\tstrictMinMax: false,\r\n\t\t\tautoZoom: true,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\t// Hollow\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromOpen\", { fillOpacity: 0 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromOpen\", { fillOpacity: 1 });\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\r\n\t\t// AXIS RANGE GRIP\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"rangegrip\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0,\r\n\t\t\t\tfillOpacity: 0,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\twidth: 12,\r\n\t\t\t\theight: 12\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"rangegrip\", \"button\", \"icon\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tinteractive: false,\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0.5,\r\n\t\t\t\tdraw: (display: any) => {\r\n\t\t\t\t\tdisplay.moveTo(0, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(0, 12.5);\r\n\r\n\t\t\t\t\tdisplay.moveTo(2, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(2, 12.5);\r\n\r\n\t\t\t\t\tdisplay.moveTo(4, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(4, 12.5);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n\t\t}\r\n\r\n\t\tr(\"Button\", [\"rangegrip\"]).setAll({\r\n\t\t\tdraggable: true,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingBottom: 0\r\n\t\t})\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\"]).setAll({\r\n\t\t\trotation: 90,\r\n\t\t\tcursorOverStyle: \"ns-resize\",\r\n\t\t\tcenterX: p50\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\",\r\n\t\t\tcenterX: p50\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\", \"left\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\", \"right\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\", \"top\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\", \"bottom\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t}\r\n}\r\n","import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";;\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\nimport type { Animation } from \"../../core/util/Entity\";\nimport type { CategoryAxis } from \"./axes/CategoryAxis\";\nimport type { DateAxis } from \"./axes/DateAxis\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * If not set (default), cursor will show tooltips for all data items in the\n\t * same category/date.\n\t *\n\t * If set, cursor will select closest data item to pointer (mouse or touch) and\n\t * show tooltip for it.\n\t *\n\t * It will also show tooltips for all data items that are within X pixels\n\t * range (as set in `maxTooltipDistance`).\n\t *\n\t * Tooltips for data items farther then X pixels, will not be shown.\n\t *\n\t * NOTE: set it to `-1` to ensure only one tooltip is displayed, even if there\n\t * are multiple data items in the same place.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * Indicates how the distance should be measured when assessing distance\n\t * between tooltips as set in `maxTooltipDistance`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#tooltips} for more info\n\t * @since 5.2.6\n\t */\n\tmaxTooltipDistanceBy?: \"xy\" | \"x\" | \"y\";\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#ooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart horizontally.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomX?: boolean;\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart vertically.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomY?: boolean;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * horizontal zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionX?: number;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * vertical zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionY?: number;\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * A list of [[Series]] that currently have their tooltip being displayed.\n\t */\n\ttooltipSeries?: Array<XYSeries>\n\n\t/**\n\t * Array of other [[XYChart]] objects that cursors should be synced with.\n\t *\n\t * Note: cursors will be synced across the vertically stacked charts only.\n\t */\n\totherCharts?: Array<XYChart>\n\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when panning ends.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanended: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a chart and released without moving.\n\t *\n\t * `panended` event will still kick in after that.\n\t *\n\t * @since 5.2.19\n\t */\n\tpancancelled: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t *\n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotsContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t *\n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.*\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] used for any elements that need to be displayed over\n\t * regular `plotContainer`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topPlotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.topPlotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\n\tprotected _downStartX?: number;\n\tprotected _downEndX?: number;\n\n\tprotected _downStartY?: number;\n\tprotected _downEndY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.hide(0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"plotbackground\", \"xy\", \"background\"]\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event);\n\t\t}));\n\n\t\tthis._maskGrid();\n\t\tthis._setUpTouch();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tif (!this.plotContainer._display.cancelTouch) {\n\t\t\tthis.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\n\t\t}\n\t}\n\n\tprotected _maskGrid() {\n\t\tthis.gridContainer.set(\"maskContent\", true);\n\t\tthis.topGridContainer.set(\"maskContent\", true);\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tseries._unstack();\n\n\t\tif (series._posXDp) {\n\t\t\tseries._posXDp.dispose();\n\t\t}\n\n\t\tif (series._posYDp) {\n\t\t\tseries._posYDp.dispose();\n\t\t}\n\n\t\tseries.set(\"baseAxis\", undefined);\n\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t\txAxis.markDirtyExtremes();\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t\tyAxis.markDirtyExtremes();\n\t\t}\n\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries) {\n\t\t\t\t$array.remove(snapToSeries, series);\n\t\t\t}\n\t\t}\n\n\t\tsuper._removeSeries(series);\n\t}\n\n\t/**\n\t * This method is invoked when mouse wheel is used over chart's plot\n\t * container, and handles zooming/pan.\n\t *\n\t * You can invoke this method manually, if you need to mimic chart's wheel\n\t * behavior over other elements of the chart.\n\t */\n\tpublic handleWheel(event: { originalEvent: WheelEvent, point: IPoint, target: Container }) {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst wheelEvent = event.originalEvent;\n\n\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t// some page element is over the chart.\n\t\tlet prevent = false;\n\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\tprevent = true;\n\t\t}\n\t\telse {\n\t\t\treturn;\n\t\t}\n\n\t\tconst plotPoint = plotContainer.toLocal(event.point);\n\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\tconst wheelZoomPositionX = this.get(\"wheelZoomPositionX\");\n\t\tconst wheelZoomPositionY = this.get(\"wheelZoomPositionY\");\n\n\n\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\tlet newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftX * position));\n\t\t\t\t\tlet newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftX * (1 - position)));\n\n\t\t\t\t\tif (newStart == start && newEnd == end) {\n\t\t\t\t\t\tprevent = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tprevent = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\tlet newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftY * position));\n\t\t\t\t\tlet newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftY * (1 - position)));\n\n\t\t\t\t\tif (newStart == start && newEnd == end) {\n\t\t\t\t\t\tprevent = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tprevent = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\tlet newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftX * position));\n\t\t\t\t\tlet newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftX * (1 - position)));\n\n\t\t\t\t\tif (newStart == start && newEnd == end) {\n\t\t\t\t\t\tprevent = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tprevent = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\tlet newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftY * position));\n\t\t\t\t\tlet newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftY * (1 - position)));\n\n\t\t\t\t\tif (newStart == start && newEnd == end) {\n\t\t\t\t\t\tprevent = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tprevent = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tif (newStart == start && newEnd == end) {\n\t\t\t\t\t\tprevent = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tif (newStart == start && newEnd == end) {\n\t\t\t\t\t\tprevent = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tif (newStart == start && newEnd == end) {\n\t\t\t\t\t\tprevent = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start - delta;\n\t\t\t\t\tlet newEnd = end - delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tif (newStart == start && newEnd == end) {\n\t\t\t\t\t\tprevent = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (prevent) {\n\t\t\twheelEvent.preventDefault();\n\t\t}\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\t\t\t\tif ((wheelX !== \"none\" && Math.abs(wheelEvent.deltaX) != 0) || (wheelY !== \"none\" && Math.abs(wheelEvent.deltaY) != 0)) {\n\t\t\t\t\tthis.handleWheel(event);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getWheelSign(axis: Axis<AxisRenderer>) {\n\t\tlet sign = 1;\n\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\tsign = -1;\n\t\t}\n\n\t\treturn sign\n\t}\n\n\tprotected _fixWheel(start: number, end: number): [number, number] {\n\t\tconst diff = end - start;\n\t\tif (start < 0) {\n\t\t\tstart = 0;\n\t\t\tend = start + diff;\n\t\t}\n\t\tif (end > 1) {\n\t\t\tend = 1;\n\t\t\tstart = end - diff;\n\t\t}\n\n\t\treturn [start, end];\n\t}\n\n\tprotected _handlePlotDown(event: ISpritePointerEvent) {\n\t\tconst originalEvent = event.originalEvent as any;\n\n\t\tif (originalEvent.button == 2) {\n\t\t\treturn;\n\t\t}\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet local = plotContainer.toLocal(event.point);\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst pointerId = originalEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 0) {\n\t\t\t\t\tconst xAxis = this.xAxes.getIndex(0);\n\t\t\t\t\tconst yAxis = this.yAxes.getIndex(0);\n\n\n\t\t\t\t\tif (xAxis) {\n\t\t\t\t\t\tthis._downStartX = xAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndX = xAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (yAxis) {\n\t\t\t\t\t\tthis._downStartY = yAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndY = yAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\t//this._downPoint = local;\n\t\t\t\tthis._downPoint = { x: originalEvent.clientX, y: originalEvent.clientY };\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(event: ISpritePointerEvent) {\n\t\tconst downPoint = this._downPoint;\n\t\tif (downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tif (event.originalEvent.clientX == downPoint.x && event.originalEvent.clientY == downPoint.y) {\n\t\t\t\t\tconst eventType = \"pancancelled\";\n\t\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: ISpritePointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst touchEvent = event.originalEvent as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = event.point;\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\n\t\t\tdownPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\n\t\t\tlet local = plotContainer.toLocal(event.point);\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(plotContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst w = plotContainer.width();\n\t\t\tconst h = plotContainer.height();\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tmovePoint0 = plotContainer.toLocal(movePoint0)\n\t\t\t\tmovePoint1 = plotContainer.toLocal(movePoint1)\n\n\t\t\t\tdownPoint0 = plotContainer.toLocal(downPoint0)\n\t\t\t\tdownPoint1 = plotContainer.toLocal(downPoint1)\n\n\t\t\t\tif (this.get(\"pinchZoomX\")) {\n\t\t\t\t\tconst downStartX = this._downStartX;\n\t\t\t\t\tconst downEndX = this._downEndX;\n\n\t\t\t\t\tif (downStartX != null && downEndX != null) {\n\n\t\t\t\t\t\tif (downPoint0.x > downPoint1.x) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartX * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndX * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.xAxes.each((xAxis) => {\n\t\t\t\t\t\t\tlet sa = xAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = xAxis.fixPosition(e);\n\n\t\t\t\t\t\t\txAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.get(\"pinchZoomY\")) {\n\t\t\t\t\tconst downStartY = this._downStartY;\n\t\t\t\t\tconst downEndY = this._downEndY;\n\n\t\t\t\t\tif (downStartY != null && downEndY != null) {\n\n\t\t\t\t\t\tif (downPoint0.y < downPoint1.y) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartY * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndY * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.yAxes.each((yAxis) => {\n\n\t\t\t\t\t\t\tlet sa = yAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = yAxis.fixPosition(e);\n\n\t\t\t\t\t\t\tyAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tlet snapToSeries = cursor.get(\"snapToSeries\");\n\n\t\t\tif (cursor._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tif (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\n\t\t\t\t\t\t\tconst startIndex = series.startIndex();\n\t\t\t\t\t\t\tconst endIndex = series.endIndex();\n\t\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst tooltipDataItem = series.get(\"tooltipDataItem\");\n\t\t\t\t\t\t\tif (tooltipDataItem) {\n\t\t\t\t\t\t\t\tdataItems.push(tooltipDataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", closestItem);\n\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\n\t\t\t\t\t\t// removing x and y to solve #72225\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal({ x: point.x - series.x(), y: point.y - series.y() }), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.updateCursor();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"released\", () => {\n\t\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\t\tif (axis.get(\"zoomable\")) {\n\t\t\t\t\t\t\t\tthis._handleAxisSelection(axis);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position, false) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"released\", () => {\n\t\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\t\tif (axis.get(\"zoomable\")) {\n\t\t\t\t\t\t\t\tthis._handleAxisSelection(axis);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position, false) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tconst yAxis = series.get(\"yAxis\");\n\n\t\t$array.move(xAxis.series, series);\n\t\t$array.move(yAxis.series, series);\n\n\t\tseries._posXDp = series.addDisposer(xAxis.events.on(\"positionchanged\", () => {\n\t\t\tseries._fixPosition();\n\t\t}))\n\n\t\tseries._posXDp = series.addDisposer(yAxis.events.on(\"positionchanged\", () => {\n\t\t\tseries._fixPosition();\n\t\t}))\n\n\t\tif (!series.get(\"baseAxis\")) {\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tseries.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tseries.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tif (series.get(\"stacked\")) {\n\t\t\tseries._markDirtyKey(\"stacked\");\n\t\t\t$array.each(series.dataItems, (dataItem) => {\n\t\t\t\tdataItem.set(\"stackToItemY\", undefined);\n\t\t\t\tdataItem.set(\"stackToItemX\", undefined);\n\t\t\t})\n\t\t}\n\t\tseries._markDirtyAxes();\n\t\tyAxis.markDirtyExtremes();\n\t\txAxis.markDirtyExtremes();\n\t\txAxis._seriesAdded = true;\n\t\tyAxis._seriesAdded = true;\n\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t\tconst patternSet = this.get(\"patterns\")!;\n\t\tif (patternSet) {\n\t\t\tif (series.get(\"fillPattern\") == null) {\n\t\t\t\tconst pattern = patternSet.next();\n\n\t\t\t\tseries._setSoft(\"fillPattern\", pattern);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = Math.min(1, Math.max(0, cursor.getPrivate(\"positionX\", 0.5)));\n\t\tconst positionY = Math.min(1, Math.max(0, cursor.getPrivate(\"positionY\", 0.5)));\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number, priority?: \"start\" | \"end\") {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tcontainer.children.moveValue(change.value, change.newIndex);\n\t\t\t\tchange.value.processChart(this);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(axis: Axis<AxisRenderer>) {\n\t\tvar cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tthis.addDisposer(axis.on(\"start\", () => {\n\t\t\t\tthis._updateCursor();\n\t\t\t}))\n\n\t\t\tthis.addDisposer(axis.on(\"end\", () => {\n\t\t\t\tthis._updateCursor();\n\t\t\t}))\n\t\t}\n\t}\n\n\n\tpublic _handleAxisSelection(axis: Axis<any>, force?: boolean) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\n\t\t\t\tif (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\n\t\t\t\tif (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomOut\", true)) {\n\t\t\t\t\tif ($math.round(axis.get(\"start\", 0), 5) != 0 || $math.round(axis.get(\"end\", 1), 5) != 1) {\n\t\t\t\t\t\tvisible = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomOut\", true)) {\n\t\t\t\t\tif ($math.round(axis.get(\"start\", 0), 5) != 0 || $math.round(axis.get(\"end\", 1), 5) != 1) {\n\t\t\t\t\t\tvisible = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.5 && point.y >= -0.5 && point.x <= plotContainer.width() + 0.5 && point.y <= plotContainer.height() + 0.5) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst documentPoint = this._root.rootPointToDocument(global);\n\t\t\t\t\tconst chartRoot = chart._root.documentPointToRoot(documentPoint);\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(chartRoot);\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tlet hh = this.height();\n\n\t\tconst bounds = this._root.tooltipContainer.get(\"layerMargin\");\n\n\t\tif (bounds) {\n\t\t\tif (bounds.bottom > hh) {\n\t\t\t\thh = bounds.bottom;\n\t\t\t}\n\t\t}\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tif (!series.isHidden()) {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\tdistance = Math.abs(movePoint.x - point.x);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\tdistance = Math.abs(movePoint.y - point.y);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst tooltipSeries: Array<XYSeries> = [];\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip && !tooltip.get(\"forceHidden\")) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point && closestPoint) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.x - point.x);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.y - point.y);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\n\t\t\t\t\t\ttooltipSeries.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tlet totalTooltipH = 0;\n\t\t\tlet tooltipCount = 0;\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\")!.y, a.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\ttooltipCount++;\n\t\t\t\t\ttotalTooltipH += height;\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\ttooltip.setPrivate(\"customData\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (prevY < 0) {\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = prevY;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\ttooltipCount++;\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - prevY;\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - prevY;\n\t\t\t\t\t\t\tif (top < prevBottom) {\n\t\t\t\t\t\t\t\ttop = prevBottom;\n\t\t\t\t\t\t\t\tbottom = top + tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bounds.bottom - prevY + tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltips.reverse();\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\ttooltipCount++;\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\ttotalTooltipH += height;\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + hh, prevY + height) })\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\n\t\t\t\tif (prevY > hh) {\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = hh;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\ttooltipCount++;\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - (hh - prevY);\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - (hh - prevY);\n\t\t\t\t\t\t\tif (bottom > prevBottom) {\n\t\t\t\t\t\t\t\tbottom = prevBottom\n\t\t\t\t\t\t\t\ttop = bottom - tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bottom - tooltip.height() - tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (totalTooltipH == 0 && tooltipCount > 0) {\n\t\t\t\tthis._disposers.push(this.root.events.once(\"frameended\", () => {\n\t\t\t\t\tthis.arrangeTooltips();\n\t\t\t\t}))\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (axis.get(\"zoomOut\", true)) {\n\t\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\t\taxis.zoom(0, 1);\n\t\t\t}\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (axis.get(\"zoomOut\", true)) {\n\t\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\t\taxis.zoom(0, 1);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\t// Explicitly disposing cursor to avoid memory leak of cursor adding\n\t\t// keyboard events after parent chart has been disposed\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.dispose();\n\t\t}\n\t}\n\n}\n","import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t *\n\t * Possible values: `\"xy\"` (default), `\"x\"`, `\"y\"`, `\"x!\"`, `\"y!\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#snapping-to-series} for more info\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\" | \"x!\" | \"y!\";\n\n\t/**\n\t * An array of other [[XYCursor]] objects to sync this cursor with.\n\t *\n\t * If set will automatically move synced cursors to the same position within\n\t * their respective axes as the this cursor assumin same XY coordinates of\n\t * the pointer.\n\t *\n\t * NOTE: Syncing is performed using actual X/Y coordinates of the point of\n\t * mouse cursor's position or touch. It means that they will not sync by axis\n\t * positions, but rather by screen coordinates. For example vertical lines\n\t * will not sync across horizontally laid out charts, and vice versa.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#syncing-cursors} for more info\n\t * @since 5.1.4\n\t */\n\tsyncWith?: Array<XYCursor>;\n\n\t/**\n\t * Minimum distance in pixels between down and up points.\n\t *\n\t * If a distance is less than the value of `moveThreshold`, the zoom or\n\t * selection won't happen.\n\t *\n\t * @since 5.2.20\n\t * @default 1\n\t */\n\tmoveThreshold?: number\n\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n\t/**\n\t * Last global point to which cursor moved\n\t */\n\tlastPoint?: IPoint;\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\tpoint: IPoint,\n\t\ttarget: XYCursor,\n\t\toriginalEvent?: IPointerEvent\n\t};\n\n\t/**\n\t * Kicks in when cursor's is hidden when user rolls-out of the plot area\n\t */\n\tcursorhidden: {\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a plot area and released without\n\t * moving (only when behavior is `\"selectX\"`).\n\t *\n\t * @since 5.4.7\n\t */\n\tselectcancelled: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\tprotected _alwaysShow: boolean = false;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 30\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\tprotected _lastPoint2: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _toX?: number;\n\tprotected _toY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleXLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleYLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"focus\", () => this._handleLineFocus()));\n\t\tthis._disposers.push(this.lineX.events.on(\"blur\", () => this._handleLineBlur()));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"focus\", () => this._handleLineFocus()));\n\t\tthis._disposers.push(this.lineY.events.on(\"blur\", () => this._handleLineBlur()));\n\n\t\tif ($utils.supports(\"keyboardevents\")) {\n\t\t\tthis._disposers.push($utils.addEventListener(document, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\tthis._handleLineMove($utils.getEventKey(ev), ev.ctrlKey);\n\t\t\t}));\n\t\t}\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\n\t\t}\n\t}\n\n\tprotected _handleXLine() {\n\t\tlet x = this.lineX.x();\n\t\tlet visible = true;\n\t\tif (x < 0 || x > this.width()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineX.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleYLine() {\n\t\tlet y = this.lineY.y();\n\t\tlet visible = true;\n\t\tif (y < 0 || y > this.height()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineY.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleLineMove(key: string, ctrlKey?: boolean) {\n\t\tlet dir: any = \"\";\n\n\t\tconst chart = this.chart;\n\n\t\tlet axis: Axis<AxisRenderer> | undefined;\n\t\tif (chart && chart.xAxes.length) {\n\t\t\tif (this._root.focused(this.lineX)) {\n\t\t\t\tdir = \"positionX\";\n\t\t\t\taxis = chart.xAxes.getIndex(0);\n\t\t\t}\n\t\t\telse if (this._root.focused(this.lineY)) {\n\t\t\t\taxis = chart.yAxes.getIndex(0);\n\t\t\t\tdir = \"positionY\";\n\t\t\t}\n\n\t\t\tlet m = 1;\n\t\t\tif (ctrlKey) {\n\t\t\t\tm = 5;\n\t\t\t}\n\n\t\t\tif (axis) {\n\t\t\t\tlet inversed = axis.get(\"renderer\").get(\"inversed\", false);\n\t\t\t\tlet step;\n\t\t\t\tif (key == \"ArrowRight\" || key == \"ArrowDown\") {\n\t\t\t\t\tstep = 1;\n\t\t\t\t}\n\t\t\t\telse if (key == \"ArrowLeft\" || key == \"ArrowUp\") {\n\t\t\t\t\tstep = -1;\n\t\t\t\t}\n\t\t\t\telse if (key == \"Tab\") {\n\t\t\t\t\tstep = 0;\n\t\t\t\t}\n\n\t\t\t\tif (step != null) {\n\t\t\t\t\tif (inversed) {\n\t\t\t\t\t\tstep *= -1;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.set(dir, axis.nextPosition(step * m));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleLineFocus() {\n\t\tthis._alwaysShow = this.get(\"alwaysShow\", false);\n\t\tthis.setAll({\n\t\t\tpositionX: this.getPrivate(\"positionX\", 0),\n\t\t\tpositionY: this.getPrivate(\"positionY\", 0),\n\t\t\talwaysShow: true\n\t\t});\n\n\t\tthis._handleLineMove(\"Tab\");\n\t}\n\n\tprotected _handleLineBlur() {\n\t\tif (this.lineX.isFocus() || this.lineY.isFocus()) {\n\t\t\tthis.setAll({\n\t\t\t\tpositionX: undefined,\n\t\t\t\tpositionY: undefined,\n\t\t\t\talwaysShow: this._alwaysShow\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleSyncWith() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst syncWith = this.get(\"syncWith\");\n\t\t\tconst otherCharts: Array<XYChart> = [];\n\t\t\tif (syncWith) {\n\t\t\t\t$array.each(syncWith, (cursor) => {\n\t\t\t\t\tconst chart = cursor.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\totherCharts.push(chart)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tchart._otherCharts = otherCharts;\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._handleSyncWith();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tconst positionX = this.get(\"positionX\");\n\t\t\tconst positionY = this.get(\"positionY\");\n\n\t\t\tif (positionX == null && positionY == null) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\tthis.handleMove();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tlet x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 3);\n\t\tif (this._toX != x) {\n\t\t\tthis.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toX = x;\n\t\t}\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tlet y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 3);\n\t\tif (this._toY != y) {\n\t\t\tthis.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toY = y;\n\t\t}\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic updateCursor() {\n\t\tif (this.get(\"alwaysShow\")) {\n\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t}\n\t\tthis.handleMove();\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tthis._handleSyncWith();\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tthis.updateCursor();\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event);\n\t\t\tif (!event.native && !this.isHidden()) {\n\t\t\t\tthis._handleMove(event);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif (!this.get(\"syncWith\")) {\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n\t\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t\t// we're not dragging.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._handleMove(event);\n\n\t\t\tif (Math.hypot(this._lastPoint2.x - event.point.x, this._lastPoint2.y - event.point.y) > 1) {\n\t\t\t\tthis._handleLineBlur();\n\t\t\t\tthis._lastPoint2 = event.point;\n\t\t\t}\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: ISpritePointerEvent) {\n\t\tif ((event.originalEvent as any).button == 2) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst rootPoint = event.point;\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(event: ISpritePointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tconst rootPoint = event.point;\n\t\t\t\tlet local = this._display.toLocal(rootPoint);\n\n\t\t\t\tconst downPoint = this._downPoint;\n\t\t\t\tconst moveThreshold = this.get(\"moveThreshold\", 1);\n\t\t\t\tif (local && downPoint) {\n\t\t\t\t\tlet dispatch = false;\n\t\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.x - downPoint.x) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.y - downPoint.y) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dispatch) {\n\t\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconst type = \"selectcancelled\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: ISpritePointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\n\t\t\t\tthis.set(\"forceHidden\", true)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"forceHidden\", false)\n\t\t\t}\n\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = event.point;\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\t\t\tthis.setPrivate(\"lastPoint\", rootPoint);\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y }, false, event.originalEvent);\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * Moves the cursor to X/Y coordinates within chart container (`point`).\n\t *\n\t * If `skipEvent` parameter is set to `true`, the move will not invoke\n\t * the `\"cursormoved\"` event.\n\t *\n\t * @param  point      X/Y to move cursor to\n\t * @param  skipEvent  Do not fire \"cursormoved\" event\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean, originalEvent?: IPointerEvent) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && (this._inPlot(local) || this._downPoint)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tlet snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tif (this._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, point: point, originalEvent: originalEvent });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\n\t\t\t\tconst type = \"cursorhidden\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n","import type { Label } from \"../render/Label\";\nimport type { Graphics } from \"../render/Graphics\";\n\nimport { RoundedRectangle } from \"../render/RoundedRectangle\";\nimport { Container, IContainerPrivate, IContainerSettings, IContainerEvents } from \"./Container\";\n\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IButtonSettings extends IContainerSettings {\n\n\t/**\n\t * A [[Label]] element for the button to show as a label.\n\t */\n\tlabel?: Label;\n\n\t/**\n\t * A [[Graphics]] element for the button to show as icon.\n\t */\n\ticon?: Graphics;\n\n}\n\nexport interface IButtonPrivate extends IContainerPrivate {\n}\n\nexport interface IButtonEvents extends IContainerEvents {\n}\n\n/**\n * Draws an interactive button.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/buttons/} for more info\n * @important\n */\nexport class Button extends Container {\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"button\"]);\n\n\t\tsuper._afterNew();\n\n\t\tif (!this._settings.background) {\n\t\t\tthis.set(\"background\", RoundedRectangle.new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(this._settings.themeTags, [\"background\"])\n\t\t\t}));\n\t\t}\n\n\t\tthis.setPrivate(\"trustBounds\", true);\n\t}\n\n\tdeclare public _settings: IButtonSettings;\n\tdeclare public _privateSettings: IButtonPrivate;\n\tdeclare public _events: IButtonEvents;\n\n\tpublic static className: string = \"Button\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([Button.className]);\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"icon\")) {\n\t\t\tconst previous = this._prevSettings.icon;\n\t\t\tconst icon = this.get(\"icon\")!;\n\t\t\tif (icon !== previous) {\n\t\t\t\tthis._disposeProperty(\"icon\");\n\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (icon) {\n\t\t\t\t\tthis.children.push(icon);\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.icon = icon;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"label\")) {\n\t\t\tconst previous = this._prevSettings.label;\n\t\t\tconst label = this.get(\"label\")!;\n\t\t\tif (label !== previous) {\n\t\t\t\tthis._disposeProperty(\"label\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\n\t\t\t\tif (label) {\n\t\t\t\t\tthis.children.push(label);\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.label = label;\n\t\t\t}\n\t\t}\n\t}\n}\n"],"names":["AxisTick","Tick","constructor","Object","defineProperty","classNames","concat","className","Grid","Graphics","_beforeChanged","super","this","isPrivateDirty","_clear","AxisLabel","Label","AxisRenderer","addDisposer","ListTemplate","Template","new","_new","_root","themeTags","$utils","ticks","template","get","grid","axisFills","labels","makeTick","dataItem","tick","make","_setDataItem","setRaw","set","axis","labelsContainer","children","push","makeGrid","gridContainer","makeAxisFill","axisFill","makeLabel","label","moveValue","axisLength","gridCount","_updatePositions","_afterNew","thumb","_disposers","events","on","event","_handleThumbDown","_handleThumbUp","_handleThumbMove","isDirty","root","once","markDirtySize","_changed","pan","removeValue","_thumbDownPoint","toLocal","point","_downStart","_downEnd","_event","undefined","downPoint","downStart","downEnd","extra","_getPan","Math","min","zoom","_point1","_point2","positionToCoordinate","position","_inversed","_end","_axisLength","_start","updateTooltipBounds","_tooltip","_updateSize","markDirty","toAxisPosition","start","end","toGlobalPosition","fixPosition","_updateLC","toggleVisibility","sprite","minPosition","maxPosition","setPrivate","_positionTooltip","tooltip","chart","_display","toGlobal","inPlot","hide","processAxis","AxisRendererX","Rectangle","width","p100","isMeasured","_settings","setPrivateRaw","gridTemplate","display","graphics","moveTo","lineTo","height","ghostLabel","opposite","inside","axisChildren","addTag","removeTag","topAxesContainer","indexOf","insertIndex","bottomAxesContainer","_a","_applyThemes","each","_markDirtyRedraw","point1","point2","x","_ls","_lc","parent","w","innerWidth","topGridContainer","bulletsContainer","y","plotContainer","axisHeader","length","setAll","verticalLayout","layout","positionToPoint","updateTick","endPosition","count","$type","location","updateLabel","updateGrid","updateBullet","bullet","bulletPosition","roundAxisPosition","previousBullet","_bullets","d","previousSprite","updateFill","fill","x0","x1","fillDrawMethod","h","positionTooltip","num","global","pointerOrientation","bounds","left","right","top","bottom","oldBounds","AxisRendererY","renderer","rightAxesContainer","leftAxesContainer","horizontalLayout","innerHeight","y0","y1","Axis","Component","Container","List","background","interfaceColors","_dispose","dispose","axisRanges","onAll","change","type","$array","oldValues","_processAxisRange","newValue","disposeDataItem","oldValue","Error","value","_createGhostLabel","DataItem","adapters","disable","opacity","tooltipText","tooltipHTML","interactive","_updateFinals","duration","priority","sAnimation","_sAnimation","eAnimation","_eAnimation","maxDeviation","maxZoomFactor","getPrivate","maxZoomFactorReal","minZoomCount","dataItems","maxZoomCount","Infinity","minZoomFactor","_handleAxisSelection","playing","to","easing","animate","key","markDirtyKey","stop","series","_series","_createAssets","_rangesDirty","_prepareDataItem","above","container","_dataItem","_index","markDirtyExtremes","markDirtySelectionExtremes","_calculateTotals","_updateAxisRanges","axisRange","_seriesAxisRanges","_prepareChildren","_updateCursor","delta","rendererTags","toLowerCase","_updateTooltipBounds","_updateBounds","processChart","axisHeadersContainer","onPrivate","hideDataItem","_toggleFHDataItem","showDataItem","forceHidden","fh","_toggleDataItem","visible","v","tags","minor","m","remove","_b","_c","_processBullet","axisBullet","_afterChanged","_updateChartLayout","_seriesAdded","_updateGhost","getCellWidthPosition","isHidden","localBounds","gWidth","ceil","text","_getText","_handleCursorPosition","snapToSeries","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","updateLegendMarker","updateLegendValue","tooltipDataItem","showDataItemTooltip","_updateTooltipText","show","getTooltipText","_location","_handleSeriesRemoved","handleCursorShow","handleCursorHide","processSeriesDataItem","_fields","_clearDirty","_sizeDirty","coordinateToPosition","coordinate","shouldGap","_nextItem","_autoGapCount","_fieldName","createAxisRange","axisDataItem","_groupSeriesData","ValueAxis","_dirtyExtremes","_dirtySelectionExtremes","_prevSettings","syncWithAxis","_syncDp","MultiDisposer","someDirty","_valuesDirty","_getMinMax","_handleSizeDirty","_isPanning","getMM","letter","xAxes","yAxes","_getSelectionMinMax","_groupData","_handleRangeChange","_prepareAxisItems","_baseValue","baseValue","_dseHandled","_formatText","numberFormat","formatter","getNumberFormatter","format","max","logarithmic","step","selectionMin","selectionMax","differencePower","minLog","_minLogAdjusted","minRealLog","_minRealLog","pow","log","LOG10E","minorLabelsEnabled","minorGridEnabled","stepPower","floor","abs","stepAdjusted","round","minorGridCount","$math","minorStep","i","previous","_dataItems","processDataItem","nextValue","minorValue","_adjustMinMax","minorDataItem","minorDataItems","minorLabel","decCount","j","inited","_markDirtyAxes","endValue","valueToPosition","fillEndPosition","labelEndPosition","labelEndValue","hasTag","fillRule","positionToValue","minMaxStep","stepDecimalPlaces","E","treatZeroAs","valueToFinalPosition","getX","getY","getDataItemCoordinateX","field","_cellLocation","axisLocation","getDataItemPositionX","component","getStackedXValueWorking","getDataItemCoordinateY","getDataItemPositionY","getStackedYValueWorking","basePosition","cellEndValue","fixSmallStep","_fixMin","_fixMax","startIndex","vc","endIndex","fieldWorking","sum","total","totalPercent","minDefined","maxDefined","extraMin","extraMax","selectionStrictMinMax","strictMinMax","seriesMin","seriesMax","outOfSelection","minX","maxX","minY","maxY","isShowing","range","_minReal","_maxReal","smin","_deltaMinMax","minMaxStep2","selectionMinReal","selectionMaxReal","_syncAxes","len","LN10","minDiff","diff","initialMin","initialMax","minAdapted","fold","maxAdapted","_getDelta","strictMinMaxSelection","strict","_fixZoomFactor","_saveMinMax","animatePrivate","exponent","power","_min","_max","strictMode","difference","stepDivisor","maxPrecision","ceiledStep","Number","MAX_VALUE","maxCount","minCount","_adjustPosition","extraDecimals","decimals","index","oldDiff","fieldName","zoomToValues","syncMin","syncMax","syncStep","currentCount","synced","c","omin","omax","ostep","_checkSync","nextPosition","CategoryAxis","fields","_afterDataChange","_itemMap","indices","_getIndices","adjustZoom","getIndices","stopped","zoomToIndexes","startCategory","endCategory","baseAxis","xAxis","yAxis","openKey","otherAxis","startDataItem","endDataItem","findDataItem","categoryAxis","category","direction","idx","categoryToIndex","searchCategory","item","hasValue","__valueXShowFields","__valueYShowFields","frequency","_frequency","f","fillIndex","categoryLocation","endCategoryLocation","indexToPosition","fillEndIndex","NaN","cellLocation","_axisLocation","final","startLocation","endLocation","name","modCount","acc","categoryToPosition","dataItemToPosition","axisPositionToIndex","modifiedLen","cellSizes","cellSize","rel","populateString","markDirtyText","seriesDataItem","zoomToCategories","XYSeries","Series","valueFields","_setRawDefault","_removeAxisRange","states","create","_makeFieldNames","_onDataClear","$object","_dataSets","_key","_updateFields","_valueXFields","_valueYFields","_valueXShowFields","_valueYShowFields","valueXFields","split","valueYFields","_shouldMakeBullet","minBulletDistance","_xField","_yField","xName","xCapName","yName","yCapName","xLetter","yLetter","open","low","high","_xOpenField","_xLowField","_xHighField","_yOpenField","_yLowField","_yHighField","_fixVC","hiddenState","lookup","sequencedInterpolation","_handleMaskBullets","_fixPosition","tooltipFieldX","_tooltipFieldX","tooltipFieldY","_tooltipFieldY","stacked","_dataProcessed","_stack","_unstack","getStackedXValue","getStackedYValue","_seriesValuesDirty","_markStakedDirtyStack","_dataGrouped","_stackDirty","_showBullets","_psi","_pei","_selectionProcessed","vcx","vcy","processYSelectionDataItem","processXSelectionDataItem","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","_makeRangeMask","mainContainerMask","_mainContainerMask","target","draw","mainContainer","mask","_markDirtyKey","_updateChildren","_x","_y","seriesIndex","_couldStackTo","getIndex","_stackDataItems","_reallyStackedTo","_stackedSeries","uid","_handleRemoved","stackToItemKey","stackToNegative","s","stackToSeries","stackToItem","stackValue","stackedToSeries","createLegendMarker","_axesDirty","_markDataSetDirty","_aggregatesCalculated","_positionBullet","locationX","locationY","exactLocationX","exactLocationY","positionX","positionY","getPoint","_shouldShowBullet","realField","previousBounds","yo","xo","isType","_positionX","_positionY","setDataSet","id","_handleDataSetChange","_dataSetId","isEnabled","dispatch","resetGrouping","dataSet","_mainDataItems","mainDataItems","bullets","promises","_super","call","then","_isShowing","_sequencedShowHide","Promise","all","_isHiding","_valueFields","waitForStop","_markDirtyStack","stackedSeries","_skipped","itemLocationX","itemLocationY","xPos","_aLocationX0","_aLocationX1","yPos","_aLocationY0","_aLocationY1","_getTooltipTarget","hideTooltip","legendDataItem","txt","_emptyDataItem","valueLabel","_getItemReaderLabel","_shouldInclude","_position","resetExtremes","_adjustStartIndex","baseDuration","minSelection","dl","BaseColumnSeries","_makeGraphics","listTemplate","makeColumn","valueAxis","_createGraphics","_ph","_pw","columnsTemplate","columns","clusterCount","xRenderer","yRenderer","cellStartLocation","cellEndLocation","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_toggleColumn","_beforeColumnsDraw","axisCase","_updateGraphics","_afterColumnsDraw","_columnsUpdated","markerRectangle","ds","visualSettings","setting","graphicsArray","rangeGraphics","previousDataItem","xField","yField","valueX","valueY","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","l","r","t","b","fitW","fitH","Percent","offset","stackToItemY","stackToItemX","_applyGraphicsStates","_updateSeriesGraphics","maxWidth","maxHeight","ptl","pbr","tooltipPoint","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","close","previousClose","apply","list","lastDataItem","column","ColumnSeries","RoundedRectangle","virtualParent","allColumnsData","allColumns","clear","stroke","strokeWidth","strokeOpacity","fillOpacity","beginFill","beginPath","lineStyle","drawRect","endStroke","endFill","strokWidth","Array","prototype","slice","from","Linear","context","_context","areaStart","_line","areaEnd","lineStart","_point","lineEnd","closePath","p","defined","constant","curve","curveLinear","output","path","withPath","line","data","buffer","n","array","defined0","pointX","pointY","_","arguments","area","k","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","LineSeries","strokes","fills","_fillGenerator","makeStroke","makeFill","_strokeTemplate","_fillTemplate","legendStroke","_legendStroke","legendFill","_legendFill","fillPattern","curveFactory","_strokeGenerator","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","hasValues","dataContext","_endIndex","_clearGraphics","_sindex","_dindex","_startSegment","dataItemIndex","currentEndIndex","autoGapCount","connect","fillTemplate","originalTemplate","strokeTemplate","xOpenFieldValue","yOpenFieldValue","basePosX","basePosY","baseField","segments","points","minDistance","fillVisible","getOpen","o","rangeStrokeTemplate","rangeFillTemplate","_getPoints","nextItem","_endLine","_drawStroke","_drawFill","iPoint","xPos0","yPos0","closeIPoint","p0","p1","p2","p3","prev","_previousPoint","pp0","pp1","pp2","pp3","hypot","_points","_firstPoint","segment","marker","color","disabledColor","bulletFunction","legend","focusable","focusableGroup","ariaLabel","XYChartDefaultTheme","Theme","setupDefaultRules","ic","language","rule","bind","colors","ColorSet","paddingLeft","paddingRight","paddingTop","paddingBottom","panX","panY","wheelStep","arrangeTooltips","pinchZoomX","pinchZoomY","legendLabelText","Color","fromHex","saturation","setColor","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","minGridDistance","centerY","fontSize","populateText","centerX","behavior","layer","exportable","snapToSeriesBy","moveThreshold","forceInactive","strokeDasharray","role","translate","zoomOut","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","multiLocation","p50","crisp","inversed","cursorOverStyle","gridIntervals","timeUnit","dateFormats","periodChangeDateFormats","tooltipDateFormats","markUnitChange","groupData","groupCount","skipFirstMinor","weekLabelLocation","groupIntervals","intervalDuration","baseInterval","gridInterval","$time","Date","locale","firstDayOfWeek","utc","timezone","getTime","val","autoZoom","baseUnit","maskBullets","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","percent","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","draggable","rotation","XYChart","SerialChart","ListAutoDispose","chartContainer","yAxesAndPlotContainer","maskContent","plotsContainer","topPlotContainer","Button","icon","_defaultThemes","zoomOutButton","seriesContainer","_processAxis","_handlePlotDown","_handlePlotUp","_handlePlotMove","_maskGrid","_setUpTouch","cancelTouch","_removeSeries","_posXDp","_posYDp","cursor","handleWheel","wheelX","wheelY","wheelEvent","originalEvent","prevent","plotPoint","shiftY","deltaY","shiftX","deltaX","wheelZoomPositionX","wheelZoomPositionY","newStart","newEnd","_handleWheelAnimation","_getWheelSign","se","_fixWheel","preventDefault","_handleSetWheel","_wheelDp","sign","button","local","pointerId","_downPoints","_downStartX","_downEndX","_downStartY","_downEndY","_downPoint","clientX","clientY","_panStart","_panEnd","eventType","animation","_dispatchWheelAnimation","_movePoints","_handlePinch","documentPointToRoot","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","downPoints","movePoints","movePoint","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","downPos0","downPos1","movePos0","movePos1","e","sa","ea","downStartY","downEndY","cursorPoint","isHiding","closestItem","distance","handleMove","updateCursor","_addCursor","_colorize","_disposeProperty","_setChart","_pushPropertyDisposer","_handleCursorSelectEnd","_handleScrollbar","grip","_handleZoomOut","_processSeries","colorSet","next","_setSoft","patternSet","pattern","downPositionX","downPositionY","position0","position1","axes","axisStart","axisEnd","zoomAnimation","updateScrollbar","_removeAxis","setIndex","newIndex","isDisposed","axisParent","gridParent","topGridParent","force","updateGrips","otherCharts","_otherCharts","chartPlotContainer","documentPoint","rootPointToDocument","chartRoot","hh","tooltipContainer","plotT","plotB","tooltips","closest","closestPoint","_movePoint","maxTooltipDistance","maxTooltipDistanceBy","tooltipSeries","hidden","_tooltipToLocal","totalTooltipH","tooltipCount","sort","a","$order","prevY","_fy","reverse","prevBottom","XYCursor","_drawLines","setTimeout","lineX","_handleXLine","lineY","_handleYLine","_handleLineFocus","_handleLineBlur","document","ev","_handleLineMove","ctrlKey","dir","focused","_alwaysShow","alwaysShow","isFocus","_tooltipX","_updateXLine","_tooltipY","_updateYLine","_handleSyncWith","syncWith","_getPoint","_toX","_toY","_handleMove","_handleCursorDown","_handleCursorUp","native","_lastPoint2","selection","_inPlot","rootPoint","_getPosition","charAt","lastPoint","_lastPoint","skipEvent","xyPos","userPositionX","userPositionY","xy","_updateLines","_updateSelection","_onHide","_onShow"],"sourceRoot":""}